{"version":3,"sources":["emojipedia.js","components/context/ApiContext.js","components/Entry.jsx","components/Search.jsx","components/Definition.jsx","components/App.jsx","index.js"],"names":["emojipedia","ApiContext","React","createContext","ApiProvider","children","useState","data","setData","loading","setLoading","error","setError","query","a","axios","get","then","response","filter","e","emoji","length","push","shift","console","log","catch","err","Provider","value","getData","Entry","props","className","role","aria-label","name","description","Search","search","setSearch","inputRef","useRef","useContext","ref","onChange","target","type","placeholder","onClick","current","Definition","createEmoji","definition","key","App","map","ReactDOM","render","document","getElementById"],"mappings":"iRAIeA,EAJI,GCINC,EAAaC,IAAMC,gBAEnBC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAH2C,4CAI3C,WAAuBC,GAAvB,SAAAC,EAAA,6DACEJ,GAAW,GACXE,GAAS,GAFX,SAGQG,IACHC,IAAIH,GACJI,MAAK,SAACC,GACLV,EAAQU,EAASX,MACdP,EAAWmB,QAAO,SAAAC,GAAC,OAAIA,EAAEC,QAAUH,EAASX,KAAKc,SAAOC,OAAS,IAEjEtB,EAAWsB,QAAU,GACtBtB,EAAWuB,KAAKL,EAASX,MACzBP,EAAWwB,QACXC,QAAQC,IAAI1B,EAAY,mBAExBA,EAAWuB,KAAKL,EAASX,MACzBkB,QAAQC,IAAI1B,QAKf2B,OAAM,SAACC,GAAD,OAAShB,GAAS,MApB7B,OAqBEF,GAAW,GArBb,4CAJ2C,sBA4B3C,OACE,kBAACT,EAAW4B,SAAZ,CACEC,MAAO,CACLC,QA/BqC,4CAgCrCxB,OACAE,UACAC,aACAC,QACAC,aAGDP,IC7BQ2B,MAdf,SAAeC,GACb,OACE,yBAAKC,UAAU,QACb,4BACE,0BAAMA,UAAU,QAAQC,KAAK,MAAMC,aAAW,gBAC3CH,EAAMZ,OAET,8BAAOY,EAAMI,OAEf,4BAAKJ,EAAMK,e,QCPF,SAASC,IACtB,MAA4BjC,mBAAS,IAArC,mBAAOkC,EAAP,KAAeC,EAAf,KACMC,EAAWC,mBACTZ,EAAYa,qBAAW3C,GAAvB8B,QAER,OACE,yBAAKG,UAAU,wBACb,2BACEW,IAAKH,EACLI,SAAU,SAAC1B,GAAD,OAAOqB,EAAUrB,EAAE2B,OAAOjB,QACpCI,UAAU,aACVc,KAAK,OACLC,YAAY,oBAEd,4BACEf,UAAU,kCACVgB,QAAS,WACPnB,EAAQ,6BAAD,OAA8BS,IACrCE,EAASS,QAAQrB,MAAQ,KAGlC,kBAAC,IAAD,QCtBc,SAASsB,IACtB,MAA0BR,qBAAW3C,GAA7BM,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAEd,OACE,yBAAKyB,UAAU,gCACZ3B,EAAKc,QAAUZ,EACd,yBAAKyB,UAAU,eACb,4BACE,0BAAMA,UAAU,QAAQC,KAAK,MAAMC,aAAW,gBAC3C7B,EAAKc,OAER,8BAAOd,EAAK8B,MACZ,4BAAK9B,EAAK+B,eAId7B,GACE,yBAAKyB,UAAU,eACb,yBAAKA,UAAU,cCd3B,SAASmB,EAAYC,GACnB,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAWjB,KAChBhB,MAAOiC,EAAWjC,MAClBgB,KAAMiB,EAAWjB,KACjBC,YAAagB,EAAWhB,cAuCfkB,MAlCf,WACE,MAAwBZ,qBAAW3C,GAA3BM,EAAR,EAAQA,KAAMI,EAAd,EAAcA,MAEd,OACE,6BACE,4BACE,wCAEF,kBAAC4B,EAAD,MACA,kBAACa,EAAD,MACA,wBAAIlB,UAAU,cACX3B,EAAKc,MACJ,yBAAKa,UAAU,UACb,wBAAIA,UAAU,WAAd,WACA,yBAAKA,UAAU,eAAelC,EAAWyD,IAAIJ,KAE5C1C,EAOH,kBAAC,EAAD,CACEU,MAAM,eACNgB,KAAK,mBACLC,YAAY,wDATd,kBAAC,EAAD,CACEjB,MAAM,eACNgB,KAAK,mBACLC,YAAY,mFCjCxBoB,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,EAAD,OAGFC,SAASC,eAAe,W","file":"static/js/main.23b2ef5e.chunk.js","sourcesContent":["const emojipedia = [\n  \n];\n\nexport default emojipedia;","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport emojipedia from \"../../emojipedia\";\n\nexport const ApiContext = React.createContext();\n\nexport const ApiProvider = ({ children }) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  async function getData(query) {\n    setLoading(true);\n    setError(false);\n    await axios\n      .get(query)\n      .then((response) => {\n        setData(response.data);\n        if(emojipedia.filter(e => e.emoji === response.data.emoji).length > 0) return\n\n        if(emojipedia.length >= 6){\n          emojipedia.push(response.data)\n          emojipedia.shift();\n          console.log(emojipedia, 'Limit reached')\n        }else{\n          emojipedia.push(response.data)\n          console.log(emojipedia)\n        }\n\n\n      })\n      .catch((err) => setError(true));\n    setLoading(false);\n  }\n\n  return (\n    <ApiContext.Provider\n      value={{\n        getData,\n        data,\n        loading,\n        setLoading,\n        error,\n        setError,\n      }}\n    >\n      {children}\n    </ApiContext.Provider>\n  );\n};\n","import React from \"react\";\n\nfunction Entry(props) {\n  return (\n    <div className=\"term\">\n      <dt>\n        <span className=\"emoji\" role=\"img\" aria-label=\"Tense Biceps\">\n          {props.emoji}\n        </span>\n        <span>{props.name}</span>\n      </dt>\n      <dd>{props.description}</dd>\n    </div>\n  );\n}\n\nexport default Entry;\n","import React, { useState, useContext, useRef } from \"react\";\nimport { FiSearch } from \"react-icons/fi\";\nimport { ApiContext } from \"./context/ApiContext\";\n\nexport default function Search() {\n  const [search, setSearch] = useState(\"\");\n  const inputRef = useRef();\n  const { getData } = useContext(ApiContext);\n\n  return (\n    <div className=\"flex-center flex-col\">\n      <input\n        ref={inputRef}\n        onChange={(e) => setSearch(e.target.value)}\n        className=\"search-bar\"\n        type='text'\n        placeholder=\"Enter any emoji\"\n      />\n      <button\n        className=\"search-btn flex-row flex-center\"\n        onClick={() => {\n          getData(`http://localhost:8080/api/${search}`);\n          inputRef.current.value = \"\";\n          }}\n      >\n <FiSearch />\n      </button>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { ApiContext } from \"./context/ApiContext\";\n\nexport default function Definition() {\n  const { data, loading } = useContext(ApiContext);\n\n  return (\n    <div className=\"search-container flex-center\">\n      {data.emoji && !loading ? (\n        <div className=\"search-term\">\n          <dt>\n            <span className=\"emoji\" role=\"img\" aria-label=\"Tense Biceps\">\n              {data.emoji}\n            </span>\n            <span>{data.name}</span>\n            <dd>{data.description}</dd>\n          </dt>\n        </div>\n      ) : (\n        loading && (\n          <div className=\"search-term\">\n            <div className=\"loading\" />\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { ApiContext } from \"./context/ApiContext\";\nimport Entry from \"./Entry\";\nimport emojipedia from \"../emojipedia\";\nimport Search from \"./Search\";\nimport Definition from \"./Definition\";\n\nfunction createEmoji(definition) {\n  return (\n    <Entry\n      key={definition.name}\n      emoji={definition.emoji}\n      name={definition.name}\n      description={definition.description}\n    />\n  );\n}\n\nfunction App() {\n  const { data, error } = useContext(ApiContext);\n\n  return (\n    <div>\n      <h1>\n        <span>Emoty</span>\n      </h1>\n      <Search />\n      <Definition />\n      <dl className=\"dictionary\">\n        {data.emoji ? (\n          <div className='w-full'>\n            <h1 className=\"history\">History</h1>\n            <div className=\"history-map\">{emojipedia.map(createEmoji)}</div>\n          </div>\n        ) : !error ? (\n          <Entry\n            emoji=\"😁\"\n            name=\"Welcome to Emoty\"\n            description=\"Just enter a single emoji and hit search, then wait for the magic to happen\"\n          />\n        ) : (\n          <Entry\n            emoji=\"🙁\"\n            name=\"No results found\"\n            description=\"Please ensure that you have entered only one emoji.\"\n          />\n        )}\n      </dl>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ApiProvider } from \"./components/context/ApiContext\";\n\nReactDOM.render(\n  <ApiProvider>\n    <App />\n  </ApiProvider>\n,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}