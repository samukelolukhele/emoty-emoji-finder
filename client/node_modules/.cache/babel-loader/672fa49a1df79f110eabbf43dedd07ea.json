{"ast":null,"code":"//.CommonJS\nvar CSSOM = {\n  CSSRule: require(\"./CSSRule\").CSSRule,\n  CSSGroupingRule: require(\"./CSSGroupingRule\").CSSGroupingRule,\n  CSSConditionRule: require(\"./CSSConditionRule\").CSSConditionRule\n}; ///CommonJS\n\n/**\n * @constructor\n * @see https://drafts.csswg.org/css-conditional-3/#the-csssupportsrule-interface\n */\n\nCSSOM.CSSSupportsRule = function CSSSupportsRule() {\n  CSSOM.CSSConditionRule.call(this);\n};\n\nCSSOM.CSSSupportsRule.prototype = new CSSOM.CSSConditionRule();\nCSSOM.CSSSupportsRule.prototype.constructor = CSSOM.CSSSupportsRule;\nCSSOM.CSSSupportsRule.prototype.type = 12;\nObject.defineProperty(CSSOM.CSSSupportsRule.prototype, \"cssText\", {\n  get: function get() {\n    var cssTexts = [];\n\n    for (var i = 0, length = this.cssRules.length; i < length; i++) {\n      cssTexts.push(this.cssRules[i].cssText);\n    }\n\n    return \"@supports \" + this.conditionText + \" {\" + cssTexts.join(\"\") + \"}\";\n  }\n}); //.CommonJS\n\nexports.CSSSupportsRule = CSSOM.CSSSupportsRule; ///CommonJS","map":null,"metadata":{},"sourceType":"script"}