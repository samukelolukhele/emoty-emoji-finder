{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar NODE_TYPE = require(\"../node-type\");\n\nvar _require = require(\"../helpers/node\"),\n    nodeLength = _require.nodeLength,\n    nodeRoot = _require.nodeRoot;\n\nvar _require2 = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require2.domSymbolTree;\n\nvar _require3 = require(\"../range/boundary-point\"),\n    compareBoundaryPointsPosition = _require3.compareBoundaryPointsPosition;\n\nvar _require4 = require(\"../range/Range-impl\"),\n    setBoundaryPointStart = _require4.setBoundaryPointStart,\n    setBoundaryPointEnd = _require4.setBoundaryPointEnd;\n\nvar Range = require(\"../generated/Range\");\n\nvar _require5 = require(\"../generated/utils\"),\n    implForWrapper = _require5.implForWrapper; // https://w3c.github.io/selection-api/#dfn-direction\n\n\nvar SELECTION_DIRECTION = {\n  FORWARDS: 1,\n  BACKWARDS: -1,\n  DIRECTIONLESS: 0\n}; // https://w3c.github.io/selection-api/#dom-selection\n\nvar SelectionImpl = /*#__PURE__*/function () {\n  function SelectionImpl(globalObject) {\n    _classCallCheck(this, SelectionImpl);\n\n    this._range = null;\n    this._direction = SELECTION_DIRECTION.DIRECTIONLESS;\n    this._globalObject = globalObject;\n  } // https://w3c.github.io/selection-api/#dom-selection-anchornode\n\n\n  _createClass(SelectionImpl, [{\n    key: \"anchorNode\",\n    get: function get() {\n      var anchor = this._anchor;\n      return anchor ? anchor.node : null;\n    } // https://w3c.github.io/selection-api/#dom-selection-anchoroffset\n\n  }, {\n    key: \"anchorOffset\",\n    get: function get() {\n      var anchor = this._anchor;\n      return anchor ? anchor.offset : 0;\n    } // https://w3c.github.io/selection-api/#dom-selection-focusnode\n\n  }, {\n    key: \"focusNode\",\n    get: function get() {\n      var focus = this._focus;\n      return focus ? focus.node : null;\n    } // https://w3c.github.io/selection-api/#dom-selection-focusoffset\n\n  }, {\n    key: \"focusOffset\",\n    get: function get() {\n      var focus = this._focus;\n      return focus ? focus.offset : 0;\n    } // https://w3c.github.io/selection-api/#dom-selection-iscollapsed\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this._range === null || this._range.collapsed;\n    } // https://w3c.github.io/selection-api/#dom-selection-rangecount\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._isEmpty() ? 0 : 1;\n    } // https://w3c.github.io/selection-api/#dom-selection-type\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      if (this._isEmpty()) {\n        return \"None\";\n      } else if (this._range.collapsed) {\n        return \"Caret\";\n      }\n\n      return \"Range\";\n    } // https://w3c.github.io/selection-api/#dom-selection-getrangeat\n\n  }, {\n    key: \"getRangeAt\",\n    value: function getRangeAt(index) {\n      if (index !== 0 || this._isEmpty()) {\n        throw DOMException.create(this._globalObject, [\"Invalid range index.\", \"IndexSizeError\"]);\n      }\n\n      return this._range;\n    } // https://w3c.github.io/selection-api/#dom-selection-addrange\n\n  }, {\n    key: \"addRange\",\n    value: function addRange(range) {\n      if (range._root === implForWrapper(this._globalObject._document) && this.rangeCount === 0) {\n        this._associateRange(range);\n      }\n    } // https://w3c.github.io/selection-api/#dom-selection-removerange\n\n  }, {\n    key: \"removeRange\",\n    value: function removeRange(range) {\n      if (range !== this._range) {\n        throw DOMException.create(this._globalObject, [\"Invalid range.\", \"NotFoundError\"]);\n      }\n\n      this._associateRange(null);\n    } // https://w3c.github.io/selection-api/#dom-selection-removeallranges\n\n  }, {\n    key: \"removeAllRanges\",\n    value: function removeAllRanges() {\n      this._associateRange(null);\n    } // https://w3c.github.io/selection-api/#dom-selection-empty\n\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      this.removeAllRanges();\n    } // https://w3c.github.io/selection-api/#dom-selection-collapse\n\n  }, {\n    key: \"collapse\",\n    value: function collapse(node, offset) {\n      if (node === null) {\n        this.removeAllRanges();\n        return;\n      }\n\n      if (node.nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE) {\n        throw DOMException.create(this._globalObject, [\"DocumentType Node can't be used as boundary point.\", \"InvalidNodeTypeError\"]);\n      }\n\n      if (offset > nodeLength(node)) {\n        throw DOMException.create(this._globalObject, [\"Invalid range index.\", \"IndexSizeError\"]);\n      }\n\n      if (nodeRoot(node) !== implForWrapper(this._globalObject._document)) {\n        return;\n      }\n\n      var newRange = Range.createImpl(this._globalObject, [], {\n        start: {\n          node: node,\n          offset: 0\n        },\n        end: {\n          node: node,\n          offset: 0\n        }\n      });\n      setBoundaryPointStart(newRange, node, offset);\n      setBoundaryPointEnd(newRange, node, offset);\n\n      this._associateRange(newRange);\n    } // https://w3c.github.io/selection-api/#dom-selection-setposition\n\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(node, offset) {\n      this.collapse(node, offset);\n    } // https://w3c.github.io/selection-api/#dom-selection-collapsetostart\n\n  }, {\n    key: \"collapseToStart\",\n    value: function collapseToStart() {\n      if (this._isEmpty()) {\n        throw DOMException.create(this._globalObject, [\"There is no selection to collapse.\", \"InvalidStateError\"]);\n      }\n\n      var _this$_range$_start = this._range._start,\n          node = _this$_range$_start.node,\n          offset = _this$_range$_start.offset;\n      var newRange = Range.createImpl(this._globalObject, [], {\n        start: {\n          node: node,\n          offset: offset\n        },\n        end: {\n          node: node,\n          offset: offset\n        }\n      });\n\n      this._associateRange(newRange);\n    } // https://w3c.github.io/selection-api/#dom-selection-collapsetoend\n\n  }, {\n    key: \"collapseToEnd\",\n    value: function collapseToEnd() {\n      if (this._isEmpty()) {\n        throw DOMException.create(this._globalObject, [\"There is no selection to collapse.\", \"InvalidStateError\"]);\n      }\n\n      var _this$_range$_end = this._range._end,\n          node = _this$_range$_end.node,\n          offset = _this$_range$_end.offset;\n      var newRange = Range.createImpl(this._globalObject, [], {\n        start: {\n          node: node,\n          offset: offset\n        },\n        end: {\n          node: node,\n          offset: offset\n        }\n      });\n\n      this._associateRange(newRange);\n    } // https://w3c.github.io/selection-api/#dom-selection-extend\n\n  }, {\n    key: \"extend\",\n    value: function extend(node, offset) {\n      if (nodeRoot(node) !== implForWrapper(this._globalObject._document)) {\n        return;\n      }\n\n      if (this._isEmpty()) {\n        throw DOMException.create(this._globalObject, [\"There is no selection to extend.\", \"InvalidStateError\"]);\n      }\n\n      var oldAnchor = this._anchor;\n      var newFocus = {\n        node: node,\n        offset: offset\n      };\n      var newRange = Range.createImpl(this._globalObject, [], {\n        start: {\n          node: node,\n          offset: 0\n        },\n        end: {\n          node: node,\n          offset: 0\n        }\n      });\n\n      if (nodeRoot(node) !== this._range._root) {\n        setBoundaryPointStart(newRange, newFocus.node, newFocus.offset);\n        setBoundaryPointEnd(newRange, newFocus.node, newFocus.offset);\n      } else if (compareBoundaryPointsPosition(oldAnchor, newFocus) <= 0) {\n        setBoundaryPointStart(newRange, oldAnchor.node, oldAnchor.offset);\n        setBoundaryPointEnd(newRange, newFocus.node, newFocus.offset);\n      } else {\n        setBoundaryPointStart(newRange, newFocus.node, newFocus.offset);\n        setBoundaryPointEnd(newRange, oldAnchor.node, oldAnchor.offset);\n      }\n\n      this._associateRange(newRange);\n\n      this._direction = compareBoundaryPointsPosition(newFocus, oldAnchor) === -1 ? SELECTION_DIRECTION.BACKWARDS : SELECTION_DIRECTION.FORWARDS;\n    } // https://w3c.github.io/selection-api/#dom-selection-setbaseandextent\n\n  }, {\n    key: \"setBaseAndExtent\",\n    value: function setBaseAndExtent(anchorNode, anchorOffset, focusNode, focusOffset) {\n      if (anchorOffset > nodeLength(anchorNode) || focusOffset > nodeLength(focusNode)) {\n        throw DOMException.create(this._globalObject, [\"Invalid anchor or focus offset.\", \"IndexSizeError\"]);\n      }\n\n      var document = implForWrapper(this._globalObject._document);\n\n      if (document !== nodeRoot(anchorNode) || document !== nodeRoot(focusNode)) {\n        return;\n      }\n\n      var anchor = {\n        node: anchorNode,\n        offset: anchorOffset\n      };\n      var focus = {\n        node: focusNode,\n        offset: focusOffset\n      };\n      var newRange;\n\n      if (compareBoundaryPointsPosition(anchor, focus) === -1) {\n        newRange = Range.createImpl(this._globalObject, [], {\n          start: {\n            node: anchor.node,\n            offset: anchor.offset\n          },\n          end: {\n            node: focus.node,\n            offset: focus.offset\n          }\n        });\n      } else {\n        newRange = Range.createImpl(this._globalObject, [], {\n          start: {\n            node: focus.node,\n            offset: focus.offset\n          },\n          end: {\n            node: anchor.node,\n            offset: anchor.offset\n          }\n        });\n      }\n\n      this._associateRange(newRange);\n\n      this._direction = compareBoundaryPointsPosition(focus, anchor) === -1 ? SELECTION_DIRECTION.BACKWARDS : SELECTION_DIRECTION.FORWARDS;\n    } // https://w3c.github.io/selection-api/#dom-selection-selectallchildren\n\n  }, {\n    key: \"selectAllChildren\",\n    value: function selectAllChildren(node) {\n      if (node.nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE) {\n        throw DOMException.create(this._globalObject, [\"DocumentType Node can't be used as boundary point.\", \"InvalidNodeTypeError\"]);\n      }\n\n      var document = implForWrapper(this._globalObject._document);\n\n      if (document !== nodeRoot(node)) {\n        return;\n      }\n\n      var length = domSymbolTree.childrenCount(node);\n      var newRange = Range.createImpl(this._globalObject, [], {\n        start: {\n          node: node,\n          offset: 0\n        },\n        end: {\n          node: node,\n          offset: 0\n        }\n      });\n      setBoundaryPointStart(newRange, node, 0);\n      setBoundaryPointEnd(newRange, node, length);\n\n      this._associateRange(newRange);\n    } // https://w3c.github.io/selection-api/#dom-selection-deletefromdocument\n\n  }, {\n    key: \"deleteFromDocument\",\n    value: function deleteFromDocument() {\n      if (!this._isEmpty()) {\n        this._range.deleteContents();\n      }\n    } // https://w3c.github.io/selection-api/#dom-selection-containsnode\n\n  }, {\n    key: \"containsNode\",\n    value: function containsNode(node, allowPartialContainment) {\n      if (this._isEmpty() || nodeRoot(node) !== implForWrapper(this._globalObject._document)) {\n        return false;\n      }\n\n      var _this$_range = this._range,\n          _start = _this$_range._start,\n          _end = _this$_range._end;\n      var startIsBeforeNode = compareBoundaryPointsPosition(_start, {\n        node: node,\n        offset: 0\n      }) === -1;\n      var endIsAfterNode = compareBoundaryPointsPosition(_end, {\n        node: node,\n        offset: nodeLength(node)\n      }) === 1;\n      return allowPartialContainment ? startIsBeforeNode || endIsAfterNode : startIsBeforeNode && endIsAfterNode;\n    } // https://w3c.github.io/selection-api/#dom-selection-stringifier\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this._range ? this._range.toString() : \"\";\n    } // https://w3c.github.io/selection-api/#dfn-empty\n\n  }, {\n    key: \"_isEmpty\",\n    value: function _isEmpty() {\n      return this._range === null;\n    } // https://w3c.github.io/selection-api/#dfn-anchor\n\n  }, {\n    key: \"_anchor\",\n    get: function get() {\n      if (!this._range) {\n        return null;\n      }\n\n      return this._direction === SELECTION_DIRECTION.FORWARDS ? this._range._start : this._range._end;\n    } // https://w3c.github.io/selection-api/#dfn-focus\n\n  }, {\n    key: \"_focus\",\n    get: function get() {\n      if (!this._range) {\n        return null;\n      }\n\n      return this._direction === SELECTION_DIRECTION.FORWARDS ? this._range._end : this._range._start;\n    }\n  }, {\n    key: \"_associateRange\",\n    value: function _associateRange(newRange) {\n      this._range = newRange;\n      this._direction = newRange === null ? SELECTION_DIRECTION.DIRECTIONLESS : SELECTION_DIRECTION.FORWARDS; // TODO: Emit \"selectionchange\" event. At this time, there is currently no test in WPT covering this.\n      // https://w3c.github.io/selection-api/#selectionchange-event\n    }\n  }]);\n\n  return SelectionImpl;\n}();\n\nmodule.exports = {\n  implementation: SelectionImpl\n};","map":null,"metadata":{},"sourceType":"script"}