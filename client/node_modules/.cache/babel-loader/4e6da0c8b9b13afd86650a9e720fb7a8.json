{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar HTMLCollection = require(\"../generated/HTMLCollection\");\n\nvar _require = require(\"../helpers/namespaces\"),\n    HTML_NS = _require.HTML_NS;\n\nvar _require2 = require(\"../helpers/traversal\"),\n    childrenByLocalNames = _require2.childrenByLocalNames;\n\nvar _require3 = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require3.domSymbolTree;\n\nvar cellLocalNames = new Set([\"td\", \"th\"]);\n\nvar HTMLTableRowElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLTableRowElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLTableRowElementImpl);\n\n  function HTMLTableRowElementImpl() {\n    _classCallCheck(this, HTMLTableRowElementImpl);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HTMLTableRowElementImpl, [{\n    key: \"cells\",\n    get: function get() {\n      var _this = this;\n\n      if (!this._cells) {\n        this._cells = HTMLCollection.createImpl(this._globalObject, [], {\n          element: this,\n          query: function query() {\n            return childrenByLocalNames(_this, cellLocalNames);\n          }\n        });\n      }\n\n      return this._cells;\n    }\n  }, {\n    key: \"rowIndex\",\n    get: function get() {\n      var parent = this.parentElement;\n\n      if (parent === null || parent.namespaceURI !== HTML_NS) {\n        return -1;\n      }\n\n      var tableElement = parent;\n\n      if (parent.localName === \"thead\" || parent.localName === \"tbody\" || parent.localName === \"tfoot\") {\n        tableElement = parent.parentElement;\n      }\n\n      if (tableElement === null || tableElement.namespaceURI !== HTML_NS || tableElement.localName !== \"table\") {\n        return -1;\n      }\n\n      return tableElement.rows.indexOf(this);\n    }\n  }, {\n    key: \"sectionRowIndex\",\n    get: function get() {\n      var parent = domSymbolTree.parent(this);\n\n      if (parent === null) {\n        return -1;\n      }\n\n      var rows = parent.rows;\n\n      if (!rows) {\n        return -1;\n      }\n\n      return rows.indexOf(this);\n    }\n  }, {\n    key: \"insertCell\",\n    value: function insertCell(index) {\n      var td = this._ownerDocument.createElement(\"TD\");\n\n      var cells = this.cells;\n\n      if (index < -1 || index > cells.length) {\n        throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n      }\n\n      if (index === -1 || index === cells.length) {\n        this._append(td);\n      } else {\n        var ref = cells.item(index);\n\n        this._insert(td, ref);\n      }\n\n      return td;\n    }\n  }, {\n    key: \"deleteCell\",\n    value: function deleteCell(index) {\n      var cells = this.cells;\n\n      if (index < -1 || index >= cells.length) {\n        throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n      }\n\n      if (index === -1) {\n        if (cells.length === 0) {\n          return;\n        }\n\n        index = cells.length - 1;\n      }\n\n      var td = cells.item(index);\n\n      this._remove(td);\n    }\n  }]);\n\n  return HTMLTableRowElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLTableRowElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}