{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _get = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require(\"tough-cookie\"),\n    CookieJar = _require.CookieJar;\n\nvar NodeImpl = require(\"./Node-impl\").implementation;\n\nvar idlUtils = require(\"../generated/utils\");\n\nvar NODE_TYPE = require(\"../node-type\");\n\nvar _require2 = require(\"../../utils\"),\n    hasWeakRefs = _require2.hasWeakRefs,\n    mixin = _require2.mixin,\n    memoizeQuery = _require2.memoizeQuery;\n\nvar _require3 = require(\"../helpers/traversal\"),\n    firstChildWithLocalName = _require3.firstChildWithLocalName,\n    firstChildWithLocalNames = _require3.firstChildWithLocalNames,\n    firstDescendantWithLocalName = _require3.firstDescendantWithLocalName;\n\nvar whatwgURL = require(\"whatwg-url\");\n\nvar StyleSheetList = require(\"../generated/StyleSheetList.js\");\n\nvar _require4 = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require4.domSymbolTree;\n\nvar eventAccessors = require(\"../helpers/create-event-accessor\");\n\nvar _require5 = require(\"../helpers/strings\"),\n    asciiLowercase = _require5.asciiLowercase,\n    stripAndCollapseASCIIWhitespace = _require5.stripAndCollapseASCIIWhitespace;\n\nvar _require6 = require(\"../helpers/text\"),\n    childTextContent = _require6.childTextContent;\n\nvar _require7 = require(\"../helpers/namespaces\"),\n    HTML_NS = _require7.HTML_NS,\n    SVG_NS = _require7.SVG_NS;\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar _require8 = require(\"../../browser/parser\"),\n    parseIntoDocument = _require8.parseIntoDocument;\n\nvar History = require(\"../generated/History\");\n\nvar Location = require(\"../generated/Location\");\n\nvar HTMLCollection = require(\"../generated/HTMLCollection\");\n\nvar NodeList = require(\"../generated/NodeList\");\n\nvar validateName = require(\"../helpers/validate-names\").name;\n\nvar _require9 = require(\"../helpers/validate-names\"),\n    validateAndExtract = _require9.validateAndExtract;\n\nvar _require10 = require(\"../helpers/events\"),\n    fireAnEvent = _require10.fireAnEvent;\n\nvar _require11 = require(\"../helpers/shadow-dom\"),\n    shadowIncludingInclusiveDescendantsIterator = _require11.shadowIncludingInclusiveDescendantsIterator;\n\nvar _require12 = require(\"../helpers/custom-elements\"),\n    enqueueCECallbackReaction = _require12.enqueueCECallbackReaction;\n\nvar _require13 = require(\"../helpers/create-element\"),\n    _createElement = _require13.createElement,\n    internalCreateElementNSSteps = _require13.internalCreateElementNSSteps;\n\nvar IterableWeakSet = require(\"../helpers/iterable-weak-set\");\n\nvar DocumentOrShadowRootImpl = require(\"./DocumentOrShadowRoot-impl\").implementation;\n\nvar GlobalEventHandlersImpl = require(\"./GlobalEventHandlers-impl\").implementation;\n\nvar NonElementParentNodeImpl = require(\"./NonElementParentNode-impl\").implementation;\n\nvar ParentNodeImpl = require(\"./ParentNode-impl\").implementation;\n\nvar _require14 = require(\"../node\"),\n    clone = _require14.clone,\n    listOfElementsWithQualifiedName = _require14.listOfElementsWithQualifiedName,\n    listOfElementsWithNamespaceAndLocalName = _require14.listOfElementsWithNamespaceAndLocalName,\n    listOfElementsWithClassNames = _require14.listOfElementsWithClassNames;\n\nvar generatedAttr = require(\"../generated/Attr\");\n\nvar Comment = require(\"../generated/Comment\");\n\nvar ProcessingInstruction = require(\"../generated/ProcessingInstruction\");\n\nvar CDATASection = require(\"../generated/CDATASection\");\n\nvar Text = require(\"../generated/Text\");\n\nvar DocumentFragment = require(\"../generated/DocumentFragment\");\n\nvar DOMImplementation = require(\"../generated/DOMImplementation\");\n\nvar TreeWalker = require(\"../generated/TreeWalker\");\n\nvar NodeIterator = require(\"../generated/NodeIterator\");\n\nvar ShadowRoot = require(\"../generated/ShadowRoot\");\n\nvar Range = require(\"../generated/Range\");\n\nvar documents = require(\"../documents.js\");\n\nvar CustomEvent = require(\"../generated/CustomEvent\");\n\nvar ErrorEvent = require(\"../generated/ErrorEvent\");\n\nvar Event = require(\"../generated/Event\");\n\nvar FocusEvent = require(\"../generated/FocusEvent\");\n\nvar HashChangeEvent = require(\"../generated/HashChangeEvent\");\n\nvar KeyboardEvent = require(\"../generated/KeyboardEvent\");\n\nvar MessageEvent = require(\"../generated/MessageEvent\");\n\nvar MouseEvent = require(\"../generated/MouseEvent\");\n\nvar PopStateEvent = require(\"../generated/PopStateEvent\");\n\nvar ProgressEvent = require(\"../generated/ProgressEvent\");\n\nvar TouchEvent = require(\"../generated/TouchEvent\");\n\nvar UIEvent = require(\"../generated/UIEvent\");\n\nvar RequestManager = require(\"../../browser/resources/request-manager\");\n\nvar AsyncResourceQueue = require(\"../../browser/resources/async-resource-queue\");\n\nvar ResourceQueue = require(\"../../browser/resources/resource-queue\");\n\nvar PerDocumentResourceLoader = require(\"../../browser/resources/per-document-resource-loader\");\n\nfunction clearChildNodes(node) {\n  for (var child = domSymbolTree.firstChild(node); child; child = domSymbolTree.firstChild(node)) {\n    node.removeChild(child);\n  }\n}\n\nfunction pad(number) {\n  if (number < 10) {\n    return \"0\" + number;\n  }\n\n  return number;\n}\n\nfunction toLastModifiedString(date) {\n  return pad(date.getMonth() + 1) + \"/\" + pad(date.getDate()) + \"/\" + date.getFullYear() + \" \" + pad(date.getHours()) + \":\" + pad(date.getMinutes()) + \":\" + pad(date.getSeconds());\n}\n\nvar eventInterfaceTable = {\n  customevent: CustomEvent,\n  errorevent: ErrorEvent,\n  event: Event,\n  events: Event,\n  focusevent: FocusEvent,\n  hashchangeevent: HashChangeEvent,\n  htmlevents: Event,\n  keyboardevent: KeyboardEvent,\n  messageevent: MessageEvent,\n  mouseevent: MouseEvent,\n  mouseevents: MouseEvent,\n  popstateevent: PopStateEvent,\n  progressevent: ProgressEvent,\n  svgevents: Event,\n  touchevent: TouchEvent,\n  uievent: UIEvent,\n  uievents: UIEvent\n};\n\nvar DocumentImpl = /*#__PURE__*/function (_NodeImpl) {\n  _inherits(DocumentImpl, _NodeImpl);\n\n  var _super = _createSuper(DocumentImpl);\n\n  function DocumentImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, DocumentImpl);\n\n    _this = _super.call(this, globalObject, args, privateData);\n\n    _this._initGlobalEvents();\n\n    _this._ownerDocument = _assertThisInitialized(_this);\n    _this.nodeType = NODE_TYPE.DOCUMENT_NODE;\n\n    if (!privateData.options) {\n      privateData.options = {};\n    }\n\n    if (!privateData.options.parsingMode) {\n      privateData.options.parsingMode = \"xml\";\n    }\n\n    if (!privateData.options.encoding) {\n      privateData.options.encoding = \"UTF-8\";\n    }\n\n    if (!privateData.options.contentType) {\n      privateData.options.contentType = privateData.options.parsingMode === \"xml\" ? \"application/xml\" : \"text/html\";\n    }\n\n    _this._parsingMode = privateData.options.parsingMode;\n    _this._implementation = DOMImplementation.createImpl(_this._globalObject, [], {\n      ownerDocument: _assertThisInitialized(_this)\n    });\n    _this._defaultView = privateData.options.defaultView || null;\n    _this._global = privateData.options.global;\n    _this._ids = Object.create(null);\n    _this._attached = true;\n    _this._currentScript = null;\n    _this._pageShowingFlag = false;\n    _this._cookieJar = privateData.options.cookieJar;\n    _this._parseOptions = privateData.options.parseOptions || {};\n    _this._scriptingDisabled = privateData.options.scriptingDisabled;\n\n    if (_this._cookieJar === undefined) {\n      _this._cookieJar = new CookieJar(null, {\n        looseMode: true\n      });\n    }\n\n    if (_this._scriptingDisabled) {\n      _this._parseOptions.scriptingEnabled = false;\n    }\n\n    _this.contentType = privateData.options.contentType;\n    _this._encoding = privateData.options.encoding;\n    var urlOption = privateData.options.url === undefined ? \"about:blank\" : privateData.options.url;\n    var parsed = whatwgURL.parseURL(urlOption);\n\n    if (parsed === null) {\n      throw new TypeError(\"Could not parse \\\"\".concat(urlOption, \"\\\" as a URL\"));\n    }\n\n    _this._URL = parsed;\n    _this._origin = urlOption === \"about:blank\" && privateData.options.parentOrigin ? privateData.options.parentOrigin : whatwgURL.serializeURLOrigin(_this._URL);\n    _this._location = Location.createImpl(_this._globalObject, [], {\n      relevantDocument: _assertThisInitialized(_this)\n    });\n    _this._history = History.createImpl(_this._globalObject, [], {\n      window: _this._defaultView,\n      document: _assertThisInitialized(_this),\n      actAsIfLocationReloadCalled: function actAsIfLocationReloadCalled() {\n        return _this._location.reload();\n      }\n    });\n\n    if (hasWeakRefs) {\n      _this._workingNodeIterators = new IterableWeakSet();\n    } else {\n      _this._workingNodeIterators = [];\n    }\n\n    _this._referrer = privateData.options.referrer || \"\";\n    _this._lastModified = toLastModifiedString(privateData.options.lastModified || new Date());\n    _this._asyncQueue = new AsyncResourceQueue();\n    _this._queue = new ResourceQueue({\n      asyncQueue: _this._asyncQueue,\n      paused: false\n    });\n    _this._deferQueue = new ResourceQueue({\n      paused: true\n    });\n    _this._requestManager = new RequestManager();\n    _this._currentDocumentReadiness = privateData.options.readyState || \"loading\";\n    _this._lastFocusedElement = null;\n    _this._resourceLoader = new PerDocumentResourceLoader(_assertThisInitialized(_this)); // Each Document in a browsing context can also have a latest entry. This is the entry for that Document\n    // to which the browsing context's session history was most recently traversed. When a Document is created,\n    // it initially has no latest entry.\n\n    _this._latestEntry = null; // https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#throw-on-dynamic-markup-insertion-counter\n\n    _this._throwOnDynamicMarkupInsertionCounter = 0;\n    return _this;\n  }\n\n  _createClass(DocumentImpl, [{\n    key: \"_getTheParent\",\n    value: function _getTheParent(event) {\n      if (event.type === \"load\" || !this._defaultView) {\n        return null;\n      }\n\n      return idlUtils.implForWrapper(this._defaultView);\n    }\n  }, {\n    key: \"compatMode\",\n    get: function get() {\n      return this._parsingMode === \"xml\" || this.doctype ? \"CSS1Compat\" : \"BackCompat\";\n    }\n  }, {\n    key: \"charset\",\n    get: function get() {\n      return this._encoding;\n    }\n  }, {\n    key: \"characterSet\",\n    get: function get() {\n      return this._encoding;\n    }\n  }, {\n    key: \"inputEncoding\",\n    get: function get() {\n      return this._encoding;\n    }\n  }, {\n    key: \"doctype\",\n    get: function get() {\n      var _iterator = _createForOfIteratorHelper(domSymbolTree.childrenIterator(this)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var childNode = _step.value;\n\n          if (childNode.nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE) {\n            return childNode;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"URL\",\n    get: function get() {\n      return whatwgURL.serializeURL(this._URL);\n    }\n  }, {\n    key: \"documentURI\",\n    get: function get() {\n      return whatwgURL.serializeURL(this._URL);\n    }\n  }, {\n    key: \"location\",\n    get: function get() {\n      return this._defaultView ? this._location : null;\n    } // https://dom.spec.whatwg.org/#dom-document-documentelement\n\n  }, {\n    key: \"documentElement\",\n    get: function get() {\n      var _iterator2 = _createForOfIteratorHelper(domSymbolTree.childrenIterator(this)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var childNode = _step2.value;\n\n          if (childNode.nodeType === NODE_TYPE.ELEMENT_NODE) {\n            return childNode;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"implementation\",\n    get: function get() {\n      return this._implementation;\n    },\n    set: function set(implementation) {\n      this._implementation = implementation;\n    }\n  }, {\n    key: \"defaultView\",\n    get: function get() {\n      return this._defaultView;\n    }\n  }, {\n    key: \"currentScript\",\n    get: function get() {\n      return this._currentScript;\n    }\n  }, {\n    key: \"readyState\",\n    get: function get() {\n      return this._currentDocumentReadiness;\n    },\n    set: function set(state) {\n      this._currentDocumentReadiness = state;\n      fireAnEvent(\"readystatechange\", this);\n    }\n  }, {\n    key: \"hasFocus\",\n    value: function hasFocus() {\n      return Boolean(this._lastFocusedElement);\n    }\n  }, {\n    key: \"_descendantRemoved\",\n    value: function _descendantRemoved(parent, child) {\n      if (child.tagName === \"STYLE\") {\n        this.styleSheets._remove(child.sheet);\n      }\n\n      _get(_getPrototypeOf(DocumentImpl.prototype), \"_descendantRemoved\", this).call(this, parent, child);\n    }\n  }, {\n    key: \"write\",\n    value: function write() {\n      var text = \"\";\n\n      for (var i = 0; i < arguments.length; ++i) {\n        text += i < 0 || arguments.length <= i ? undefined : arguments[i];\n      }\n\n      if (this._parsingMode === \"xml\") {\n        throw DOMException.create(this._globalObject, [\"Cannot use document.write on XML documents\", \"InvalidStateError\"]);\n      }\n\n      if (this._throwOnDynamicMarkupInsertionCounter > 0) {\n        throw DOMException.create(this._globalObject, [\"Cannot use document.write while a custom element upgrades\", \"InvalidStateError\"]);\n      }\n\n      if (this._writeAfterElement) {\n        // If called from an script element directly (during the first tick),\n        // the new elements are inserted right after that element.\n        var tempDiv = this.createElement(\"div\");\n        tempDiv.innerHTML = text;\n        var child = tempDiv.firstChild;\n        var previous = this._writeAfterElement;\n        var parent = this._writeAfterElement.parentNode;\n\n        while (child) {\n          var node = child;\n          child = child.nextSibling;\n          node._isMovingDueToDocumentWrite = true; // hack for script execution\n\n          parent.insertBefore(node, previous.nextSibling);\n          node._isMovingDueToDocumentWrite = false;\n          previous = node;\n        }\n      } else if (this.readyState === \"loading\") {\n        // During page loading, document.write appends to the current element\n        // Find the last child that has been added to the document.\n        if (this.lastChild) {\n          var _node = this;\n\n          while (_node.lastChild && _node.lastChild.nodeType === NODE_TYPE.ELEMENT_NODE) {\n            _node = _node.lastChild;\n          }\n\n          _node.innerHTML = text;\n        } else {\n          clearChildNodes(this);\n          parseIntoDocument(text, this);\n        }\n      } else if (text) {\n        clearChildNodes(this);\n        parseIntoDocument(text, this);\n      }\n    }\n  }, {\n    key: \"writeln\",\n    value: function writeln() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.write.apply(this, args.concat([\"\\n\"]));\n    } // This is implemented separately for Document (which has a _ids cache) and DocumentFragment (which does not).\n\n  }, {\n    key: \"getElementById\",\n    value: function getElementById(id) {\n      var _this2 = this;\n\n      if (!this._ids[id]) {\n        return null;\n      } // Let's find the first element with where it's root is the document.\n\n\n      var matchElement = this._ids[id].find(function (candidate) {\n        var root = candidate;\n\n        while (domSymbolTree.parent(root)) {\n          root = domSymbolTree.parent(root);\n        }\n\n        return root === _this2;\n      });\n\n      return matchElement || null;\n    }\n  }, {\n    key: \"referrer\",\n    get: function get() {\n      return this._referrer || \"\";\n    }\n  }, {\n    key: \"lastModified\",\n    get: function get() {\n      return this._lastModified;\n    }\n  }, {\n    key: \"images\",\n    get: function get() {\n      return this.getElementsByTagName(\"IMG\");\n    }\n  }, {\n    key: \"embeds\",\n    get: function get() {\n      return this.getElementsByTagName(\"EMBED\");\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this.embeds;\n    }\n  }, {\n    key: \"links\",\n    get: function get() {\n      var _this3 = this;\n\n      return HTMLCollection.createImpl(this._globalObject, [], {\n        element: this,\n        query: function query() {\n          return domSymbolTree.treeToArray(_this3, {\n            filter: function filter(node) {\n              return (node._localName === \"a\" || node._localName === \"area\") && node.hasAttributeNS(null, \"href\") && node._namespaceURI === HTML_NS;\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"forms\",\n    get: function get() {\n      return this.getElementsByTagName(\"FORM\");\n    }\n  }, {\n    key: \"scripts\",\n    get: function get() {\n      return this.getElementsByTagName(\"SCRIPT\");\n    }\n  }, {\n    key: \"anchors\",\n    get: function get() {\n      var _this4 = this;\n\n      return HTMLCollection.createImpl(this._globalObject, [], {\n        element: this,\n        query: function query() {\n          return domSymbolTree.treeToArray(_this4, {\n            filter: function filter(node) {\n              return node._localName === \"a\" && node.hasAttributeNS(null, \"name\") && node._namespaceURI === HTML_NS;\n            }\n          });\n        }\n      });\n    } // The applets attribute must return an\n    // HTMLCollection rooted at the Document node,\n    // whose filter matches nothing.\n    // (It exists for historical reasons.)\n\n  }, {\n    key: \"applets\",\n    get: function get() {\n      return HTMLCollection.createImpl(this._globalObject, [], {\n        element: this,\n        query: function query() {\n          return [];\n        }\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      var child = domSymbolTree.firstChild(this);\n\n      while (child) {\n        this.removeChild(child);\n        child = domSymbolTree.firstChild(this);\n      }\n\n      this._modified();\n\n      return this;\n    }\n  }, {\n    key: \"close\",\n    value: function close(noQueue) {\n      var _this5 = this;\n\n      // In some cases like when creating an empty iframe, I want to emit the\n      // events right away to avoid problems if later I asign the property src.\n      if (noQueue) {\n        this.readyState = \"complete\";\n        fireAnEvent(\"DOMContentLoaded\", this, undefined, {\n          bubbles: true\n        });\n        fireAnEvent(\"load\", this);\n        return;\n      }\n\n      this._queue.resume();\n\n      var dummyPromise = Promise.resolve();\n\n      var onDOMContentLoad = function onDOMContentLoad() {\n        var doc = _this5;\n\n        function dispatchEvent() {\n          // https://html.spec.whatwg.org/#the-end\n          doc.readyState = \"interactive\";\n          fireAnEvent(\"DOMContentLoaded\", doc, undefined, {\n            bubbles: true\n          });\n        }\n\n        return new Promise(function (resolve) {\n          if (!_this5._deferQueue.tail) {\n            dispatchEvent();\n            resolve();\n            return;\n          }\n\n          _this5._deferQueue.setListener(function () {\n            dispatchEvent();\n            resolve();\n          });\n\n          _this5._deferQueue.resume();\n        });\n      };\n\n      var onLoad = function onLoad() {\n        var doc = _this5;\n\n        function dispatchEvent() {\n          doc.readyState = \"complete\";\n          fireAnEvent(\"load\", doc);\n        }\n\n        return new Promise(function (resolve) {\n          if (_this5._asyncQueue.count() === 0) {\n            dispatchEvent();\n            resolve();\n            return;\n          }\n\n          _this5._asyncQueue.setListener(function () {\n            dispatchEvent();\n            resolve();\n          });\n        });\n      };\n\n      this._queue.push(dummyPromise, onDOMContentLoad, null); // Set the readyState to 'complete' once all resources are loaded.\n      // As a side-effect the document's load-event will be dispatched.\n\n\n      this._queue.push(dummyPromise, onLoad, null, true);\n    }\n  }, {\n    key: \"getElementsByName\",\n    value: function getElementsByName(elementName) {\n      var _this6 = this;\n\n      return NodeList.createImpl(this._globalObject, [], {\n        element: this,\n        query: function query() {\n          return domSymbolTree.treeToArray(_this6, {\n            filter: function filter(node) {\n              return node.getAttributeNS && node.getAttributeNS(null, \"name\") === elementName;\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"title\",\n    get: function get() {\n      var documentElement = this.documentElement;\n      var value = \"\";\n\n      if (documentElement && documentElement._localName === \"svg\") {\n        var svgTitleElement = firstChildWithLocalName(documentElement, \"title\", SVG_NS);\n\n        if (svgTitleElement) {\n          value = childTextContent(svgTitleElement);\n        }\n      } else {\n        var titleElement = firstDescendantWithLocalName(this, \"title\");\n\n        if (titleElement) {\n          value = childTextContent(titleElement);\n        }\n      }\n\n      value = stripAndCollapseASCIIWhitespace(value);\n      return value;\n    },\n    set: function set(value) {\n      var documentElement = this.documentElement;\n      var element;\n\n      if (documentElement && documentElement._localName === \"svg\") {\n        element = firstChildWithLocalName(documentElement, \"title\", SVG_NS);\n\n        if (!element) {\n          element = this.createElementNS(SVG_NS, \"title\");\n\n          this._insert(element, documentElement.firstChild);\n        }\n\n        element.textContent = value;\n      } else if (documentElement && documentElement._namespaceURI === HTML_NS) {\n        var titleElement = firstDescendantWithLocalName(this, \"title\");\n        var headElement = this.head;\n\n        if (titleElement === null && headElement === null) {\n          return;\n        }\n\n        if (titleElement !== null) {\n          element = titleElement;\n        } else {\n          element = this.createElement(\"title\");\n\n          headElement._append(element);\n        }\n\n        element.textContent = value;\n      }\n    }\n  }, {\n    key: \"dir\",\n    get: function get() {\n      return this.documentElement ? this.documentElement.dir : \"\";\n    },\n    set: function set(value) {\n      if (this.documentElement) {\n        this.documentElement.dir = value;\n      }\n    }\n  }, {\n    key: \"head\",\n    get: function get() {\n      return this.documentElement ? firstChildWithLocalName(this.documentElement, \"head\") : null;\n    }\n  }, {\n    key: \"body\",\n    get: function get() {\n      var documentElement = this.documentElement;\n\n      if (!documentElement || documentElement._localName !== \"html\" || documentElement._namespaceURI !== HTML_NS) {\n        return null;\n      }\n\n      return firstChildWithLocalNames(this.documentElement, new Set([\"body\", \"frameset\"]));\n    },\n    set: function set(value) {\n      if (value === null || value._namespaceURI !== HTML_NS || value._localName !== \"body\" && value._localName !== \"frameset\") {\n        throw DOMException.create(this._globalObject, [\"Cannot set the body to null or a non-body/frameset element\", \"HierarchyRequestError\"]);\n      }\n\n      var bodyElement = this.body;\n\n      if (value === bodyElement) {\n        return;\n      }\n\n      if (bodyElement !== null) {\n        bodyElement.parentNode._replace(value, bodyElement);\n\n        return;\n      }\n\n      var documentElement = this.documentElement;\n\n      if (documentElement === null) {\n        throw DOMException.create(this._globalObject, [\"Cannot set the body when there is no document element\", \"HierarchyRequestError\"]);\n      }\n\n      documentElement._append(value);\n    }\n  }, {\n    key: \"_runPreRemovingSteps\",\n    value: function _runPreRemovingSteps(oldNode) {\n      // https://html.spec.whatwg.org/#focus-fixup-rule\n      if (oldNode === this.activeElement) {\n        this._lastFocusedElement = this.body;\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(this._workingNodeIterators),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var activeNodeIterator = _step3.value;\n\n          activeNodeIterator._preRemovingSteps(oldNode);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"createEvent\",\n    value: function createEvent(type) {\n      var typeLower = type.toLowerCase();\n      var eventWrapper = eventInterfaceTable[typeLower] || null;\n\n      if (!eventWrapper) {\n        throw DOMException.create(this._globalObject, [\"The provided event type (\\\"\" + type + \"\\\") is invalid\", \"NotSupportedError\"]);\n      }\n\n      var impl = eventWrapper.createImpl(this._globalObject, [\"\"]);\n      impl._initializedFlag = false;\n      return impl;\n    }\n  }, {\n    key: \"createRange\",\n    value: function createRange() {\n      return Range.createImpl(this._globalObject, [], {\n        start: {\n          node: this,\n          offset: 0\n        },\n        end: {\n          node: this,\n          offset: 0\n        }\n      });\n    }\n  }, {\n    key: \"createProcessingInstruction\",\n    value: function createProcessingInstruction(target, data) {\n      validateName(this._globalObject, target);\n\n      if (data.includes(\"?>\")) {\n        throw DOMException.create(this._globalObject, [\"Processing instruction data cannot contain the string \\\"?>\\\"\", \"InvalidCharacterError\"]);\n      }\n\n      return ProcessingInstruction.createImpl(this._globalObject, [], {\n        ownerDocument: this,\n        target: target,\n        data: data\n      });\n    } // https://dom.spec.whatwg.org/#dom-document-createcdatasection\n\n  }, {\n    key: \"createCDATASection\",\n    value: function createCDATASection(data) {\n      if (this._parsingMode === \"html\") {\n        throw DOMException.create(this._globalObject, [\"Cannot create CDATA sections in HTML documents\", \"NotSupportedError\"]);\n      }\n\n      if (data.includes(\"]]>\")) {\n        throw DOMException.create(this._globalObject, [\"CDATA section data cannot contain the string \\\"]]>\\\"\", \"InvalidCharacterError\"]);\n      }\n\n      return CDATASection.createImpl(this._globalObject, [], {\n        ownerDocument: this,\n        data: data\n      });\n    }\n  }, {\n    key: \"createTextNode\",\n    value: function createTextNode(data) {\n      return Text.createImpl(this._globalObject, [], {\n        ownerDocument: this,\n        data: data\n      });\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(data) {\n      return Comment.createImpl(this._globalObject, [], {\n        ownerDocument: this,\n        data: data\n      });\n    } // https://dom.spec.whatwg.org/#dom-document-createelement\n\n  }, {\n    key: \"createElement\",\n    value: function createElement(localName, options) {\n      validateName(this._globalObject, localName);\n\n      if (this._parsingMode === \"html\") {\n        localName = asciiLowercase(localName);\n      }\n\n      var isValue = null;\n\n      if (options && options.is !== undefined) {\n        isValue = options.is;\n      }\n\n      var namespace = this._parsingMode === \"html\" || this.contentType === \"application/xhtml+xml\" ? HTML_NS : null;\n      return _createElement(this, localName, namespace, null, isValue, true);\n    } // https://dom.spec.whatwg.org/#dom-document-createelementns\n\n  }, {\n    key: \"createElementNS\",\n    value: function createElementNS(namespace, qualifiedName, options) {\n      return internalCreateElementNSSteps(this, namespace, qualifiedName, options);\n    }\n  }, {\n    key: \"createDocumentFragment\",\n    value: function createDocumentFragment() {\n      return DocumentFragment.createImpl(this._globalObject, [], {\n        ownerDocument: this\n      });\n    }\n  }, {\n    key: \"createAttribute\",\n    value: function createAttribute(localName) {\n      validateName(this._globalObject, localName);\n\n      if (this._parsingMode === \"html\") {\n        localName = asciiLowercase(localName);\n      }\n\n      return this._createAttribute({\n        localName: localName\n      });\n    }\n  }, {\n    key: \"createAttributeNS\",\n    value: function createAttributeNS(namespace, name) {\n      if (namespace === undefined) {\n        namespace = null;\n      }\n\n      namespace = namespace !== null ? String(namespace) : namespace;\n      var extracted = validateAndExtract(this._globalObject, namespace, name);\n      return this._createAttribute({\n        namespace: extracted.namespace,\n        namespacePrefix: extracted.prefix,\n        localName: extracted.localName\n      });\n    } // Using this helper function rather than directly calling generatedAttr.createImpl may be preferred in some files,\n    // to avoid introducing a potentially cyclic dependency on generated/Attr.js.\n\n  }, {\n    key: \"_createAttribute\",\n    value: function _createAttribute(_ref) {\n      var localName = _ref.localName,\n          value = _ref.value,\n          namespace = _ref.namespace,\n          namespacePrefix = _ref.namespacePrefix;\n      return generatedAttr.createImpl(this._globalObject, [], {\n        localName: localName,\n        value: value,\n        namespace: namespace,\n        namespacePrefix: namespacePrefix,\n        ownerDocument: this\n      });\n    }\n  }, {\n    key: \"createTreeWalker\",\n    value: function createTreeWalker(root, whatToShow, filter) {\n      return TreeWalker.createImpl(this._globalObject, [], {\n        root: root,\n        whatToShow: whatToShow,\n        filter: filter\n      });\n    }\n  }, {\n    key: \"createNodeIterator\",\n    value: function createNodeIterator(root, whatToShow, filter) {\n      var nodeIterator = NodeIterator.createImpl(this._globalObject, [], {\n        root: root,\n        whatToShow: whatToShow,\n        filter: filter\n      });\n\n      if (hasWeakRefs) {\n        this._workingNodeIterators.add(nodeIterator);\n      } else {\n        this._workingNodeIterators.push(nodeIterator);\n\n        while (this._workingNodeIterators.length > 10) {\n          var toInactivate = this._workingNodeIterators.shift();\n\n          toInactivate._working = false;\n        }\n      }\n\n      return nodeIterator;\n    }\n  }, {\n    key: \"importNode\",\n    value: function importNode(node, deep) {\n      if (node.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n        throw DOMException.create(this._globalObject, [\"Cannot import a document node\", \"NotSupportedError\"]);\n      } else if (ShadowRoot.isImpl(node)) {\n        throw DOMException.create(this._globalObject, [\"Cannot adopt a shadow root\", \"NotSupportedError\"]);\n      }\n\n      return clone(node, this, deep);\n    } // https://dom.spec.whatwg.org/#dom-document-adoptnode\n\n  }, {\n    key: \"adoptNode\",\n    value: function adoptNode(node) {\n      if (node.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n        throw DOMException.create(this._globalObject, [\"Cannot adopt a document node\", \"NotSupportedError\"]);\n      } else if (ShadowRoot.isImpl(node)) {\n        throw DOMException.create(this._globalObject, [\"Cannot adopt a shadow root\", \"HierarchyRequestError\"]);\n      }\n\n      this._adoptNode(node);\n\n      return node;\n    } // https://dom.spec.whatwg.org/#concept-node-adopt\n\n  }, {\n    key: \"_adoptNode\",\n    value: function _adoptNode(node) {\n      var newDocument = this;\n      var oldDocument = node._ownerDocument;\n      var parent = domSymbolTree.parent(node);\n\n      if (parent) {\n        parent._remove(node);\n      }\n\n      if (oldDocument !== newDocument) {\n        var _iterator4 = _createForOfIteratorHelper(shadowIncludingInclusiveDescendantsIterator(node)),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var inclusiveDescendant = _step4.value;\n            inclusiveDescendant._ownerDocument = newDocument;\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        var _iterator5 = _createForOfIteratorHelper(shadowIncludingInclusiveDescendantsIterator(node)),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var _inclusiveDescendant = _step5.value;\n\n            if (_inclusiveDescendant._ceState === \"custom\") {\n              enqueueCECallbackReaction(_inclusiveDescendant, \"adoptedCallback\", [idlUtils.wrapperForImpl(oldDocument), idlUtils.wrapperForImpl(newDocument)]);\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        var _iterator6 = _createForOfIteratorHelper(shadowIncludingInclusiveDescendantsIterator(node)),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var _inclusiveDescendant2 = _step6.value;\n\n            if (_inclusiveDescendant2._adoptingSteps) {\n              _inclusiveDescendant2._adoptingSteps(oldDocument);\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n      }\n    }\n  }, {\n    key: \"cookie\",\n    get: function get() {\n      return this._cookieJar.getCookieStringSync(this.URL, {\n        http: false\n      });\n    },\n    set: function set(cookieStr) {\n      cookieStr = String(cookieStr);\n\n      this._cookieJar.setCookieSync(cookieStr, this.URL, {\n        http: false,\n        ignoreError: true\n      });\n    } // The clear(), captureEvents(), and releaseEvents() methods must do nothing\n\n  }, {\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"captureEvents\",\n    value: function captureEvents() {}\n  }, {\n    key: \"releaseEvents\",\n    value: function releaseEvents() {}\n  }, {\n    key: \"styleSheets\",\n    get: function get() {\n      if (!this._styleSheets) {\n        this._styleSheets = StyleSheetList.createImpl(this._globalObject);\n      } // TODO: each style and link element should register its sheet on creation\n      // and remove it on removal.\n\n\n      return this._styleSheets;\n    }\n  }, {\n    key: \"hidden\",\n    get: function get() {\n      if (this._defaultView && this._defaultView._pretendToBeVisual) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"visibilityState\",\n    get: function get() {\n      if (this._defaultView && this._defaultView._pretendToBeVisual) {\n        return \"visible\";\n      }\n\n      return \"prerender\";\n    } // https://w3c.github.io/selection-api/#extensions-to-document-interface\n\n  }, {\n    key: \"getSelection\",\n    value: function getSelection() {\n      return this._defaultView ? this._defaultView._selection : null;\n    } // Needed to ensure that the resulting document has the correct prototype chain:\n    // https://dom.spec.whatwg.org/#concept-node-clone says \"that implements the same interfaces as node\".\n\n  }, {\n    key: \"_cloneDocument\",\n    value: function _cloneDocument() {\n      var copy = documents.createImpl(this._globalObject, {\n        contentType: this.contentType,\n        encoding: this._encoding,\n        parsingMode: this._parsingMode\n      });\n      copy._URL = this._URL;\n      copy._origin = this._origin;\n      return copy;\n    }\n  }]);\n\n  return DocumentImpl;\n}(NodeImpl);\n\neventAccessors.createEventAccessor(DocumentImpl.prototype, \"readystatechange\");\nmixin(DocumentImpl.prototype, DocumentOrShadowRootImpl.prototype);\nmixin(DocumentImpl.prototype, GlobalEventHandlersImpl.prototype);\nmixin(DocumentImpl.prototype, NonElementParentNodeImpl.prototype);\nmixin(DocumentImpl.prototype, ParentNodeImpl.prototype);\nDocumentImpl.prototype.getElementsByTagName = memoizeQuery(function (qualifiedName) {\n  return listOfElementsWithQualifiedName(qualifiedName, this);\n});\nDocumentImpl.prototype.getElementsByTagNameNS = memoizeQuery(function (namespace, localName) {\n  return listOfElementsWithNamespaceAndLocalName(namespace, localName, this);\n});\nDocumentImpl.prototype.getElementsByClassName = memoizeQuery(function getElementsByClassName(classNames) {\n  return listOfElementsWithClassNames(classNames, this);\n});\nmodule.exports = {\n  implementation: DocumentImpl\n};","map":null,"metadata":{},"sourceType":"script"}