{"ast":null,"code":"\"use strict\";\n\nvar MIMEType = require(\"whatwg-mimetype\");\n\nvar PRIVILEGED_NO_CORS_REQUEST = new Set([\"range\"]);\n\nfunction isPrivilegedNoCORSRequest(name) {\n  return PRIVILEGED_NO_CORS_REQUEST.has(name.toLowerCase());\n}\n\nvar NO_CORS_SAFELISTED_REQUEST = new Set([\"accept\", \"accept-language\", \"content-language\", \"content-type\"]);\n\nfunction isNoCORSSafelistedRequest(name) {\n  return NO_CORS_SAFELISTED_REQUEST.has(name.toLowerCase());\n}\n\nvar FORBIDDEN = new Set([\"accept-charset\", \"accept-encoding\", \"access-control-request-headers\", \"access-control-request-method\", \"connection\", \"content-length\", \"cookie\", \"cookie2\", \"date\", \"dnt\", \"expect\", \"host\", \"keep-alive\", \"origin\", \"referer\", \"te\", \"trailer\", \"transfer-encoding\", \"upgrade\", \"via\"]);\n\nfunction isForbidden(name) {\n  name = name.toLowerCase();\n  return FORBIDDEN.has(name) || name.startsWith(\"proxy-\") || name.startsWith(\"sec-\");\n}\n\nvar FORBIDDEN_RESPONSE = new Set([\"set-cookie\", \"set-cookie2\"]);\n\nfunction isForbiddenResponse(name) {\n  return FORBIDDEN_RESPONSE.has(name.toLowerCase());\n}\n\nvar CORS_UNSAFE_BYTE = /[\\x00-\\x08\\x0A-\\x1F\"():<>?@[\\\\\\]{}\\x7F]/;\n\nfunction isCORSWhitelisted(name, value) {\n  name = name.toLowerCase();\n\n  switch (name) {\n    case \"accept\":\n      if (value.match(CORS_UNSAFE_BYTE)) {\n        return false;\n      }\n\n      break;\n\n    case \"accept-language\":\n    case \"content-language\":\n      if (value.match(/[^\\x30-\\x39\\x41-\\x5A\\x61-\\x7A *,\\-.;=]/)) {\n        return false;\n      }\n\n      break;\n\n    case \"content-type\":\n      {\n        if (value.match(CORS_UNSAFE_BYTE)) {\n          return false;\n        }\n\n        var mimeType = MIMEType.parse(value);\n\n        if (mimeType === null) {\n          return false;\n        }\n\n        if (![\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"].includes(mimeType.essence)) {\n          return false;\n        }\n\n        break;\n      }\n\n    default:\n      return false;\n  }\n\n  if (Buffer.from(value).length > 128) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  isPrivilegedNoCORSRequest: isPrivilegedNoCORSRequest,\n  isNoCORSSafelistedRequest: isNoCORSSafelistedRequest,\n  isForbidden: isForbidden,\n  isForbiddenResponse: isForbiddenResponse,\n  isCORSWhitelisted: isCORSWhitelisted\n};","map":null,"metadata":{},"sourceType":"script"}