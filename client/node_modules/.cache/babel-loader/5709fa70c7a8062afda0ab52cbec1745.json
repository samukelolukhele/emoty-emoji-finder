{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar Range = require(\"./Range.js\");\n\nvar Node = require(\"./Node.js\");\n\nvar ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nvar ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\nvar interfaceName = \"Selection\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'Selection'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"Selection\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor Selection is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  var Selection = /*#__PURE__*/function () {\n    function Selection() {\n      _classCallCheck(this, Selection);\n\n      throw new TypeError(\"Illegal constructor\");\n    }\n\n    _createClass(Selection, [{\n      key: \"getRangeAt\",\n      value: function getRangeAt(index) {\n        var _esValue$implSymbol;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getRangeAt' called on an object that is not a valid instance of Selection.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'getRangeAt' on 'Selection': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"unsigned long\"](curArg, {\n            context: \"Failed to execute 'getRangeAt' on 'Selection': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol = esValue[implSymbol]).getRangeAt.apply(_esValue$implSymbol, args));\n      }\n    }, {\n      key: \"addRange\",\n      value: function addRange(range) {\n        var _esValue$implSymbol2;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'addRange' called on an object that is not a valid instance of Selection.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'addRange' on 'Selection': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Range.convert(curArg, {\n            context: \"Failed to execute 'addRange' on 'Selection': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol2 = esValue[implSymbol]).addRange.apply(_esValue$implSymbol2, args);\n      }\n    }, {\n      key: \"removeRange\",\n      value: function removeRange(range) {\n        var _esValue$implSymbol3;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'removeRange' called on an object that is not a valid instance of Selection.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'removeRange' on 'Selection': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Range.convert(curArg, {\n            context: \"Failed to execute 'removeRange' on 'Selection': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol3 = esValue[implSymbol]).removeRange.apply(_esValue$implSymbol3, args);\n      }\n    }, {\n      key: \"removeAllRanges\",\n      value: function removeAllRanges() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'removeAllRanges' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return esValue[implSymbol].removeAllRanges();\n      }\n    }, {\n      key: \"empty\",\n      value: function empty() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'empty' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return esValue[implSymbol].empty();\n      }\n    }, {\n      key: \"collapse\",\n      value: function collapse(node) {\n        var _esValue$implSymbol4;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'collapse' called on an object that is not a valid instance of Selection.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'collapse' on 'Selection': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = Node.convert(curArg, {\n              context: \"Failed to execute 'collapse' on 'Selection': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        {\n          var _curArg = arguments[1];\n\n          if (_curArg !== undefined) {\n            _curArg = conversions[\"unsigned long\"](_curArg, {\n              context: \"Failed to execute 'collapse' on 'Selection': parameter 2\"\n            });\n          } else {\n            _curArg = 0;\n          }\n\n          args.push(_curArg);\n        }\n        return (_esValue$implSymbol4 = esValue[implSymbol]).collapse.apply(_esValue$implSymbol4, args);\n      }\n    }, {\n      key: \"setPosition\",\n      value: function setPosition(node) {\n        var _esValue$implSymbol5;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'setPosition' called on an object that is not a valid instance of Selection.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'setPosition' on 'Selection': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = Node.convert(curArg, {\n              context: \"Failed to execute 'setPosition' on 'Selection': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        {\n          var _curArg2 = arguments[1];\n\n          if (_curArg2 !== undefined) {\n            _curArg2 = conversions[\"unsigned long\"](_curArg2, {\n              context: \"Failed to execute 'setPosition' on 'Selection': parameter 2\"\n            });\n          } else {\n            _curArg2 = 0;\n          }\n\n          args.push(_curArg2);\n        }\n        return (_esValue$implSymbol5 = esValue[implSymbol]).setPosition.apply(_esValue$implSymbol5, args);\n      }\n    }, {\n      key: \"collapseToStart\",\n      value: function collapseToStart() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'collapseToStart' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return esValue[implSymbol].collapseToStart();\n      }\n    }, {\n      key: \"collapseToEnd\",\n      value: function collapseToEnd() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'collapseToEnd' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return esValue[implSymbol].collapseToEnd();\n      }\n    }, {\n      key: \"extend\",\n      value: function extend(node) {\n        var _esValue$implSymbol6;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'extend' called on an object that is not a valid instance of Selection.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'extend' on 'Selection': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'extend' on 'Selection': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg3 = arguments[1];\n\n          if (_curArg3 !== undefined) {\n            _curArg3 = conversions[\"unsigned long\"](_curArg3, {\n              context: \"Failed to execute 'extend' on 'Selection': parameter 2\"\n            });\n          } else {\n            _curArg3 = 0;\n          }\n\n          args.push(_curArg3);\n        }\n        return (_esValue$implSymbol6 = esValue[implSymbol]).extend.apply(_esValue$implSymbol6, args);\n      }\n    }, {\n      key: \"setBaseAndExtent\",\n      value: function setBaseAndExtent(anchorNode, anchorOffset, focusNode, focusOffset) {\n        var _esValue$implSymbol7;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'setBaseAndExtent' called on an object that is not a valid instance of Selection.\");\n        }\n\n        if (arguments.length < 4) {\n          throw new TypeError(\"Failed to execute 'setBaseAndExtent' on 'Selection': 4 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'setBaseAndExtent' on 'Selection': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg4 = arguments[1];\n          _curArg4 = conversions[\"unsigned long\"](_curArg4, {\n            context: \"Failed to execute 'setBaseAndExtent' on 'Selection': parameter 2\"\n          });\n          args.push(_curArg4);\n        }\n        {\n          var _curArg5 = arguments[2];\n          _curArg5 = Node.convert(_curArg5, {\n            context: \"Failed to execute 'setBaseAndExtent' on 'Selection': parameter 3\"\n          });\n          args.push(_curArg5);\n        }\n        {\n          var _curArg6 = arguments[3];\n          _curArg6 = conversions[\"unsigned long\"](_curArg6, {\n            context: \"Failed to execute 'setBaseAndExtent' on 'Selection': parameter 4\"\n          });\n          args.push(_curArg6);\n        }\n        return (_esValue$implSymbol7 = esValue[implSymbol]).setBaseAndExtent.apply(_esValue$implSymbol7, args);\n      }\n    }, {\n      key: \"selectAllChildren\",\n      value: function selectAllChildren(node) {\n        var _esValue$implSymbol8;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'selectAllChildren' called on an object that is not a valid instance of Selection.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'selectAllChildren' on 'Selection': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'selectAllChildren' on 'Selection': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol8 = esValue[implSymbol]).selectAllChildren.apply(_esValue$implSymbol8, args);\n      }\n    }, {\n      key: \"deleteFromDocument\",\n      value: function deleteFromDocument() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'deleteFromDocument' called on an object that is not a valid instance of Selection.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol].deleteFromDocument();\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"containsNode\",\n      value: function containsNode(node) {\n        var _esValue$implSymbol9;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'containsNode' called on an object that is not a valid instance of Selection.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'containsNode' on 'Selection': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'containsNode' on 'Selection': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg7 = arguments[1];\n\n          if (_curArg7 !== undefined) {\n            _curArg7 = conversions[\"boolean\"](_curArg7, {\n              context: \"Failed to execute 'containsNode' on 'Selection': parameter 2\"\n            });\n          } else {\n            _curArg7 = false;\n          }\n\n          args.push(_curArg7);\n        }\n        return (_esValue$implSymbol9 = esValue[implSymbol]).containsNode.apply(_esValue$implSymbol9, args);\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'toString' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return esValue[implSymbol].toString();\n      }\n    }, {\n      key: \"anchorNode\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get anchorNode' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"anchorNode\"]);\n      }\n    }, {\n      key: \"anchorOffset\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get anchorOffset' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return esValue[implSymbol][\"anchorOffset\"];\n      }\n    }, {\n      key: \"focusNode\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get focusNode' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"focusNode\"]);\n      }\n    }, {\n      key: \"focusOffset\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get focusOffset' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return esValue[implSymbol][\"focusOffset\"];\n      }\n    }, {\n      key: \"isCollapsed\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get isCollapsed' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return esValue[implSymbol][\"isCollapsed\"];\n      }\n    }, {\n      key: \"rangeCount\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get rangeCount' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return esValue[implSymbol][\"rangeCount\"];\n      }\n    }, {\n      key: \"type\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get type' called on an object that is not a valid instance of Selection.\");\n        }\n\n        return esValue[implSymbol][\"type\"];\n      }\n    }]);\n\n    return Selection;\n  }();\n\n  Object.defineProperties(Selection.prototype, _defineProperty({\n    getRangeAt: {\n      enumerable: true\n    },\n    addRange: {\n      enumerable: true\n    },\n    removeRange: {\n      enumerable: true\n    },\n    removeAllRanges: {\n      enumerable: true\n    },\n    empty: {\n      enumerable: true\n    },\n    collapse: {\n      enumerable: true\n    },\n    setPosition: {\n      enumerable: true\n    },\n    collapseToStart: {\n      enumerable: true\n    },\n    collapseToEnd: {\n      enumerable: true\n    },\n    extend: {\n      enumerable: true\n    },\n    setBaseAndExtent: {\n      enumerable: true\n    },\n    selectAllChildren: {\n      enumerable: true\n    },\n    deleteFromDocument: {\n      enumerable: true\n    },\n    containsNode: {\n      enumerable: true\n    },\n    toString: {\n      enumerable: true\n    },\n    anchorNode: {\n      enumerable: true\n    },\n    anchorOffset: {\n      enumerable: true\n    },\n    focusNode: {\n      enumerable: true\n    },\n    focusOffset: {\n      enumerable: true\n    },\n    isCollapsed: {\n      enumerable: true\n    },\n    rangeCount: {\n      enumerable: true\n    },\n    type: {\n      enumerable: true\n    }\n  }, Symbol.toStringTag, {\n    value: \"Selection\",\n    configurable: true\n  }));\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = Selection;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: Selection\n  });\n};\n\nvar Impl = require(\"../selection/Selection-impl.js\");","map":null,"metadata":{},"sourceType":"script"}