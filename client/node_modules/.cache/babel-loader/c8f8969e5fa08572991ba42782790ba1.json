{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar idlUtils = require(\"../../living/generated/utils\");\n\nvar _require = require(\"../../living/helpers/events\"),\n    fireAnEvent = _require.fireAnEvent;\n\nmodule.exports = /*#__PURE__*/function () {\n  function PerDocumentResourceLoader(document) {\n    _classCallCheck(this, PerDocumentResourceLoader);\n\n    this._document = document;\n    this._defaultEncoding = document._encoding;\n    this._resourceLoader = document._defaultView ? document._defaultView._resourceLoader : null;\n    this._requestManager = document._requestManager;\n    this._queue = document._queue;\n    this._deferQueue = document._deferQueue;\n    this._asyncQueue = document._asyncQueue;\n  }\n\n  _createClass(PerDocumentResourceLoader, [{\n    key: \"fetch\",\n    value: function fetch(url, _ref) {\n      var _this = this;\n\n      var element = _ref.element,\n          onLoad = _ref.onLoad,\n          onError = _ref.onError;\n\n      var request = this._resourceLoader.fetch(url, {\n        cookieJar: this._document._cookieJar,\n        element: idlUtils.wrapperForImpl(element),\n        referrer: this._document.URL\n      });\n\n      if (request === null) {\n        return null;\n      }\n\n      this._requestManager.add(request);\n\n      var onErrorWrapped = function onErrorWrapped(error) {\n        _this._requestManager.remove(request);\n\n        if (onError) {\n          onError(error);\n        }\n\n        fireAnEvent(\"error\", element);\n        var err = new Error(\"Could not load \".concat(element.localName, \": \\\"\").concat(url, \"\\\"\"));\n        err.type = \"resource loading\";\n        err.detail = error;\n\n        _this._document._defaultView._virtualConsole.emit(\"jsdomError\", err);\n\n        return Promise.resolve();\n      };\n\n      var onLoadWrapped = function onLoadWrapped(data) {\n        _this._requestManager.remove(request);\n\n        _this._addCookies(url, request.response ? request.response.headers : {});\n\n        try {\n          var result = onLoad ? onLoad(data) : undefined;\n          return Promise.resolve(result).then(function () {\n            fireAnEvent(\"load\", element);\n            return Promise.resolve();\n          }).catch(function (err) {\n            return onErrorWrapped(err);\n          });\n        } catch (err) {\n          return onErrorWrapped(err);\n        }\n      };\n\n      if (element.localName === \"script\" && element.hasAttributeNS(null, \"async\")) {\n        this._asyncQueue.push(request, onLoadWrapped, onErrorWrapped, this._queue.getLastScript());\n      } else if (element.localName === \"script\" && element.hasAttributeNS(null, \"defer\")) {\n        this._deferQueue.push(request, onLoadWrapped, onErrorWrapped, false, element);\n      } else {\n        this._queue.push(request, onLoadWrapped, onErrorWrapped, false, element);\n      }\n\n      return request;\n    }\n  }, {\n    key: \"_addCookies\",\n    value: function _addCookies(url, headers) {\n      var _this2 = this;\n\n      var cookies = headers[\"set-cookie\"];\n\n      if (!cookies) {\n        return;\n      }\n\n      if (!Array.isArray(cookies)) {\n        cookies = [cookies];\n      }\n\n      cookies.forEach(function (cookie) {\n        _this2._document._cookieJar.setCookieSync(cookie, url, {\n          http: true,\n          ignoreError: true\n        });\n      });\n    }\n  }]);\n\n  return PerDocumentResourceLoader;\n}();","map":null,"metadata":{},"sourceType":"script"}