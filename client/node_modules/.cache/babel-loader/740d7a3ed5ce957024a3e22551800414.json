{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar GetRootNodeOptions = require(\"./GetRootNodeOptions.js\");\n\nvar ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nvar ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nvar EventTarget = require(\"./EventTarget.js\");\n\nvar interfaceName = \"Node\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'Node'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"Node\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor Node is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {\n  EventTarget._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  var _Object$definePropert;\n\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  if (globalObject.EventTarget === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate Node before EventTarget\");\n  }\n\n  var Node = /*#__PURE__*/function (_globalObject$EventTa) {\n    _inherits(Node, _globalObject$EventTa);\n\n    var _super = _createSuper(Node);\n\n    function Node() {\n      var _this;\n\n      _classCallCheck(this, Node);\n\n      throw new TypeError(\"Illegal constructor\");\n      return _possibleConstructorReturn(_this);\n    }\n\n    _createClass(Node, [{\n      key: \"getRootNode\",\n      value: function getRootNode() {\n        var _esValue$implSymbol;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getRootNode' called on an object that is not a valid instance of Node.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = GetRootNodeOptions.convert(curArg, {\n            context: \"Failed to execute 'getRootNode' on 'Node': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol = esValue[implSymbol]).getRootNode.apply(_esValue$implSymbol, args));\n      }\n    }, {\n      key: \"hasChildNodes\",\n      value: function hasChildNodes() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'hasChildNodes' called on an object that is not a valid instance of Node.\");\n        }\n\n        return esValue[implSymbol].hasChildNodes();\n      }\n    }, {\n      key: \"normalize\",\n      value: function normalize() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'normalize' called on an object that is not a valid instance of Node.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol].normalize();\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"cloneNode\",\n      value: function cloneNode() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'cloneNode' called on an object that is not a valid instance of Node.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg !== undefined) {\n            curArg = conversions[\"boolean\"](curArg, {\n              context: \"Failed to execute 'cloneNode' on 'Node': parameter 1\"\n            });\n          } else {\n            curArg = false;\n          }\n\n          args.push(curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol2;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol2 = esValue[implSymbol]).cloneNode.apply(_esValue$implSymbol2, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"isEqualNode\",\n      value: function isEqualNode(otherNode) {\n        var _esValue$implSymbol3;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'isEqualNode' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'isEqualNode' on 'Node': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = exports.convert(curArg, {\n              context: \"Failed to execute 'isEqualNode' on 'Node': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol3 = esValue[implSymbol]).isEqualNode.apply(_esValue$implSymbol3, args);\n      }\n    }, {\n      key: \"isSameNode\",\n      value: function isSameNode(otherNode) {\n        var _esValue$implSymbol4;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'isSameNode' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'isSameNode' on 'Node': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = exports.convert(curArg, {\n              context: \"Failed to execute 'isSameNode' on 'Node': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol4 = esValue[implSymbol]).isSameNode.apply(_esValue$implSymbol4, args);\n      }\n    }, {\n      key: \"compareDocumentPosition\",\n      value: function compareDocumentPosition(other) {\n        var _esValue$implSymbol5;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'compareDocumentPosition' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'compareDocumentPosition' on 'Node': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = exports.convert(curArg, {\n            context: \"Failed to execute 'compareDocumentPosition' on 'Node': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol5 = esValue[implSymbol]).compareDocumentPosition.apply(_esValue$implSymbol5, args);\n      }\n    }, {\n      key: \"contains\",\n      value: function contains(other) {\n        var _esValue$implSymbol6;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'contains' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'contains' on 'Node': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = exports.convert(curArg, {\n              context: \"Failed to execute 'contains' on 'Node': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol6 = esValue[implSymbol]).contains.apply(_esValue$implSymbol6, args);\n      }\n    }, {\n      key: \"lookupPrefix\",\n      value: function lookupPrefix(namespace) {\n        var _esValue$implSymbol7;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'lookupPrefix' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'lookupPrefix' on 'Node': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'lookupPrefix' on 'Node': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol7 = esValue[implSymbol]).lookupPrefix.apply(_esValue$implSymbol7, args);\n      }\n    }, {\n      key: \"lookupNamespaceURI\",\n      value: function lookupNamespaceURI(prefix) {\n        var _esValue$implSymbol8;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'lookupNamespaceURI' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'lookupNamespaceURI' on 'Node': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'lookupNamespaceURI' on 'Node': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol8 = esValue[implSymbol]).lookupNamespaceURI.apply(_esValue$implSymbol8, args);\n      }\n    }, {\n      key: \"isDefaultNamespace\",\n      value: function isDefaultNamespace(namespace) {\n        var _esValue$implSymbol9;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'isDefaultNamespace' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'isDefaultNamespace' on 'Node': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'isDefaultNamespace' on 'Node': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol9 = esValue[implSymbol]).isDefaultNamespace.apply(_esValue$implSymbol9, args);\n      }\n    }, {\n      key: \"insertBefore\",\n      value: function insertBefore(node, child) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'insertBefore' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'insertBefore' on 'Node': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = exports.convert(curArg, {\n            context: \"Failed to execute 'insertBefore' on 'Node': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg = arguments[1];\n\n          if (_curArg === null || _curArg === undefined) {\n            _curArg = null;\n          } else {\n            _curArg = exports.convert(_curArg, {\n              context: \"Failed to execute 'insertBefore' on 'Node': parameter 2\"\n            });\n          }\n\n          args.push(_curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol10;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol10 = esValue[implSymbol]).insertBefore.apply(_esValue$implSymbol10, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"appendChild\",\n      value: function appendChild(node) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'appendChild' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'appendChild' on 'Node': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = exports.convert(curArg, {\n            context: \"Failed to execute 'appendChild' on 'Node': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol11;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol11 = esValue[implSymbol]).appendChild.apply(_esValue$implSymbol11, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"replaceChild\",\n      value: function replaceChild(node, child) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'replaceChild' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'replaceChild' on 'Node': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = exports.convert(curArg, {\n            context: \"Failed to execute 'replaceChild' on 'Node': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg2 = arguments[1];\n          _curArg2 = exports.convert(_curArg2, {\n            context: \"Failed to execute 'replaceChild' on 'Node': parameter 2\"\n          });\n          args.push(_curArg2);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol12;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol12 = esValue[implSymbol]).replaceChild.apply(_esValue$implSymbol12, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"removeChild\",\n      value: function removeChild(child) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'removeChild' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'removeChild' on 'Node': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = exports.convert(curArg, {\n            context: \"Failed to execute 'removeChild' on 'Node': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol13;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol13 = esValue[implSymbol]).removeChild.apply(_esValue$implSymbol13, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"nodeType\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get nodeType' called on an object that is not a valid instance of Node.\");\n        }\n\n        return esValue[implSymbol][\"nodeType\"];\n      }\n    }, {\n      key: \"nodeName\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get nodeName' called on an object that is not a valid instance of Node.\");\n        }\n\n        return esValue[implSymbol][\"nodeName\"];\n      }\n    }, {\n      key: \"baseURI\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get baseURI' called on an object that is not a valid instance of Node.\");\n        }\n\n        return esValue[implSymbol][\"baseURI\"];\n      }\n    }, {\n      key: \"isConnected\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get isConnected' called on an object that is not a valid instance of Node.\");\n        }\n\n        return esValue[implSymbol][\"isConnected\"];\n      }\n    }, {\n      key: \"ownerDocument\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get ownerDocument' called on an object that is not a valid instance of Node.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"ownerDocument\"]);\n      }\n    }, {\n      key: \"parentNode\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get parentNode' called on an object that is not a valid instance of Node.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"parentNode\"]);\n      }\n    }, {\n      key: \"parentElement\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get parentElement' called on an object that is not a valid instance of Node.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"parentElement\"]);\n      }\n    }, {\n      key: \"childNodes\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get childNodes' called on an object that is not a valid instance of Node.\");\n        }\n\n        return utils.getSameObject(this, \"childNodes\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"childNodes\"]);\n        });\n      }\n    }, {\n      key: \"firstChild\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get firstChild' called on an object that is not a valid instance of Node.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"firstChild\"]);\n      }\n    }, {\n      key: \"lastChild\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get lastChild' called on an object that is not a valid instance of Node.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"lastChild\"]);\n      }\n    }, {\n      key: \"previousSibling\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get previousSibling' called on an object that is not a valid instance of Node.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"previousSibling\"]);\n      }\n    }, {\n      key: \"nextSibling\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get nextSibling' called on an object that is not a valid instance of Node.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"nextSibling\"]);\n      }\n    }, {\n      key: \"nodeValue\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get nodeValue' called on an object that is not a valid instance of Node.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol][\"nodeValue\"];\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set nodeValue' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (V === null || V === undefined) {\n          V = null;\n        } else {\n          V = conversions[\"DOMString\"](V, {\n            context: \"Failed to set the 'nodeValue' property on 'Node': The provided value\"\n          });\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol][\"nodeValue\"] = V;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"textContent\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get textContent' called on an object that is not a valid instance of Node.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol][\"textContent\"];\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set textContent' called on an object that is not a valid instance of Node.\");\n        }\n\n        if (V === null || V === undefined) {\n          V = null;\n        } else {\n          V = conversions[\"DOMString\"](V, {\n            context: \"Failed to set the 'textContent' property on 'Node': The provided value\"\n          });\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol][\"textContent\"] = V;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }]);\n\n    return Node;\n  }(globalObject.EventTarget);\n\n  Object.defineProperties(Node.prototype, (_Object$definePropert = {\n    getRootNode: {\n      enumerable: true\n    },\n    hasChildNodes: {\n      enumerable: true\n    },\n    normalize: {\n      enumerable: true\n    },\n    cloneNode: {\n      enumerable: true\n    },\n    isEqualNode: {\n      enumerable: true\n    },\n    isSameNode: {\n      enumerable: true\n    },\n    compareDocumentPosition: {\n      enumerable: true\n    },\n    contains: {\n      enumerable: true\n    },\n    lookupPrefix: {\n      enumerable: true\n    },\n    lookupNamespaceURI: {\n      enumerable: true\n    },\n    isDefaultNamespace: {\n      enumerable: true\n    },\n    insertBefore: {\n      enumerable: true\n    },\n    appendChild: {\n      enumerable: true\n    },\n    replaceChild: {\n      enumerable: true\n    },\n    removeChild: {\n      enumerable: true\n    },\n    nodeType: {\n      enumerable: true\n    },\n    nodeName: {\n      enumerable: true\n    },\n    baseURI: {\n      enumerable: true\n    },\n    isConnected: {\n      enumerable: true\n    },\n    ownerDocument: {\n      enumerable: true\n    },\n    parentNode: {\n      enumerable: true\n    },\n    parentElement: {\n      enumerable: true\n    },\n    childNodes: {\n      enumerable: true\n    },\n    firstChild: {\n      enumerable: true\n    },\n    lastChild: {\n      enumerable: true\n    },\n    previousSibling: {\n      enumerable: true\n    },\n    nextSibling: {\n      enumerable: true\n    },\n    nodeValue: {\n      enumerable: true\n    },\n    textContent: {\n      enumerable: true\n    }\n  }, _defineProperty(_Object$definePropert, Symbol.toStringTag, {\n    value: \"Node\",\n    configurable: true\n  }), _defineProperty(_Object$definePropert, \"ELEMENT_NODE\", {\n    value: 1,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"ATTRIBUTE_NODE\", {\n    value: 2,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"TEXT_NODE\", {\n    value: 3,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"CDATA_SECTION_NODE\", {\n    value: 4,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"ENTITY_REFERENCE_NODE\", {\n    value: 5,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"ENTITY_NODE\", {\n    value: 6,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"PROCESSING_INSTRUCTION_NODE\", {\n    value: 7,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"COMMENT_NODE\", {\n    value: 8,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"DOCUMENT_NODE\", {\n    value: 9,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"DOCUMENT_TYPE_NODE\", {\n    value: 10,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"DOCUMENT_FRAGMENT_NODE\", {\n    value: 11,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"NOTATION_NODE\", {\n    value: 12,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"DOCUMENT_POSITION_DISCONNECTED\", {\n    value: 0x01,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"DOCUMENT_POSITION_PRECEDING\", {\n    value: 0x02,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"DOCUMENT_POSITION_FOLLOWING\", {\n    value: 0x04,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"DOCUMENT_POSITION_CONTAINS\", {\n    value: 0x08,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"DOCUMENT_POSITION_CONTAINED_BY\", {\n    value: 0x10,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\", {\n    value: 0x20,\n    enumerable: true\n  }), _Object$definePropert));\n  Object.defineProperties(Node, {\n    ELEMENT_NODE: {\n      value: 1,\n      enumerable: true\n    },\n    ATTRIBUTE_NODE: {\n      value: 2,\n      enumerable: true\n    },\n    TEXT_NODE: {\n      value: 3,\n      enumerable: true\n    },\n    CDATA_SECTION_NODE: {\n      value: 4,\n      enumerable: true\n    },\n    ENTITY_REFERENCE_NODE: {\n      value: 5,\n      enumerable: true\n    },\n    ENTITY_NODE: {\n      value: 6,\n      enumerable: true\n    },\n    PROCESSING_INSTRUCTION_NODE: {\n      value: 7,\n      enumerable: true\n    },\n    COMMENT_NODE: {\n      value: 8,\n      enumerable: true\n    },\n    DOCUMENT_NODE: {\n      value: 9,\n      enumerable: true\n    },\n    DOCUMENT_TYPE_NODE: {\n      value: 10,\n      enumerable: true\n    },\n    DOCUMENT_FRAGMENT_NODE: {\n      value: 11,\n      enumerable: true\n    },\n    NOTATION_NODE: {\n      value: 12,\n      enumerable: true\n    },\n    DOCUMENT_POSITION_DISCONNECTED: {\n      value: 0x01,\n      enumerable: true\n    },\n    DOCUMENT_POSITION_PRECEDING: {\n      value: 0x02,\n      enumerable: true\n    },\n    DOCUMENT_POSITION_FOLLOWING: {\n      value: 0x04,\n      enumerable: true\n    },\n    DOCUMENT_POSITION_CONTAINS: {\n      value: 0x08,\n      enumerable: true\n    },\n    DOCUMENT_POSITION_CONTAINED_BY: {\n      value: 0x10,\n      enumerable: true\n    },\n    DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {\n      value: 0x20,\n      enumerable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = Node;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: Node\n  });\n};\n\nvar Impl = require(\"../nodes/Node-impl.js\");","map":null,"metadata":{},"sourceType":"script"}