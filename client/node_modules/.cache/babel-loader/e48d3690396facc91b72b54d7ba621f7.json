{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require(\"../../browser/parser\"),\n    parseFragment = _require.parseFragment;\n\nvar _require2 = require(\"../helpers/namespaces.js\"),\n    HTML_NS = _require2.HTML_NS;\n\nvar _require3 = require(\"../helpers/shadow-dom.js\"),\n    isShadowRoot = _require3.isShadowRoot;\n\nvar NODE_TYPE = require(\"../node-type.js\");\n\nvar _require4 = require(\"./serialization.js\"),\n    fragmentSerialization = _require4.fragmentSerialization; // https://w3c.github.io/DOM-Parsing/#the-innerhtml-mixin\n\n\nexports.implementation = /*#__PURE__*/function () {\n  function InnerHTMLImpl() {\n    _classCallCheck(this, InnerHTMLImpl);\n  }\n\n  _createClass(InnerHTMLImpl, [{\n    key: \"innerHTML\",\n    get: // https://w3c.github.io/DOM-Parsing/#dom-innerhtml-innerhtml\n    function get() {\n      return fragmentSerialization(this, {\n        requireWellFormed: true,\n        globalObject: this._globalObject\n      });\n    },\n    set: function set(markup) {\n      var contextElement = isShadowRoot(this) ? this.host : this;\n      var fragment = parseFragment(markup, contextElement);\n      var contextObject = this;\n\n      if (this.nodeType === NODE_TYPE.ELEMENT_NODE && this.localName === \"template\" && this.namespaceURI === HTML_NS) {\n        contextObject = this._templateContents;\n      }\n\n      contextObject._replaceAll(fragment);\n    }\n  }]);\n\n  return InnerHTMLImpl;\n}();","map":null,"metadata":{},"sourceType":"script"}