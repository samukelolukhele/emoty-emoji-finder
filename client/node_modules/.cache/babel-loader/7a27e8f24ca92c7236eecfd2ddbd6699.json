{"ast":null,"code":"\"use strict\";\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nexports.FILTER_ACCEPT = 1; // NodeFilter.FILTER_ACCEPT\n\nexports.FILTER_REJECT = 2; // NodeFilter.FILTER_REJECT\n\nexports.FILTER_SKIP = 3; // NodeFilter.FILTER_SKIP\n\nexports.filter = function (nodeIteratorOrTreeWalkerImpl, nodeImpl) {\n  if (nodeIteratorOrTreeWalkerImpl._active) {\n    throw DOMException.create(nodeIteratorOrTreeWalkerImpl._globalObject, [\"Recursive node filtering\", \"InvalidStateError\"]);\n  }\n\n  var n = nodeImpl.nodeType - 1;\n\n  if (!(1 << n & nodeIteratorOrTreeWalkerImpl.whatToShow)) {\n    return exports.FILTER_SKIP;\n  } // Saving in a variable is important so we don't accidentally call it as a method later.\n\n\n  var filter = nodeIteratorOrTreeWalkerImpl.filter;\n\n  if (filter === null) {\n    return exports.FILTER_ACCEPT;\n  }\n\n  nodeIteratorOrTreeWalkerImpl._active = true;\n  var result; // https://github.com/whatwg/dom/issues/494\n\n  try {\n    result = filter(nodeImpl);\n  } finally {\n    nodeIteratorOrTreeWalkerImpl._active = false;\n  }\n\n  result = conversions[\"unsigned short\"](result);\n  return result;\n};","map":null,"metadata":{},"sourceType":"script"}