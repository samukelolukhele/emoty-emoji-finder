{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar EventModifierInit = require(\"./EventModifierInit.js\");\n\nexports._convertInherit = function (obj, ret) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  EventModifierInit._convertInherit(obj, ret, {\n    context: context\n  });\n\n  {\n    var key = \"changedTouches\";\n    var value = obj === undefined || obj === null ? undefined : obj[key];\n\n    if (value !== undefined) {\n      if (!utils.isObject(value)) {\n        throw new TypeError(context + \" has member 'changedTouches' that\" + \" is not an iterable object.\");\n      } else {\n        var V = [];\n        var tmp = value;\n\n        var _iterator = _createForOfIteratorHelper(tmp),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var nextItem = _step.value;\n            nextItem = utils.tryImplForWrapper(nextItem);\n            V.push(nextItem);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        value = V;\n      }\n\n      ret[key] = value;\n    } else {\n      ret[key] = [];\n    }\n  }\n  {\n    var _key = \"targetTouches\";\n\n    var _value = obj === undefined || obj === null ? undefined : obj[_key];\n\n    if (_value !== undefined) {\n      if (!utils.isObject(_value)) {\n        throw new TypeError(context + \" has member 'targetTouches' that\" + \" is not an iterable object.\");\n      } else {\n        var _V = [];\n        var _tmp = _value;\n\n        var _iterator2 = _createForOfIteratorHelper(_tmp),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _nextItem = _step2.value;\n            _nextItem = utils.tryImplForWrapper(_nextItem);\n\n            _V.push(_nextItem);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        _value = _V;\n      }\n\n      ret[_key] = _value;\n    } else {\n      ret[_key] = [];\n    }\n  }\n  {\n    var _key2 = \"touches\";\n\n    var _value2 = obj === undefined || obj === null ? undefined : obj[_key2];\n\n    if (_value2 !== undefined) {\n      if (!utils.isObject(_value2)) {\n        throw new TypeError(context + \" has member 'touches' that\" + \" is not an iterable object.\");\n      } else {\n        var _V2 = [];\n        var _tmp2 = _value2;\n\n        var _iterator3 = _createForOfIteratorHelper(_tmp2),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _nextItem2 = _step3.value;\n            _nextItem2 = utils.tryImplForWrapper(_nextItem2);\n\n            _V2.push(_nextItem2);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        _value2 = _V2;\n      }\n\n      ret[_key2] = _value2;\n    } else {\n      ret[_key2] = [];\n    }\n  }\n};\n\nexports.convert = function convert(obj) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$context = _ref2.context,\n      context = _ref2$context === void 0 ? \"The provided value\" : _ref2$context;\n\n  if (obj !== undefined && typeof obj !== \"object\" && typeof obj !== \"function\") {\n    throw new TypeError(\"\".concat(context, \" is not an object.\"));\n  }\n\n  var ret = Object.create(null);\n\n  exports._convertInherit(obj, ret, {\n    context: context\n  });\n\n  return ret;\n};","map":null,"metadata":{},"sourceType":"script"}