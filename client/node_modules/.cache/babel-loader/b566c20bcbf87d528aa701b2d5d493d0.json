{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _require = require(\"./utils.js\"),\n    solelyContainsHTTPTokenCodePoints = _require.solelyContainsHTTPTokenCodePoints;\n\nmodule.exports = function (mimeType) {\n  var serialization = \"\".concat(mimeType.type, \"/\").concat(mimeType.subtype);\n\n  if (mimeType.parameters.size === 0) {\n    return serialization;\n  }\n\n  var _iterator = _createForOfIteratorHelper(mimeType.parameters),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          name = _step$value[0],\n          value = _step$value[1];\n\n      serialization += \";\";\n      serialization += name;\n      serialization += \"=\";\n\n      if (!solelyContainsHTTPTokenCodePoints(value) || value.length === 0) {\n        value = value.replace(/([\"\\\\])/g, \"\\\\$1\");\n        value = \"\\\"\".concat(value, \"\\\"\");\n      }\n\n      serialization += value;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return serialization;\n};","map":null,"metadata":{},"sourceType":"script"}