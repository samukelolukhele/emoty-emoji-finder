{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar TextTrackKind = require(\"./TextTrackKind.js\");\n\nvar parseURLToResultingURLRecord_helpers_document_base_url = require(\"../helpers/document-base-url.js\").parseURLToResultingURLRecord;\n\nvar serializeURLwhatwg_url = require(\"whatwg-url\").serializeURL;\n\nvar ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nvar ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nvar HTMLElement = require(\"./HTMLElement.js\");\n\nvar interfaceName = \"HTMLMediaElement\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'HTMLMediaElement'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"HTMLMediaElement\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor HTMLMediaElement is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {\n  HTMLElement._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  var _Object$definePropert;\n\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  if (globalObject.HTMLElement === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate HTMLMediaElement before HTMLElement\");\n  }\n\n  var HTMLMediaElement = /*#__PURE__*/function (_globalObject$HTMLEle) {\n    _inherits(HTMLMediaElement, _globalObject$HTMLEle);\n\n    var _super = _createSuper(HTMLMediaElement);\n\n    function HTMLMediaElement() {\n      var _this;\n\n      _classCallCheck(this, HTMLMediaElement);\n\n      throw new TypeError(\"Illegal constructor\");\n      return _possibleConstructorReturn(_this);\n    }\n\n    _createClass(HTMLMediaElement, [{\n      key: \"load\",\n      value: function load() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'load' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol].load();\n      }\n    }, {\n      key: \"canPlayType\",\n      value: function canPlayType(type) {\n        var _esValue$implSymbol;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'canPlayType' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'canPlayType' on 'HTMLMediaElement': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'canPlayType' on 'HTMLMediaElement': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol = esValue[implSymbol]).canPlayType.apply(_esValue$implSymbol, args));\n      }\n    }, {\n      key: \"play\",\n      value: function play() {\n        try {\n          var esValue = this !== null && this !== undefined ? this : globalObject;\n\n          if (!exports.is(esValue)) {\n            throw new TypeError(\"'play' called on an object that is not a valid instance of HTMLMediaElement.\");\n          }\n\n          return utils.tryWrapperForImpl(esValue[implSymbol].play());\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n    }, {\n      key: \"pause\",\n      value: function pause() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'pause' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol].pause();\n      }\n    }, {\n      key: \"addTextTrack\",\n      value: function addTextTrack(kind) {\n        var _esValue$implSymbol2;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'addTextTrack' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'addTextTrack' on 'HTMLMediaElement': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = TextTrackKind.convert(curArg, {\n            context: \"Failed to execute 'addTextTrack' on 'HTMLMediaElement': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg = arguments[1];\n\n          if (_curArg !== undefined) {\n            _curArg = conversions[\"DOMString\"](_curArg, {\n              context: \"Failed to execute 'addTextTrack' on 'HTMLMediaElement': parameter 2\"\n            });\n          } else {\n            _curArg = \"\";\n          }\n\n          args.push(_curArg);\n        }\n        {\n          var _curArg2 = arguments[2];\n\n          if (_curArg2 !== undefined) {\n            _curArg2 = conversions[\"DOMString\"](_curArg2, {\n              context: \"Failed to execute 'addTextTrack' on 'HTMLMediaElement': parameter 3\"\n            });\n          } else {\n            _curArg2 = \"\";\n          }\n\n          args.push(_curArg2);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol2 = esValue[implSymbol]).addTextTrack.apply(_esValue$implSymbol2, args));\n      }\n    }, {\n      key: \"src\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get src' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"src\");\n\n          if (value === null) {\n            return \"\";\n          }\n\n          var urlRecord = parseURLToResultingURLRecord_helpers_document_base_url(value, esValue[implSymbol]._ownerDocument);\n\n          if (urlRecord !== null) {\n            return serializeURLwhatwg_url(urlRecord);\n          }\n\n          return conversions.USVString(value);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set src' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'src' property on 'HTMLMediaElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"src\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"currentSrc\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get currentSrc' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"currentSrc\"];\n      }\n    }, {\n      key: \"crossOrigin\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get crossOrigin' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"crossorigin\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set crossOrigin' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        if (V === null || V === undefined) {\n          V = null;\n        } else {\n          V = conversions[\"DOMString\"](V, {\n            context: \"Failed to set the 'crossOrigin' property on 'HTMLMediaElement': The provided value\"\n          });\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"crossorigin\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"networkState\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get networkState' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"networkState\"];\n      }\n    }, {\n      key: \"preload\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get preload' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"preload\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set preload' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'preload' property on 'HTMLMediaElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"preload\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"buffered\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get buffered' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"buffered\"]);\n      }\n    }, {\n      key: \"readyState\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get readyState' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"readyState\"];\n      }\n    }, {\n      key: \"seeking\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get seeking' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"seeking\"];\n      }\n    }, {\n      key: \"currentTime\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get currentTime' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"currentTime\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set currentTime' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        V = conversions[\"double\"](V, {\n          context: \"Failed to set the 'currentTime' property on 'HTMLMediaElement': The provided value\"\n        });\n        esValue[implSymbol][\"currentTime\"] = V;\n      }\n    }, {\n      key: \"duration\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get duration' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"duration\"];\n      }\n    }, {\n      key: \"paused\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get paused' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"paused\"];\n      }\n    }, {\n      key: \"defaultPlaybackRate\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get defaultPlaybackRate' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"defaultPlaybackRate\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set defaultPlaybackRate' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        V = conversions[\"double\"](V, {\n          context: \"Failed to set the 'defaultPlaybackRate' property on 'HTMLMediaElement': The provided value\"\n        });\n        esValue[implSymbol][\"defaultPlaybackRate\"] = V;\n      }\n    }, {\n      key: \"playbackRate\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get playbackRate' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"playbackRate\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set playbackRate' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        V = conversions[\"double\"](V, {\n          context: \"Failed to set the 'playbackRate' property on 'HTMLMediaElement': The provided value\"\n        });\n        esValue[implSymbol][\"playbackRate\"] = V;\n      }\n    }, {\n      key: \"played\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get played' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"played\"]);\n      }\n    }, {\n      key: \"seekable\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get seekable' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"seekable\"]);\n      }\n    }, {\n      key: \"ended\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get ended' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"ended\"];\n      }\n    }, {\n      key: \"autoplay\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get autoplay' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol].hasAttributeNS(null, \"autoplay\");\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set autoplay' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        V = conversions[\"boolean\"](V, {\n          context: \"Failed to set the 'autoplay' property on 'HTMLMediaElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          if (V) {\n            esValue[implSymbol].setAttributeNS(null, \"autoplay\", \"\");\n          } else {\n            esValue[implSymbol].removeAttributeNS(null, \"autoplay\");\n          }\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"loop\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get loop' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol].hasAttributeNS(null, \"loop\");\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set loop' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        V = conversions[\"boolean\"](V, {\n          context: \"Failed to set the 'loop' property on 'HTMLMediaElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          if (V) {\n            esValue[implSymbol].setAttributeNS(null, \"loop\", \"\");\n          } else {\n            esValue[implSymbol].removeAttributeNS(null, \"loop\");\n          }\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"controls\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get controls' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol].hasAttributeNS(null, \"controls\");\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set controls' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        V = conversions[\"boolean\"](V, {\n          context: \"Failed to set the 'controls' property on 'HTMLMediaElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          if (V) {\n            esValue[implSymbol].setAttributeNS(null, \"controls\", \"\");\n          } else {\n            esValue[implSymbol].removeAttributeNS(null, \"controls\");\n          }\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"volume\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get volume' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"volume\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set volume' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        V = conversions[\"double\"](V, {\n          context: \"Failed to set the 'volume' property on 'HTMLMediaElement': The provided value\"\n        });\n        esValue[implSymbol][\"volume\"] = V;\n      }\n    }, {\n      key: \"muted\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get muted' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return esValue[implSymbol][\"muted\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set muted' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        V = conversions[\"boolean\"](V, {\n          context: \"Failed to set the 'muted' property on 'HTMLMediaElement': The provided value\"\n        });\n        esValue[implSymbol][\"muted\"] = V;\n      }\n    }, {\n      key: \"defaultMuted\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get defaultMuted' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol].hasAttributeNS(null, \"muted\");\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set defaultMuted' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        V = conversions[\"boolean\"](V, {\n          context: \"Failed to set the 'defaultMuted' property on 'HTMLMediaElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          if (V) {\n            esValue[implSymbol].setAttributeNS(null, \"muted\", \"\");\n          } else {\n            esValue[implSymbol].removeAttributeNS(null, \"muted\");\n          }\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"audioTracks\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get audioTracks' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return utils.getSameObject(this, \"audioTracks\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"audioTracks\"]);\n        });\n      }\n    }, {\n      key: \"videoTracks\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get videoTracks' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return utils.getSameObject(this, \"videoTracks\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"videoTracks\"]);\n        });\n      }\n    }, {\n      key: \"textTracks\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get textTracks' called on an object that is not a valid instance of HTMLMediaElement.\");\n        }\n\n        return utils.getSameObject(this, \"textTracks\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"textTracks\"]);\n        });\n      }\n    }]);\n\n    return HTMLMediaElement;\n  }(globalObject.HTMLElement);\n\n  Object.defineProperties(HTMLMediaElement.prototype, (_Object$definePropert = {\n    load: {\n      enumerable: true\n    },\n    canPlayType: {\n      enumerable: true\n    },\n    play: {\n      enumerable: true\n    },\n    pause: {\n      enumerable: true\n    },\n    addTextTrack: {\n      enumerable: true\n    },\n    src: {\n      enumerable: true\n    },\n    currentSrc: {\n      enumerable: true\n    },\n    crossOrigin: {\n      enumerable: true\n    },\n    networkState: {\n      enumerable: true\n    },\n    preload: {\n      enumerable: true\n    },\n    buffered: {\n      enumerable: true\n    },\n    readyState: {\n      enumerable: true\n    },\n    seeking: {\n      enumerable: true\n    },\n    currentTime: {\n      enumerable: true\n    },\n    duration: {\n      enumerable: true\n    },\n    paused: {\n      enumerable: true\n    },\n    defaultPlaybackRate: {\n      enumerable: true\n    },\n    playbackRate: {\n      enumerable: true\n    },\n    played: {\n      enumerable: true\n    },\n    seekable: {\n      enumerable: true\n    },\n    ended: {\n      enumerable: true\n    },\n    autoplay: {\n      enumerable: true\n    },\n    loop: {\n      enumerable: true\n    },\n    controls: {\n      enumerable: true\n    },\n    volume: {\n      enumerable: true\n    },\n    muted: {\n      enumerable: true\n    },\n    defaultMuted: {\n      enumerable: true\n    },\n    audioTracks: {\n      enumerable: true\n    },\n    videoTracks: {\n      enumerable: true\n    },\n    textTracks: {\n      enumerable: true\n    }\n  }, _defineProperty(_Object$definePropert, Symbol.toStringTag, {\n    value: \"HTMLMediaElement\",\n    configurable: true\n  }), _defineProperty(_Object$definePropert, \"NETWORK_EMPTY\", {\n    value: 0,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"NETWORK_IDLE\", {\n    value: 1,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"NETWORK_LOADING\", {\n    value: 2,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"NETWORK_NO_SOURCE\", {\n    value: 3,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"HAVE_NOTHING\", {\n    value: 0,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"HAVE_METADATA\", {\n    value: 1,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"HAVE_CURRENT_DATA\", {\n    value: 2,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"HAVE_FUTURE_DATA\", {\n    value: 3,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"HAVE_ENOUGH_DATA\", {\n    value: 4,\n    enumerable: true\n  }), _Object$definePropert));\n  Object.defineProperties(HTMLMediaElement, {\n    NETWORK_EMPTY: {\n      value: 0,\n      enumerable: true\n    },\n    NETWORK_IDLE: {\n      value: 1,\n      enumerable: true\n    },\n    NETWORK_LOADING: {\n      value: 2,\n      enumerable: true\n    },\n    NETWORK_NO_SOURCE: {\n      value: 3,\n      enumerable: true\n    },\n    HAVE_NOTHING: {\n      value: 0,\n      enumerable: true\n    },\n    HAVE_METADATA: {\n      value: 1,\n      enumerable: true\n    },\n    HAVE_CURRENT_DATA: {\n      value: 2,\n      enumerable: true\n    },\n    HAVE_FUTURE_DATA: {\n      value: 3,\n      enumerable: true\n    },\n    HAVE_ENOUGH_DATA: {\n      value: 4,\n      enumerable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = HTMLMediaElement;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: HTMLMediaElement\n  });\n};\n\nvar Impl = require(\"../nodes/HTMLMediaElement-impl.js\");","map":null,"metadata":{},"sourceType":"script"}