{"ast":null,"code":"\"use strict\";\n/**\n * Manage all the request and it is able to abort\n * all pending request.\n */\n\nvar _createForOfIteratorHelper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createClass\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function RequestManager() {\n    _classCallCheck(this, RequestManager);\n\n    this.openedRequests = [];\n  }\n\n  _createClass(RequestManager, [{\n    key: \"add\",\n    value: function add(req) {\n      this.openedRequests.push(req);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(req) {\n      var idx = this.openedRequests.indexOf(req);\n\n      if (idx !== -1) {\n        this.openedRequests.splice(idx, 1);\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _iterator = _createForOfIteratorHelper(this.openedRequests),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var openedRequest = _step.value;\n          openedRequest.abort();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.openedRequests = [];\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.openedRequests.length;\n    }\n  }]);\n\n  return RequestManager;\n}();","map":null,"metadata":{},"sourceType":"script"}