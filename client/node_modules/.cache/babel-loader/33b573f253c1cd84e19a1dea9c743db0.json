{"ast":null,"code":"//.CommonJS\nvar CSSOM = {\n  CSSRule: require(\"./CSSRule\").CSSRule,\n  CSSGroupingRule: require(\"./CSSGroupingRule\").CSSGroupingRule,\n  CSSConditionRule: require(\"./CSSConditionRule\").CSSConditionRule,\n  MediaList: require(\"./MediaList\").MediaList\n}; ///CommonJS\n\n/**\n * @constructor\n * @see http://dev.w3.org/csswg/cssom/#cssmediarule\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule\n */\n\nCSSOM.CSSMediaRule = function CSSMediaRule() {\n  CSSOM.CSSConditionRule.call(this);\n  this.media = new CSSOM.MediaList();\n};\n\nCSSOM.CSSMediaRule.prototype = new CSSOM.CSSConditionRule();\nCSSOM.CSSMediaRule.prototype.constructor = CSSOM.CSSMediaRule;\nCSSOM.CSSMediaRule.prototype.type = 4; // https://opensource.apple.com/source/WebCore/WebCore-7611.1.21.161.3/css/CSSMediaRule.cpp\n\nObject.defineProperties(CSSOM.CSSMediaRule.prototype, {\n  \"conditionText\": {\n    get: function get() {\n      return this.media.mediaText;\n    },\n    set: function set(value) {\n      this.media.mediaText = value;\n    },\n    configurable: true,\n    enumerable: true\n  },\n  \"cssText\": {\n    get: function get() {\n      var cssTexts = [];\n\n      for (var i = 0, length = this.cssRules.length; i < length; i++) {\n        cssTexts.push(this.cssRules[i].cssText);\n      }\n\n      return \"@media \" + this.media.mediaText + \" {\" + cssTexts.join(\"\") + \"}\";\n    },\n    configurable: true,\n    enumerable: true\n  }\n}); //.CommonJS\n\nexports.CSSMediaRule = CSSOM.CSSMediaRule; ///CommonJS","map":null,"metadata":{},"sourceType":"script"}