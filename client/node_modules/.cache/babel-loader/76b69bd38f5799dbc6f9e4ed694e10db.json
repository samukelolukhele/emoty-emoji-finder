{"ast":null,"code":"\"use strict\";\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nexports.convert = function convert(value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (!utils.isObject(value)) {\n    throw new TypeError(\"\".concat(context, \" is not an object.\"));\n  }\n\n  function callTheUserObjectsOperation(event) {\n    var thisArg = utils.tryWrapperForImpl(this);\n    var O = value;\n    var X = O;\n\n    if (typeof O !== \"function\") {\n      X = O[\"handleEvent\"];\n\n      if (typeof X !== \"function\") {\n        throw new TypeError(\"\".concat(context, \" does not correctly implement EventListener.\"));\n      }\n\n      thisArg = O;\n    }\n\n    event = utils.tryWrapperForImpl(event);\n    var callResult = Reflect.apply(X, thisArg, [event]);\n  }\n\n  callTheUserObjectsOperation[utils.wrapperSymbol] = value;\n  callTheUserObjectsOperation.objectReference = value;\n  return callTheUserObjectsOperation;\n};\n\nexports.install = function (globalObject, globalNames) {};","map":null,"metadata":{},"sourceType":"script"}