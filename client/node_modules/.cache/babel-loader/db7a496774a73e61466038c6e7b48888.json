{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _INTERFACE_TAG_MAPPIN;\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar interfaces = require(\"../interfaces\");\n\nvar _require = require(\"../generated/utils\"),\n    implForWrapper = _require.implForWrapper;\n\nvar _require2 = require(\"./namespaces\"),\n    HTML_NS = _require2.HTML_NS,\n    SVG_NS = _require2.SVG_NS;\n\nvar _require3 = require(\"./internal-constants\"),\n    domSymbolTree = _require3.domSymbolTree;\n\nvar _require4 = require(\"./validate-names\"),\n    validateAndExtract = _require4.validateAndExtract;\n\nvar reportException = require(\"./runtime-script-errors\");\n\nvar _require5 = require(\"./custom-elements\"),\n    isValidCustomElementName = _require5.isValidCustomElementName,\n    upgradeElement = _require5.upgradeElement,\n    lookupCEDefinition = _require5.lookupCEDefinition,\n    enqueueCEUpgradeReaction = _require5.enqueueCEUpgradeReaction;\n\nvar INTERFACE_TAG_MAPPING = (_INTERFACE_TAG_MAPPIN = {}, _defineProperty(_INTERFACE_TAG_MAPPIN, HTML_NS, {\n  HTMLElement: [\"abbr\", \"address\", \"article\", \"aside\", \"b\", \"bdi\", \"bdo\", \"cite\", \"code\", \"dd\", \"dfn\", \"dt\", \"em\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"i\", \"kbd\", \"main\", \"mark\", \"nav\", \"noscript\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"section\", \"small\", \"strong\", \"sub\", \"summary\", \"sup\", \"u\", \"var\", \"wbr\"],\n  HTMLAnchorElement: [\"a\"],\n  HTMLAreaElement: [\"area\"],\n  HTMLAudioElement: [\"audio\"],\n  HTMLBaseElement: [\"base\"],\n  HTMLBodyElement: [\"body\"],\n  HTMLBRElement: [\"br\"],\n  HTMLButtonElement: [\"button\"],\n  HTMLCanvasElement: [\"canvas\"],\n  HTMLDataElement: [\"data\"],\n  HTMLDataListElement: [\"datalist\"],\n  HTMLDetailsElement: [\"details\"],\n  HTMLDialogElement: [\"dialog\"],\n  HTMLDirectoryElement: [\"dir\"],\n  HTMLDivElement: [\"div\"],\n  HTMLDListElement: [\"dl\"],\n  HTMLEmbedElement: [\"embed\"],\n  HTMLFieldSetElement: [\"fieldset\"],\n  HTMLFontElement: [\"font\"],\n  HTMLFormElement: [\"form\"],\n  HTMLFrameElement: [\"frame\"],\n  HTMLFrameSetElement: [\"frameset\"],\n  HTMLHeadingElement: [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n  HTMLHeadElement: [\"head\"],\n  HTMLHRElement: [\"hr\"],\n  HTMLHtmlElement: [\"html\"],\n  HTMLIFrameElement: [\"iframe\"],\n  HTMLImageElement: [\"img\"],\n  HTMLInputElement: [\"input\"],\n  HTMLLabelElement: [\"label\"],\n  HTMLLegendElement: [\"legend\"],\n  HTMLLIElement: [\"li\"],\n  HTMLLinkElement: [\"link\"],\n  HTMLMapElement: [\"map\"],\n  HTMLMarqueeElement: [\"marquee\"],\n  HTMLMediaElement: [],\n  HTMLMenuElement: [\"menu\"],\n  HTMLMetaElement: [\"meta\"],\n  HTMLMeterElement: [\"meter\"],\n  HTMLModElement: [\"del\", \"ins\"],\n  HTMLObjectElement: [\"object\"],\n  HTMLOListElement: [\"ol\"],\n  HTMLOptGroupElement: [\"optgroup\"],\n  HTMLOptionElement: [\"option\"],\n  HTMLOutputElement: [\"output\"],\n  HTMLParagraphElement: [\"p\"],\n  HTMLParamElement: [\"param\"],\n  HTMLPictureElement: [\"picture\"],\n  HTMLPreElement: [\"listing\", \"pre\", \"xmp\"],\n  HTMLProgressElement: [\"progress\"],\n  HTMLQuoteElement: [\"blockquote\", \"q\"],\n  HTMLScriptElement: [\"script\"],\n  HTMLSelectElement: [\"select\"],\n  HTMLSlotElement: [\"slot\"],\n  HTMLSourceElement: [\"source\"],\n  HTMLSpanElement: [\"span\"],\n  HTMLStyleElement: [\"style\"],\n  HTMLTableCaptionElement: [\"caption\"],\n  HTMLTableCellElement: [\"th\", \"td\"],\n  HTMLTableColElement: [\"col\", \"colgroup\"],\n  HTMLTableElement: [\"table\"],\n  HTMLTimeElement: [\"time\"],\n  HTMLTitleElement: [\"title\"],\n  HTMLTableRowElement: [\"tr\"],\n  HTMLTableSectionElement: [\"thead\", \"tbody\", \"tfoot\"],\n  HTMLTemplateElement: [\"template\"],\n  HTMLTextAreaElement: [\"textarea\"],\n  HTMLTrackElement: [\"track\"],\n  HTMLUListElement: [\"ul\"],\n  HTMLUnknownElement: [],\n  HTMLVideoElement: [\"video\"]\n}), _defineProperty(_INTERFACE_TAG_MAPPIN, SVG_NS, {\n  SVGElement: [],\n  SVGGraphicsElement: [],\n  SVGSVGElement: [\"svg\"],\n  SVGTitleElement: [\"title\"]\n}), _INTERFACE_TAG_MAPPIN);\nvar TAG_INTERFACE_LOOKUP = {};\n\nfor (var _i = 0, _arr = [HTML_NS, SVG_NS]; _i < _arr.length; _i++) {\n  var namespace = _arr[_i];\n  TAG_INTERFACE_LOOKUP[namespace] = {};\n  var interfaceNames = Object.keys(INTERFACE_TAG_MAPPING[namespace]);\n\n  for (var _i2 = 0, _interfaceNames = interfaceNames; _i2 < _interfaceNames.length; _i2++) {\n    var interfaceName = _interfaceNames[_i2];\n    var tagNames = INTERFACE_TAG_MAPPING[namespace][interfaceName];\n\n    var _iterator = _createForOfIteratorHelper(tagNames),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var tagName = _step.value;\n        TAG_INTERFACE_LOOKUP[namespace][tagName] = interfaceName;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n}\n\nvar UNKNOWN_HTML_ELEMENTS_NAMES = [\"applet\", \"bgsound\", \"blink\", \"isindex\", \"keygen\", \"multicol\", \"nextid\", \"spacer\"];\nvar HTML_ELEMENTS_NAMES = [\"acronym\", \"basefont\", \"big\", \"center\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"strike\", \"tt\"]; // https://html.spec.whatwg.org/multipage/dom.html#elements-in-the-dom:element-interface\n\nfunction getHTMLElementInterface(name) {\n  if (UNKNOWN_HTML_ELEMENTS_NAMES.includes(name)) {\n    return interfaces.getInterfaceWrapper(\"HTMLUnknownElement\");\n  }\n\n  if (HTML_ELEMENTS_NAMES.includes(name)) {\n    return interfaces.getInterfaceWrapper(\"HTMLElement\");\n  }\n\n  var specDefinedInterface = TAG_INTERFACE_LOOKUP[HTML_NS][name];\n\n  if (specDefinedInterface !== undefined) {\n    return interfaces.getInterfaceWrapper(specDefinedInterface);\n  }\n\n  if (isValidCustomElementName(name)) {\n    return interfaces.getInterfaceWrapper(\"HTMLElement\");\n  }\n\n  return interfaces.getInterfaceWrapper(\"HTMLUnknownElement\");\n} // https://svgwg.org/svg2-draft/types.html#ElementsInTheSVGDOM\n\n\nfunction getSVGInterface(name) {\n  var specDefinedInterface = TAG_INTERFACE_LOOKUP[SVG_NS][name];\n\n  if (specDefinedInterface !== undefined) {\n    return interfaces.getInterfaceWrapper(specDefinedInterface);\n  }\n\n  return interfaces.getInterfaceWrapper(\"SVGElement\");\n} // Returns the list of valid tag names that can bo associated with a element given its namespace and name.\n\n\nfunction getValidTagNames(namespace, name) {\n  if (INTERFACE_TAG_MAPPING[namespace] && INTERFACE_TAG_MAPPING[namespace][name]) {\n    return INTERFACE_TAG_MAPPING[namespace][name];\n  }\n\n  return [];\n} // https://dom.spec.whatwg.org/#concept-create-element\n\n\nfunction createElement(document, localName, namespace) {\n  var prefix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var isValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var synchronousCE = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var result = null;\n  var _globalObject = document._globalObject;\n  var definition = lookupCEDefinition(document, namespace, localName, isValue);\n\n  if (definition !== null && definition.name !== localName) {\n    var elementInterface = getHTMLElementInterface(localName);\n    result = elementInterface.createImpl(_globalObject, [], {\n      ownerDocument: document,\n      localName: localName,\n      namespace: HTML_NS,\n      prefix: prefix,\n      ceState: \"undefined\",\n      ceDefinition: null,\n      isValue: isValue\n    });\n\n    if (synchronousCE) {\n      upgradeElement(definition, result);\n    } else {\n      enqueueCEUpgradeReaction(result, definition);\n    }\n  } else if (definition !== null) {\n    if (synchronousCE) {\n      try {\n        var C = definition.constructor;\n        var resultWrapper = C.construct();\n        result = implForWrapper(resultWrapper);\n\n        if (!result._ceState || !result._ceDefinition || result._namespaceURI !== HTML_NS) {\n          throw new TypeError(\"Internal error: Invalid custom element.\");\n        }\n\n        if (result._attributeList.length !== 0) {\n          throw DOMException.create(_globalObject, [\"Unexpected attributes.\", \"NotSupportedError\"]);\n        }\n\n        if (domSymbolTree.hasChildren(result)) {\n          throw DOMException.create(_globalObject, [\"Unexpected child nodes.\", \"NotSupportedError\"]);\n        }\n\n        if (domSymbolTree.parent(result)) {\n          throw DOMException.create(_globalObject, [\"Unexpected element parent.\", \"NotSupportedError\"]);\n        }\n\n        if (result._ownerDocument !== document) {\n          throw DOMException.create(_globalObject, [\"Unexpected element owner document.\", \"NotSupportedError\"]);\n        }\n\n        if (result._namespaceURI !== namespace) {\n          throw DOMException.create(_globalObject, [\"Unexpected element namespace URI.\", \"NotSupportedError\"]);\n        }\n\n        if (result._localName !== localName) {\n          throw DOMException.create(_globalObject, [\"Unexpected element local name.\", \"NotSupportedError\"]);\n        }\n\n        result._prefix = prefix;\n        result._isValue = isValue;\n      } catch (error) {\n        reportException(document._defaultView, error);\n        var interfaceWrapper = interfaces.getInterfaceWrapper(\"HTMLUnknownElement\");\n        result = interfaceWrapper.createImpl(_globalObject, [], {\n          ownerDocument: document,\n          localName: localName,\n          namespace: HTML_NS,\n          prefix: prefix,\n          ceState: \"failed\",\n          ceDefinition: null,\n          isValue: null\n        });\n      }\n    } else {\n      var _interfaceWrapper = interfaces.getInterfaceWrapper(\"HTMLElement\");\n\n      result = _interfaceWrapper.createImpl(_globalObject, [], {\n        ownerDocument: document,\n        localName: localName,\n        namespace: HTML_NS,\n        prefix: prefix,\n        ceState: \"undefined\",\n        ceDefinition: null,\n        isValue: null\n      });\n      enqueueCEUpgradeReaction(result, definition);\n    }\n  } else {\n    var _elementInterface;\n\n    switch (namespace) {\n      case HTML_NS:\n        _elementInterface = getHTMLElementInterface(localName);\n        break;\n\n      case SVG_NS:\n        _elementInterface = getSVGInterface(localName);\n        break;\n\n      default:\n        _elementInterface = interfaces.getInterfaceWrapper(\"Element\");\n        break;\n    }\n\n    result = _elementInterface.createImpl(_globalObject, [], {\n      ownerDocument: document,\n      localName: localName,\n      namespace: namespace,\n      prefix: prefix,\n      ceState: \"uncustomized\",\n      ceDefinition: null,\n      isValue: isValue\n    });\n\n    if (namespace === HTML_NS && (isValidCustomElementName(localName) || isValue !== null)) {\n      result._ceState = \"undefined\";\n    }\n  }\n\n  return result;\n} // https://dom.spec.whatwg.org/#internal-createelementns-steps\n\n\nfunction internalCreateElementNSSteps(document, namespace, qualifiedName, options) {\n  var extracted = validateAndExtract(document._globalObject, namespace, qualifiedName);\n  var isValue = null;\n\n  if (options && options.is !== undefined) {\n    isValue = options.is;\n  }\n\n  return createElement(document, extracted.localName, extracted.namespace, extracted.prefix, isValue, true);\n}\n\nmodule.exports = {\n  createElement: createElement,\n  internalCreateElementNSSteps: internalCreateElementNSSteps,\n  getValidTagNames: getValidTagNames,\n  getHTMLElementInterface: getHTMLElementInterface\n};","map":null,"metadata":{},"sourceType":"script"}