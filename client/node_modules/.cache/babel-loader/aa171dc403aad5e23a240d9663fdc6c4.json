{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _createForOfIteratorHelper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar Blob = require(\"./Blob.js\");\n\nvar EventHandlerNonNull = require(\"./EventHandlerNonNull.js\");\n\nvar BinaryType = require(\"./BinaryType.js\");\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nvar EventTarget = require(\"./EventTarget.js\");\n\nvar interfaceName = \"WebSocket\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'WebSocket'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"WebSocket\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor WebSocket is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {\n  EventTarget._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = function (globalObject, globalNames) {\n  var _Object$definePropert;\n\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  if (globalObject.EventTarget === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate WebSocket before EventTarget\");\n  }\n\n  var WebSocket = /*#__PURE__*/function (_globalObject$EventTa) {\n    _inherits(WebSocket, _globalObject$EventTa);\n\n    var _super = _createSuper(WebSocket);\n\n    function WebSocket(url) {\n      var _this;\n\n      _classCallCheck(this, WebSocket);\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to construct 'WebSocket': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      var args = [];\n      {\n        var curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'WebSocket': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        var _curArg = arguments[1];\n\n        if (_curArg !== undefined) {\n          if (utils.isObject(_curArg)) {\n            if (_curArg[Symbol.iterator] !== undefined) {\n              if (!utils.isObject(_curArg)) {\n                throw new TypeError(\"Failed to construct 'WebSocket': parameter 2\" + \" sequence\" + \" is not an iterable object.\");\n              } else {\n                var V = [];\n                var tmp = _curArg;\n\n                var _iterator = _createForOfIteratorHelper(tmp),\n                    _step;\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    var nextItem = _step.value;\n                    nextItem = conversions[\"DOMString\"](nextItem, {\n                      context: \"Failed to construct 'WebSocket': parameter 2\" + \" sequence\" + \"'s element\"\n                    });\n                    V.push(nextItem);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                _curArg = V;\n              }\n            } else {}\n          } else {\n            _curArg = conversions[\"DOMString\"](_curArg, {\n              context: \"Failed to construct 'WebSocket': parameter 2\"\n            });\n          }\n        } else {\n          _curArg = [];\n        }\n\n        args.push(_curArg);\n      }\n      return _possibleConstructorReturn(_this, exports.setup(Object.create((this instanceof WebSocket ? this.constructor : void 0).prototype), globalObject, args));\n    }\n\n    _createClass(WebSocket, [{\n      key: \"close\",\n      value: function close() {\n        var _esValue$implSymbol;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'close' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg !== undefined) {\n            curArg = conversions[\"unsigned short\"](curArg, {\n              context: \"Failed to execute 'close' on 'WebSocket': parameter 1\",\n              clamp: true\n            });\n          }\n\n          args.push(curArg);\n        }\n        {\n          var _curArg2 = arguments[1];\n\n          if (_curArg2 !== undefined) {\n            _curArg2 = conversions[\"USVString\"](_curArg2, {\n              context: \"Failed to execute 'close' on 'WebSocket': parameter 2\"\n            });\n          }\n\n          args.push(_curArg2);\n        }\n        return (_esValue$implSymbol = esValue[implSymbol]).close.apply(_esValue$implSymbol, args);\n      }\n    }, {\n      key: \"send\",\n      value: function send(data) {\n        var _esValue$implSymbol2;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'send' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'send' on 'WebSocket': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (Blob.is(curArg)) {\n            {\n              var _curArg3 = arguments[0];\n              _curArg3 = Blob.convert(_curArg3, {\n                context: \"Failed to execute 'send' on 'WebSocket': parameter 1\"\n              });\n              args.push(_curArg3);\n            }\n          } else if (utils.isArrayBuffer(curArg)) {\n            {\n              var _curArg4 = arguments[0];\n              _curArg4 = conversions[\"ArrayBuffer\"](_curArg4, {\n                context: \"Failed to execute 'send' on 'WebSocket': parameter 1\"\n              });\n              args.push(_curArg4);\n            }\n          } else if (ArrayBuffer.isView(curArg)) {\n            {\n              var _curArg5 = arguments[0];\n\n              if (ArrayBuffer.isView(_curArg5)) {} else {\n                throw new TypeError(\"Failed to execute 'send' on 'WebSocket': parameter 1\" + \" is not of any supported type.\");\n              }\n\n              args.push(_curArg5);\n            }\n          } else {\n            {\n              var _curArg6 = arguments[0];\n              _curArg6 = conversions[\"USVString\"](_curArg6, {\n                context: \"Failed to execute 'send' on 'WebSocket': parameter 1\"\n              });\n              args.push(_curArg6);\n            }\n          }\n        }\n        return (_esValue$implSymbol2 = esValue[implSymbol]).send.apply(_esValue$implSymbol2, args);\n      }\n    }, {\n      key: \"url\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get url' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        return esValue[implSymbol][\"url\"];\n      }\n    }, {\n      key: \"readyState\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get readyState' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        return esValue[implSymbol][\"readyState\"];\n      }\n    }, {\n      key: \"bufferedAmount\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get bufferedAmount' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        return esValue[implSymbol][\"bufferedAmount\"];\n      }\n    }, {\n      key: \"onopen\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get onopen' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"onopen\"]);\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set onopen' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        if (!utils.isObject(V)) {\n          V = null;\n        } else {\n          V = EventHandlerNonNull.convert(V, {\n            context: \"Failed to set the 'onopen' property on 'WebSocket': The provided value\"\n          });\n        }\n\n        esValue[implSymbol][\"onopen\"] = V;\n      }\n    }, {\n      key: \"onerror\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get onerror' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"onerror\"]);\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set onerror' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        if (!utils.isObject(V)) {\n          V = null;\n        } else {\n          V = EventHandlerNonNull.convert(V, {\n            context: \"Failed to set the 'onerror' property on 'WebSocket': The provided value\"\n          });\n        }\n\n        esValue[implSymbol][\"onerror\"] = V;\n      }\n    }, {\n      key: \"onclose\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get onclose' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"onclose\"]);\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set onclose' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        if (!utils.isObject(V)) {\n          V = null;\n        } else {\n          V = EventHandlerNonNull.convert(V, {\n            context: \"Failed to set the 'onclose' property on 'WebSocket': The provided value\"\n          });\n        }\n\n        esValue[implSymbol][\"onclose\"] = V;\n      }\n    }, {\n      key: \"extensions\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get extensions' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        return esValue[implSymbol][\"extensions\"];\n      }\n    }, {\n      key: \"protocol\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get protocol' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        return esValue[implSymbol][\"protocol\"];\n      }\n    }, {\n      key: \"onmessage\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get onmessage' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"onmessage\"]);\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set onmessage' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        if (!utils.isObject(V)) {\n          V = null;\n        } else {\n          V = EventHandlerNonNull.convert(V, {\n            context: \"Failed to set the 'onmessage' property on 'WebSocket': The provided value\"\n          });\n        }\n\n        esValue[implSymbol][\"onmessage\"] = V;\n      }\n    }, {\n      key: \"binaryType\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get binaryType' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"binaryType\"]);\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set binaryType' called on an object that is not a valid instance of WebSocket.\");\n        }\n\n        V = \"\".concat(V);\n\n        if (!BinaryType.enumerationValues.has(V)) {\n          return;\n        }\n\n        esValue[implSymbol][\"binaryType\"] = V;\n      }\n    }]);\n\n    return WebSocket;\n  }(globalObject.EventTarget);\n\n  Object.defineProperties(WebSocket.prototype, (_Object$definePropert = {\n    close: {\n      enumerable: true\n    },\n    send: {\n      enumerable: true\n    },\n    url: {\n      enumerable: true\n    },\n    readyState: {\n      enumerable: true\n    },\n    bufferedAmount: {\n      enumerable: true\n    },\n    onopen: {\n      enumerable: true\n    },\n    onerror: {\n      enumerable: true\n    },\n    onclose: {\n      enumerable: true\n    },\n    extensions: {\n      enumerable: true\n    },\n    protocol: {\n      enumerable: true\n    },\n    onmessage: {\n      enumerable: true\n    },\n    binaryType: {\n      enumerable: true\n    }\n  }, _defineProperty(_Object$definePropert, Symbol.toStringTag, {\n    value: \"WebSocket\",\n    configurable: true\n  }), _defineProperty(_Object$definePropert, \"CONNECTING\", {\n    value: 0,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"OPEN\", {\n    value: 1,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"CLOSING\", {\n    value: 2,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"CLOSED\", {\n    value: 3,\n    enumerable: true\n  }), _Object$definePropert));\n  Object.defineProperties(WebSocket, {\n    CONNECTING: {\n      value: 0,\n      enumerable: true\n    },\n    OPEN: {\n      value: 1,\n      enumerable: true\n    },\n    CLOSING: {\n      value: 2,\n      enumerable: true\n    },\n    CLOSED: {\n      value: 3,\n      enumerable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = WebSocket;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: WebSocket\n  });\n};\n\nvar Impl = require(\"../websockets/WebSocket-impl.js\");","map":null,"metadata":{},"sourceType":"script"}