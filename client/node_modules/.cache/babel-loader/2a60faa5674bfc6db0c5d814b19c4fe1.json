{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar Node = require(\"./Node.js\");\n\nvar ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nvar ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\nvar interfaceName = \"DocumentFragment\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'DocumentFragment'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"DocumentFragment\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor DocumentFragment is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {\n  Node._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  var _Object$definePropert;\n\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  if (globalObject.Node === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate DocumentFragment before Node\");\n  }\n\n  var DocumentFragment = /*#__PURE__*/function (_globalObject$Node) {\n    _inherits(DocumentFragment, _globalObject$Node);\n\n    var _super = _createSuper(DocumentFragment);\n\n    function DocumentFragment() {\n      var _this;\n\n      _classCallCheck(this, DocumentFragment);\n\n      return _possibleConstructorReturn(_this, exports.setup(Object.create((this instanceof DocumentFragment ? this.constructor : void 0).prototype), globalObject, undefined));\n    }\n\n    _createClass(DocumentFragment, [{\n      key: \"getElementById\",\n      value: function getElementById(elementId) {\n        var _esValue$implSymbol;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getElementById' called on an object that is not a valid instance of DocumentFragment.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'getElementById' on 'DocumentFragment': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'getElementById' on 'DocumentFragment': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol = esValue[implSymbol]).getElementById.apply(_esValue$implSymbol, args));\n      }\n    }, {\n      key: \"prepend\",\n      value: function prepend() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'prepend' called on an object that is not a valid instance of DocumentFragment.\");\n        }\n\n        var args = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var curArg = arguments[i];\n\n          if (Node.is(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'prepend' on 'DocumentFragment': parameter \" + (i + 1)\n            });\n          }\n\n          args.push(curArg);\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol2;\n\n          return (_esValue$implSymbol2 = esValue[implSymbol]).prepend.apply(_esValue$implSymbol2, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"append\",\n      value: function append() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'append' called on an object that is not a valid instance of DocumentFragment.\");\n        }\n\n        var args = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var curArg = arguments[i];\n\n          if (Node.is(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'append' on 'DocumentFragment': parameter \" + (i + 1)\n            });\n          }\n\n          args.push(curArg);\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol3;\n\n          return (_esValue$implSymbol3 = esValue[implSymbol]).append.apply(_esValue$implSymbol3, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"replaceChildren\",\n      value: function replaceChildren() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'replaceChildren' called on an object that is not a valid instance of DocumentFragment.\");\n        }\n\n        var args = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var curArg = arguments[i];\n\n          if (Node.is(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'replaceChildren' on 'DocumentFragment': parameter \" + (i + 1)\n            });\n          }\n\n          args.push(curArg);\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol4;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol4 = esValue[implSymbol]).replaceChildren.apply(_esValue$implSymbol4, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"querySelector\",\n      value: function querySelector(selectors) {\n        var _esValue$implSymbol5;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'querySelector' called on an object that is not a valid instance of DocumentFragment.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'querySelector' on 'DocumentFragment': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'querySelector' on 'DocumentFragment': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol5 = esValue[implSymbol]).querySelector.apply(_esValue$implSymbol5, args));\n      }\n    }, {\n      key: \"querySelectorAll\",\n      value: function querySelectorAll(selectors) {\n        var _esValue$implSymbol6;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'querySelectorAll' called on an object that is not a valid instance of DocumentFragment.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'querySelectorAll' on 'DocumentFragment': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'querySelectorAll' on 'DocumentFragment': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol6 = esValue[implSymbol]).querySelectorAll.apply(_esValue$implSymbol6, args));\n      }\n    }, {\n      key: \"children\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get children' called on an object that is not a valid instance of DocumentFragment.\");\n        }\n\n        return utils.getSameObject(this, \"children\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"children\"]);\n        });\n      }\n    }, {\n      key: \"firstElementChild\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get firstElementChild' called on an object that is not a valid instance of DocumentFragment.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"firstElementChild\"]);\n      }\n    }, {\n      key: \"lastElementChild\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get lastElementChild' called on an object that is not a valid instance of DocumentFragment.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"lastElementChild\"]);\n      }\n    }, {\n      key: \"childElementCount\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get childElementCount' called on an object that is not a valid instance of DocumentFragment.\");\n        }\n\n        return esValue[implSymbol][\"childElementCount\"];\n      }\n    }]);\n\n    return DocumentFragment;\n  }(globalObject.Node);\n\n  Object.defineProperties(DocumentFragment.prototype, (_Object$definePropert = {\n    getElementById: {\n      enumerable: true\n    },\n    prepend: {\n      enumerable: true\n    },\n    append: {\n      enumerable: true\n    },\n    replaceChildren: {\n      enumerable: true\n    },\n    querySelector: {\n      enumerable: true\n    },\n    querySelectorAll: {\n      enumerable: true\n    },\n    children: {\n      enumerable: true\n    },\n    firstElementChild: {\n      enumerable: true\n    },\n    lastElementChild: {\n      enumerable: true\n    },\n    childElementCount: {\n      enumerable: true\n    }\n  }, _defineProperty(_Object$definePropert, Symbol.toStringTag, {\n    value: \"DocumentFragment\",\n    configurable: true\n  }), _defineProperty(_Object$definePropert, Symbol.unscopables, {\n    value: {\n      prepend: true,\n      append: true,\n      replaceChildren: true,\n      __proto__: null\n    },\n    configurable: true\n  }), _Object$definePropert));\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = DocumentFragment;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: DocumentFragment\n  });\n};\n\nvar Impl = require(\"../nodes/DocumentFragment-impl.js\");","map":null,"metadata":{},"sourceType":"script"}