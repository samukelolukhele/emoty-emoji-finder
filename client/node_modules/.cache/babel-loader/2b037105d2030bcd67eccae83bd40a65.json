{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\nvar interfaceName = \"URL\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (globalObject, value) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new globalObject.TypeError(\"\".concat(context, \" is not of type 'URL'.\"));\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  var proto;\n\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URL\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject, newTarget) {\n  var wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = function (globalObject, globalNames) {\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  var ctorRegistry = utils.initCtorRegistry(globalObject);\n\n  var URL = /*#__PURE__*/function () {\n    function URL(url) {\n      _classCallCheck(this, URL);\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\"Failed to construct 'URL': 1 argument required, but only \".concat(arguments.length, \" present.\"));\n      }\n\n      var args = [];\n      {\n        var curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'URL': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        var _curArg = arguments[1];\n\n        if (_curArg !== undefined) {\n          _curArg = conversions[\"USVString\"](_curArg, {\n            context: \"Failed to construct 'URL': parameter 2\",\n            globals: globalObject\n          });\n        }\n\n        args.push(_curArg);\n      }\n      return exports.setup(Object.create((this instanceof URL ? this.constructor : void 0).prototype), globalObject, args);\n    }\n\n    _createClass(URL, [{\n      key: \"toJSON\",\n      value: function toJSON() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'toJSON' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol].toJSON();\n      }\n    }, {\n      key: \"href\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get href' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"href\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'set href' called on an object that is not a valid instance of URL.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'href' property on 'URL': The provided value\",\n          globals: globalObject\n        });\n        esValue[implSymbol][\"href\"] = V;\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        var esValue = this;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'toString' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"href\"];\n      }\n    }, {\n      key: \"origin\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get origin' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"origin\"];\n      }\n    }, {\n      key: \"protocol\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get protocol' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"protocol\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'set protocol' called on an object that is not a valid instance of URL.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'protocol' property on 'URL': The provided value\",\n          globals: globalObject\n        });\n        esValue[implSymbol][\"protocol\"] = V;\n      }\n    }, {\n      key: \"username\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get username' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"username\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'set username' called on an object that is not a valid instance of URL.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'username' property on 'URL': The provided value\",\n          globals: globalObject\n        });\n        esValue[implSymbol][\"username\"] = V;\n      }\n    }, {\n      key: \"password\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get password' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"password\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'set password' called on an object that is not a valid instance of URL.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'password' property on 'URL': The provided value\",\n          globals: globalObject\n        });\n        esValue[implSymbol][\"password\"] = V;\n      }\n    }, {\n      key: \"host\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get host' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"host\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'set host' called on an object that is not a valid instance of URL.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'host' property on 'URL': The provided value\",\n          globals: globalObject\n        });\n        esValue[implSymbol][\"host\"] = V;\n      }\n    }, {\n      key: \"hostname\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get hostname' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"hostname\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'set hostname' called on an object that is not a valid instance of URL.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'hostname' property on 'URL': The provided value\",\n          globals: globalObject\n        });\n        esValue[implSymbol][\"hostname\"] = V;\n      }\n    }, {\n      key: \"port\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get port' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"port\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'set port' called on an object that is not a valid instance of URL.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'port' property on 'URL': The provided value\",\n          globals: globalObject\n        });\n        esValue[implSymbol][\"port\"] = V;\n      }\n    }, {\n      key: \"pathname\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get pathname' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"pathname\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'set pathname' called on an object that is not a valid instance of URL.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'pathname' property on 'URL': The provided value\",\n          globals: globalObject\n        });\n        esValue[implSymbol][\"pathname\"] = V;\n      }\n    }, {\n      key: \"search\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get search' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"search\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'set search' called on an object that is not a valid instance of URL.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'search' property on 'URL': The provided value\",\n          globals: globalObject\n        });\n        esValue[implSymbol][\"search\"] = V;\n      }\n    }, {\n      key: \"searchParams\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get searchParams' called on an object that is not a valid instance of URL.\");\n        }\n\n        return utils.getSameObject(this, \"searchParams\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"searchParams\"]);\n        });\n      }\n    }, {\n      key: \"hash\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get hash' called on an object that is not a valid instance of URL.\");\n        }\n\n        return esValue[implSymbol][\"hash\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'set hash' called on an object that is not a valid instance of URL.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'hash' property on 'URL': The provided value\",\n          globals: globalObject\n        });\n        esValue[implSymbol][\"hash\"] = V;\n      }\n    }]);\n\n    return URL;\n  }();\n\n  Object.defineProperties(URL.prototype, _defineProperty({\n    toJSON: {\n      enumerable: true\n    },\n    href: {\n      enumerable: true\n    },\n    toString: {\n      enumerable: true\n    },\n    origin: {\n      enumerable: true\n    },\n    protocol: {\n      enumerable: true\n    },\n    username: {\n      enumerable: true\n    },\n    password: {\n      enumerable: true\n    },\n    host: {\n      enumerable: true\n    },\n    hostname: {\n      enumerable: true\n    },\n    port: {\n      enumerable: true\n    },\n    pathname: {\n      enumerable: true\n    },\n    search: {\n      enumerable: true\n    },\n    searchParams: {\n      enumerable: true\n    },\n    hash: {\n      enumerable: true\n    }\n  }, Symbol.toStringTag, {\n    value: \"URL\",\n    configurable: true\n  }));\n  ctorRegistry[interfaceName] = URL;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URL\n  });\n\n  if (globalNames.includes(\"Window\")) {\n    Object.defineProperty(globalObject, \"webkitURL\", {\n      configurable: true,\n      writable: true,\n      value: URL\n    });\n  }\n};\n\nvar Impl = require(\"./URL-impl.js\");","map":null,"metadata":{},"sourceType":"script"}