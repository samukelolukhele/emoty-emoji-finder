{"ast":null,"code":"\"use strict\";\n/* eslint-disable no-process-exit */\n\nvar util = require(\"util\");\n\nvar _require = require(\"../../../..\"),\n    JSDOM = _require.JSDOM;\n\nvar _require2 = require(\"./xhr-utils\"),\n    READY_STATES = _require2.READY_STATES;\n\nvar idlUtils = require(\"../generated/utils\");\n\nvar tough = require(\"tough-cookie\");\n\nvar dom = new JSDOM();\nvar xhr = new dom.window.XMLHttpRequest();\nvar xhrImpl = idlUtils.implForWrapper(xhr);\nvar chunks = [];\nprocess.stdin.on(\"data\", function (chunk) {\n  chunks.push(chunk);\n});\nprocess.stdin.on(\"end\", function () {\n  var buffer = Buffer.concat(chunks);\n  var flag = JSON.parse(buffer.toString());\n\n  if (flag.body && flag.body.type === \"Buffer\" && flag.body.data) {\n    flag.body = Buffer.from(flag.body.data);\n  }\n\n  if (flag.cookieJar) {\n    flag.cookieJar = tough.CookieJar.fromJSON(flag.cookieJar);\n  }\n\n  flag.synchronous = false;\n  Object.assign(xhrImpl.flag, flag);\n  var properties = xhrImpl.properties;\n  xhrImpl.readyState = READY_STATES.OPENED;\n\n  try {\n    xhr.addEventListener(\"loadend\", function () {\n      if (properties.error) {\n        properties.error = properties.error.stack || util.inspect(properties.error);\n      }\n\n      process.stdout.write(JSON.stringify({\n        responseURL: xhrImpl.responseURL,\n        status: xhrImpl.status,\n        statusText: xhrImpl.statusText,\n        properties: properties\n      }), function () {\n        process.exit(0);\n      });\n    }, false);\n    xhr.send(flag.body);\n  } catch (error) {\n    properties.error += error.stack || util.inspect(error);\n    process.stdout.write(JSON.stringify({\n      responseURL: xhrImpl.responseURL,\n      status: xhrImpl.status,\n      statusText: xhrImpl.statusText,\n      properties: properties\n    }), function () {\n      process.exit(0);\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"script"}