{"ast":null,"code":"\"use strict\";\n\nvar NODE_TYPE = require(\"../node-type\");\n\nvar _require = require(\"./internal-constants\"),\n    domSymbolTree = _require.domSymbolTree; // https://dom.spec.whatwg.org/#concept-node-length\n\n\nfunction nodeLength(node) {\n  switch (node.nodeType) {\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n      return 0;\n\n    case NODE_TYPE.TEXT_NODE:\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n    case NODE_TYPE.COMMENT_NODE:\n      return node.data.length;\n\n    default:\n      return domSymbolTree.childrenCount(node);\n  }\n} // https://dom.spec.whatwg.org/#concept-tree-root\n\n\nfunction nodeRoot(node) {\n  while (domSymbolTree.parent(node)) {\n    node = domSymbolTree.parent(node);\n  }\n\n  return node;\n} // https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\n\n\nfunction isInclusiveAncestor(ancestorNode, node) {\n  while (node) {\n    if (ancestorNode === node) {\n      return true;\n    }\n\n    node = domSymbolTree.parent(node);\n  }\n\n  return false;\n} // https://dom.spec.whatwg.org/#concept-tree-following\n\n\nfunction isFollowing(nodeA, nodeB) {\n  if (nodeA === nodeB) {\n    return false;\n  }\n\n  var current = nodeB;\n\n  while (current) {\n    if (current === nodeA) {\n      return true;\n    }\n\n    current = domSymbolTree.following(current);\n  }\n\n  return false;\n}\n\nmodule.exports = {\n  nodeLength: nodeLength,\n  nodeRoot: nodeRoot,\n  isInclusiveAncestor: isInclusiveAncestor,\n  isFollowing: isFollowing\n};","map":null,"metadata":{},"sourceType":"script"}