{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require(\"../../utils\"),\n    mixin = _require.mixin;\n\nvar SVGNumber = require(\"../generated/SVGNumber\");\n\nvar SVGGraphicsElementImpl = require(\"./SVGGraphicsElement-impl\").implementation;\n\nvar WindowEventHandlersImpl = require(\"./WindowEventHandlers-impl\").implementation;\n\nvar _require2 = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require2.domSymbolTree;\n\nvar _require3 = require(\"../node-type\"),\n    ELEMENT_NODE = _require3.ELEMENT_NODE;\n\nvar SVGSVGElementImpl = /*#__PURE__*/function (_SVGGraphicsElementIm) {\n  _inherits(SVGSVGElementImpl, _SVGGraphicsElementIm);\n\n  var _super = _createSuper(SVGSVGElementImpl);\n\n  function SVGSVGElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, SVGSVGElementImpl);\n\n    _this = _super.call(this, globalObject, args, privateData);\n\n    _this._proxyWindowEventsToWindow();\n\n    return _this;\n  }\n\n  _createClass(SVGSVGElementImpl, [{\n    key: \"createSVGNumber\",\n    value: function createSVGNumber() {\n      return SVGNumber.createImpl(this._globalObject, [], {});\n    }\n  }, {\n    key: \"getElementById\",\n    value: function getElementById(elementId) {\n      // TODO: optimize with _ids caching trick; see Document class.\n      var _iterator = _createForOfIteratorHelper(domSymbolTree.treeIterator(this)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var node = _step.value;\n\n          if (node.nodeType === ELEMENT_NODE && node.getAttributeNS(null, \"id\") === elementId) {\n            return node;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"suspendRedraw\",\n    value: function suspendRedraw() {\n      return 1;\n    }\n  }, {\n    key: \"unsuspendRedraw\",\n    value: function unsuspendRedraw() {}\n  }, {\n    key: \"unsuspendRedrawAll\",\n    value: function unsuspendRedrawAll() {}\n  }, {\n    key: \"forceRedraw\",\n    value: function forceRedraw() {}\n  }]);\n\n  return SVGSVGElementImpl;\n}(SVGGraphicsElementImpl);\n\nmixin(SVGSVGElementImpl.prototype, WindowEventHandlersImpl.prototype);\nmodule.exports = {\n  implementation: SVGSVGElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}