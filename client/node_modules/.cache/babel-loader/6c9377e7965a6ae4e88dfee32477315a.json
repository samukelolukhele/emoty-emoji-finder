{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nvar ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\nvar interfaceName = \"DOMTokenList\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'DOMTokenList'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"DOMTokenList\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor DOMTokenList is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper = new Proxy(wrapper, proxyHandler);\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper = new Proxy(wrapper, proxyHandler);\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  var _Object$definePropert;\n\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  var DOMTokenList = /*#__PURE__*/function () {\n    function DOMTokenList() {\n      _classCallCheck(this, DOMTokenList);\n\n      throw new TypeError(\"Illegal constructor\");\n    }\n\n    _createClass(DOMTokenList, [{\n      key: \"item\",\n      value: function item(index) {\n        var _esValue$implSymbol;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'item' called on an object that is not a valid instance of DOMTokenList.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'item' on 'DOMTokenList': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"unsigned long\"](curArg, {\n            context: \"Failed to execute 'item' on 'DOMTokenList': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol = esValue[implSymbol]).item.apply(_esValue$implSymbol, args);\n      }\n    }, {\n      key: \"contains\",\n      value: function contains(token) {\n        var _esValue$implSymbol2;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'contains' called on an object that is not a valid instance of DOMTokenList.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'contains' on 'DOMTokenList': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'contains' on 'DOMTokenList': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol2 = esValue[implSymbol]).contains.apply(_esValue$implSymbol2, args);\n      }\n    }, {\n      key: \"add\",\n      value: function add() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'add' called on an object that is not a valid instance of DOMTokenList.\");\n        }\n\n        var args = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var curArg = arguments[i];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'add' on 'DOMTokenList': parameter \" + (i + 1)\n          });\n          args.push(curArg);\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol3;\n\n          return (_esValue$implSymbol3 = esValue[implSymbol]).add.apply(_esValue$implSymbol3, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"remove\",\n      value: function remove() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'remove' called on an object that is not a valid instance of DOMTokenList.\");\n        }\n\n        var args = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var curArg = arguments[i];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'remove' on 'DOMTokenList': parameter \" + (i + 1)\n          });\n          args.push(curArg);\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol4;\n\n          return (_esValue$implSymbol4 = esValue[implSymbol]).remove.apply(_esValue$implSymbol4, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"toggle\",\n      value: function toggle(token) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'toggle' called on an object that is not a valid instance of DOMTokenList.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'toggle' on 'DOMTokenList': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'toggle' on 'DOMTokenList': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg = arguments[1];\n\n          if (_curArg !== undefined) {\n            _curArg = conversions[\"boolean\"](_curArg, {\n              context: \"Failed to execute 'toggle' on 'DOMTokenList': parameter 2\"\n            });\n          }\n\n          args.push(_curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol5;\n\n          return (_esValue$implSymbol5 = esValue[implSymbol]).toggle.apply(_esValue$implSymbol5, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"replace\",\n      value: function replace(token, newToken) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'replace' called on an object that is not a valid instance of DOMTokenList.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'replace' on 'DOMTokenList': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'replace' on 'DOMTokenList': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg2 = arguments[1];\n          _curArg2 = conversions[\"DOMString\"](_curArg2, {\n            context: \"Failed to execute 'replace' on 'DOMTokenList': parameter 2\"\n          });\n          args.push(_curArg2);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol6;\n\n          return (_esValue$implSymbol6 = esValue[implSymbol]).replace.apply(_esValue$implSymbol6, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"supports\",\n      value: function supports(token) {\n        var _esValue$implSymbol7;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'supports' called on an object that is not a valid instance of DOMTokenList.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'supports' on 'DOMTokenList': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'supports' on 'DOMTokenList': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol7 = esValue[implSymbol]).supports.apply(_esValue$implSymbol7, args);\n      }\n    }, {\n      key: \"length\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get length' called on an object that is not a valid instance of DOMTokenList.\");\n        }\n\n        return esValue[implSymbol][\"length\"];\n      }\n    }, {\n      key: \"value\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get value' called on an object that is not a valid instance of DOMTokenList.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol][\"value\"];\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set value' called on an object that is not a valid instance of DOMTokenList.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'value' property on 'DOMTokenList': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol][\"value\"] = V;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        var esValue = this;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'toString' called on an object that is not a valid instance of DOMTokenList.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol][\"value\"];\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }]);\n\n    return DOMTokenList;\n  }();\n\n  Object.defineProperties(DOMTokenList.prototype, (_Object$definePropert = {\n    item: {\n      enumerable: true\n    },\n    contains: {\n      enumerable: true\n    },\n    add: {\n      enumerable: true\n    },\n    remove: {\n      enumerable: true\n    },\n    toggle: {\n      enumerable: true\n    },\n    replace: {\n      enumerable: true\n    },\n    supports: {\n      enumerable: true\n    },\n    length: {\n      enumerable: true\n    },\n    value: {\n      enumerable: true\n    },\n    toString: {\n      enumerable: true\n    }\n  }, _defineProperty(_Object$definePropert, Symbol.toStringTag, {\n    value: \"DOMTokenList\",\n    configurable: true\n  }), _defineProperty(_Object$definePropert, Symbol.iterator, {\n    value: Array.prototype[Symbol.iterator],\n    configurable: true,\n    writable: true\n  }), _defineProperty(_Object$definePropert, \"keys\", {\n    value: Array.prototype.keys,\n    configurable: true,\n    enumerable: true,\n    writable: true\n  }), _defineProperty(_Object$definePropert, \"values\", {\n    value: Array.prototype[Symbol.iterator],\n    configurable: true,\n    enumerable: true,\n    writable: true\n  }), _defineProperty(_Object$definePropert, \"entries\", {\n    value: Array.prototype.entries,\n    configurable: true,\n    enumerable: true,\n    writable: true\n  }), _defineProperty(_Object$definePropert, \"forEach\", {\n    value: Array.prototype.forEach,\n    configurable: true,\n    enumerable: true,\n    writable: true\n  }), _Object$definePropert));\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = DOMTokenList;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: DOMTokenList\n  });\n};\n\nvar proxyHandler = {\n  get: function get(target, P, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.get(target, P, receiver);\n    }\n\n    var desc = this.getOwnPropertyDescriptor(target, P);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(target);\n\n      if (parent === null) {\n        return undefined;\n      }\n\n      return Reflect.get(target, P, receiver);\n    }\n\n    if (!desc.get && !desc.set) {\n      return desc.value;\n    }\n\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return Reflect.apply(getter, receiver, []);\n  },\n  has: function has(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.has(target, P);\n    }\n\n    var desc = this.getOwnPropertyDescriptor(target, P);\n\n    if (desc !== undefined) {\n      return true;\n    }\n\n    var parent = Object.getPrototypeOf(target);\n\n    if (parent !== null) {\n      return Reflect.has(parent, P);\n    }\n\n    return false;\n  },\n  ownKeys: function ownKeys(target) {\n    var keys = new Set();\n\n    var _iterator = _createForOfIteratorHelper(target[implSymbol][utils.supportedPropertyIndices]),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var key = _step.value;\n        keys.add(\"\".concat(key));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var _iterator2 = _createForOfIteratorHelper(Reflect.ownKeys(target)),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _key = _step2.value;\n        keys.add(_key);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return _toConsumableArray(keys);\n  },\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.getOwnPropertyDescriptor(target, P);\n    }\n\n    var ignoreNamedProps = false;\n\n    if (utils.isArrayIndexPropName(P)) {\n      var index = P >>> 0;\n      var indexedValue = target[implSymbol].item(index);\n\n      if (indexedValue !== null) {\n        return {\n          writable: false,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n\n      ignoreNamedProps = true;\n    }\n\n    return Reflect.getOwnPropertyDescriptor(target, P);\n  },\n  set: function set(target, P, V, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.set(target, P, V, receiver);\n    } // The `receiver` argument refers to the Proxy exotic object or an object\n    // that inherits from it, whereas `target` refers to the Proxy target:\n\n\n    if (target[implSymbol][utils.wrapperSymbol] === receiver) {}\n\n    var ownDesc;\n\n    if (utils.isArrayIndexPropName(P)) {\n      var index = P >>> 0;\n      var indexedValue = target[implSymbol].item(index);\n\n      if (indexedValue !== null) {\n        ownDesc = {\n          writable: false,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n    }\n\n    if (ownDesc === undefined) {\n      ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n    }\n\n    if (ownDesc === undefined) {\n      var parent = Reflect.getPrototypeOf(target);\n\n      if (parent !== null) {\n        return Reflect.set(parent, P, V, receiver);\n      }\n\n      ownDesc = {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: undefined\n      };\n    }\n\n    if (!ownDesc.writable) {\n      return false;\n    }\n\n    if (!utils.isObject(receiver)) {\n      return false;\n    }\n\n    var existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n    var valueDesc;\n\n    if (existingDesc !== undefined) {\n      if (existingDesc.get || existingDesc.set) {\n        return false;\n      }\n\n      if (!existingDesc.writable) {\n        return false;\n      }\n\n      valueDesc = {\n        value: V\n      };\n    } else {\n      valueDesc = {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: V\n      };\n    }\n\n    return Reflect.defineProperty(receiver, P, valueDesc);\n  },\n  defineProperty: function defineProperty(target, P, desc) {\n    if (typeof P === \"symbol\") {\n      return Reflect.defineProperty(target, P, desc);\n    }\n\n    if (utils.isArrayIndexPropName(P)) {\n      return false;\n    }\n\n    return Reflect.defineProperty(target, P, desc);\n  },\n  deleteProperty: function deleteProperty(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.deleteProperty(target, P);\n    }\n\n    if (utils.isArrayIndexPropName(P)) {\n      var index = P >>> 0;\n      return !(target[implSymbol].item(index) !== null);\n    }\n\n    return Reflect.deleteProperty(target, P);\n  },\n  preventExtensions: function preventExtensions() {\n    return false;\n  }\n};\n\nvar Impl = require(\"../nodes/DOMTokenList-impl.js\");","map":null,"metadata":{},"sourceType":"script"}