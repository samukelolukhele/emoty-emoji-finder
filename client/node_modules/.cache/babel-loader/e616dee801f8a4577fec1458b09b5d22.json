{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar WheelEventInit = require(\"./WheelEventInit.js\");\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nvar MouseEvent = require(\"./MouseEvent.js\");\n\nvar interfaceName = \"WheelEvent\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'WheelEvent'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"WheelEvent\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor WheelEvent is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {\n  MouseEvent._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  var _Object$definePropert;\n\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  if (globalObject.MouseEvent === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate WheelEvent before MouseEvent\");\n  }\n\n  var WheelEvent = /*#__PURE__*/function (_globalObject$MouseEv) {\n    _inherits(WheelEvent, _globalObject$MouseEv);\n\n    var _super = _createSuper(WheelEvent);\n\n    function WheelEvent(type) {\n      var _this;\n\n      _classCallCheck(this, WheelEvent);\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to construct 'WheelEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      var args = [];\n      {\n        var curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to construct 'WheelEvent': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        var _curArg = arguments[1];\n        _curArg = WheelEventInit.convert(_curArg, {\n          context: \"Failed to construct 'WheelEvent': parameter 2\"\n        });\n        args.push(_curArg);\n      }\n      return _possibleConstructorReturn(_this, exports.setup(Object.create((this instanceof WheelEvent ? this.constructor : void 0).prototype), globalObject, args));\n    }\n\n    _createClass(WheelEvent, [{\n      key: \"deltaX\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get deltaX' called on an object that is not a valid instance of WheelEvent.\");\n        }\n\n        return esValue[implSymbol][\"deltaX\"];\n      }\n    }, {\n      key: \"deltaY\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get deltaY' called on an object that is not a valid instance of WheelEvent.\");\n        }\n\n        return esValue[implSymbol][\"deltaY\"];\n      }\n    }, {\n      key: \"deltaZ\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get deltaZ' called on an object that is not a valid instance of WheelEvent.\");\n        }\n\n        return esValue[implSymbol][\"deltaZ\"];\n      }\n    }, {\n      key: \"deltaMode\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get deltaMode' called on an object that is not a valid instance of WheelEvent.\");\n        }\n\n        return esValue[implSymbol][\"deltaMode\"];\n      }\n    }]);\n\n    return WheelEvent;\n  }(globalObject.MouseEvent);\n\n  Object.defineProperties(WheelEvent.prototype, (_Object$definePropert = {\n    deltaX: {\n      enumerable: true\n    },\n    deltaY: {\n      enumerable: true\n    },\n    deltaZ: {\n      enumerable: true\n    },\n    deltaMode: {\n      enumerable: true\n    }\n  }, _defineProperty(_Object$definePropert, Symbol.toStringTag, {\n    value: \"WheelEvent\",\n    configurable: true\n  }), _defineProperty(_Object$definePropert, \"DOM_DELTA_PIXEL\", {\n    value: 0x00,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"DOM_DELTA_LINE\", {\n    value: 0x01,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"DOM_DELTA_PAGE\", {\n    value: 0x02,\n    enumerable: true\n  }), _Object$definePropert));\n  Object.defineProperties(WheelEvent, {\n    DOM_DELTA_PIXEL: {\n      value: 0x00,\n      enumerable: true\n    },\n    DOM_DELTA_LINE: {\n      value: 0x01,\n      enumerable: true\n    },\n    DOM_DELTA_PAGE: {\n      value: 0x02,\n      enumerable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = WheelEvent;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: WheelEvent\n  });\n};\n\nvar Impl = require(\"../events/WheelEvent-impl.js\");","map":null,"metadata":{},"sourceType":"script"}