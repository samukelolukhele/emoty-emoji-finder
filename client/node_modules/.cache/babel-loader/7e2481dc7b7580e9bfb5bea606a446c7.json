{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar HTMLConstructor_helpers_html_constructor = require(\"../helpers/html-constructor.js\").HTMLConstructor;\n\nvar ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nvar ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nvar HTMLTableCaptionElement = require(\"./HTMLTableCaptionElement.js\");\n\nvar HTMLTableSectionElement = require(\"./HTMLTableSectionElement.js\");\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nvar HTMLElement = require(\"./HTMLElement.js\");\n\nvar interfaceName = \"HTMLTableElement\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'HTMLTableElement'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"HTMLTableElement\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor HTMLTableElement is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {\n  HTMLElement._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  if (globalObject.HTMLElement === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate HTMLTableElement before HTMLElement\");\n  }\n\n  var HTMLTableElement = /*#__PURE__*/function (_globalObject$HTMLEle) {\n    _inherits(HTMLTableElement, _globalObject$HTMLEle);\n\n    var _super = _createSuper(HTMLTableElement);\n\n    function HTMLTableElement() {\n      var _this;\n\n      _classCallCheck(this, HTMLTableElement);\n\n      return _possibleConstructorReturn(_this, HTMLConstructor_helpers_html_constructor(globalObject, interfaceName, this instanceof HTMLTableElement ? this.constructor : void 0));\n    }\n\n    _createClass(HTMLTableElement, [{\n      key: \"createCaption\",\n      value: function createCaption() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'createCaption' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].createCaption());\n      }\n    }, {\n      key: \"deleteCaption\",\n      value: function deleteCaption() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'deleteCaption' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol].deleteCaption();\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"createTHead\",\n      value: function createTHead() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'createTHead' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].createTHead());\n      }\n    }, {\n      key: \"deleteTHead\",\n      value: function deleteTHead() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'deleteTHead' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol].deleteTHead();\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"createTFoot\",\n      value: function createTFoot() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'createTFoot' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].createTFoot());\n      }\n    }, {\n      key: \"deleteTFoot\",\n      value: function deleteTFoot() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'deleteTFoot' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol].deleteTFoot();\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"createTBody\",\n      value: function createTBody() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'createTBody' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].createTBody());\n      }\n    }, {\n      key: \"insertRow\",\n      value: function insertRow() {\n        var _esValue$implSymbol;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'insertRow' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg !== undefined) {\n            curArg = conversions[\"long\"](curArg, {\n              context: \"Failed to execute 'insertRow' on 'HTMLTableElement': parameter 1\"\n            });\n          } else {\n            curArg = -1;\n          }\n\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol = esValue[implSymbol]).insertRow.apply(_esValue$implSymbol, args));\n      }\n    }, {\n      key: \"deleteRow\",\n      value: function deleteRow(index) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'deleteRow' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'deleteRow' on 'HTMLTableElement': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"long\"](curArg, {\n            context: \"Failed to execute 'deleteRow' on 'HTMLTableElement': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol2;\n\n          return (_esValue$implSymbol2 = esValue[implSymbol]).deleteRow.apply(_esValue$implSymbol2, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"caption\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get caption' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"caption\"]);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set caption' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        if (V === null || V === undefined) {\n          V = null;\n        } else {\n          V = HTMLTableCaptionElement.convert(V, {\n            context: \"Failed to set the 'caption' property on 'HTMLTableElement': The provided value\"\n          });\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol][\"caption\"] = V;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"tHead\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get tHead' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"tHead\"]);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set tHead' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        if (V === null || V === undefined) {\n          V = null;\n        } else {\n          V = HTMLTableSectionElement.convert(V, {\n            context: \"Failed to set the 'tHead' property on 'HTMLTableElement': The provided value\"\n          });\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol][\"tHead\"] = V;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"tFoot\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get tFoot' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"tFoot\"]);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set tFoot' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        if (V === null || V === undefined) {\n          V = null;\n        } else {\n          V = HTMLTableSectionElement.convert(V, {\n            context: \"Failed to set the 'tFoot' property on 'HTMLTableElement': The provided value\"\n          });\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol][\"tFoot\"] = V;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"tBodies\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get tBodies' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        return utils.getSameObject(this, \"tBodies\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"tBodies\"]);\n        });\n      }\n    }, {\n      key: \"rows\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get rows' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        return utils.getSameObject(this, \"rows\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"rows\"]);\n        });\n      }\n    }, {\n      key: \"align\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get align' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"align\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set align' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'align' property on 'HTMLTableElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"align\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"border\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get border' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"border\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set border' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'border' property on 'HTMLTableElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"border\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"frame\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get frame' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"frame\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set frame' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'frame' property on 'HTMLTableElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"frame\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"rules\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get rules' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"rules\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set rules' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'rules' property on 'HTMLTableElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"rules\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"summary\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get summary' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"summary\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set summary' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'summary' property on 'HTMLTableElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"summary\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"width\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get width' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"width\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set width' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'width' property on 'HTMLTableElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"width\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"bgColor\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get bgColor' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"bgcolor\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set bgColor' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'bgColor' property on 'HTMLTableElement': The provided value\",\n          treatNullAsEmptyString: true\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"bgcolor\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"cellPadding\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get cellPadding' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"cellpadding\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set cellPadding' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'cellPadding' property on 'HTMLTableElement': The provided value\",\n          treatNullAsEmptyString: true\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"cellpadding\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"cellSpacing\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get cellSpacing' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"cellspacing\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set cellSpacing' called on an object that is not a valid instance of HTMLTableElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'cellSpacing' property on 'HTMLTableElement': The provided value\",\n          treatNullAsEmptyString: true\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"cellspacing\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }]);\n\n    return HTMLTableElement;\n  }(globalObject.HTMLElement);\n\n  Object.defineProperties(HTMLTableElement.prototype, _defineProperty({\n    createCaption: {\n      enumerable: true\n    },\n    deleteCaption: {\n      enumerable: true\n    },\n    createTHead: {\n      enumerable: true\n    },\n    deleteTHead: {\n      enumerable: true\n    },\n    createTFoot: {\n      enumerable: true\n    },\n    deleteTFoot: {\n      enumerable: true\n    },\n    createTBody: {\n      enumerable: true\n    },\n    insertRow: {\n      enumerable: true\n    },\n    deleteRow: {\n      enumerable: true\n    },\n    caption: {\n      enumerable: true\n    },\n    tHead: {\n      enumerable: true\n    },\n    tFoot: {\n      enumerable: true\n    },\n    tBodies: {\n      enumerable: true\n    },\n    rows: {\n      enumerable: true\n    },\n    align: {\n      enumerable: true\n    },\n    border: {\n      enumerable: true\n    },\n    frame: {\n      enumerable: true\n    },\n    rules: {\n      enumerable: true\n    },\n    summary: {\n      enumerable: true\n    },\n    width: {\n      enumerable: true\n    },\n    bgColor: {\n      enumerable: true\n    },\n    cellPadding: {\n      enumerable: true\n    },\n    cellSpacing: {\n      enumerable: true\n    }\n  }, Symbol.toStringTag, {\n    value: \"HTMLTableElement\",\n    configurable: true\n  }));\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = HTMLTableElement;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: HTMLTableElement\n  });\n};\n\nvar Impl = require(\"../nodes/HTMLTableElement-impl.js\");","map":null,"metadata":{},"sourceType":"script"}