{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar HTMLConstructor_helpers_html_constructor = require(\"../helpers/html-constructor.js\").HTMLConstructor;\n\nvar parseURLToResultingURLRecord_helpers_document_base_url = require(\"../helpers/document-base-url.js\").parseURLToResultingURLRecord;\n\nvar serializeURLwhatwg_url = require(\"whatwg-url\").serializeURL;\n\nvar ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nvar ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nvar HTMLElement = require(\"./HTMLElement.js\");\n\nvar interfaceName = \"HTMLLinkElement\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'HTMLLinkElement'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"HTMLLinkElement\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor HTMLLinkElement is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {\n  HTMLElement._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  if (globalObject.HTMLElement === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate HTMLLinkElement before HTMLElement\");\n  }\n\n  var HTMLLinkElement = /*#__PURE__*/function (_globalObject$HTMLEle) {\n    _inherits(HTMLLinkElement, _globalObject$HTMLEle);\n\n    var _super = _createSuper(HTMLLinkElement);\n\n    function HTMLLinkElement() {\n      var _this;\n\n      _classCallCheck(this, HTMLLinkElement);\n\n      return _possibleConstructorReturn(_this, HTMLConstructor_helpers_html_constructor(globalObject, interfaceName, this instanceof HTMLLinkElement ? this.constructor : void 0));\n    }\n\n    _createClass(HTMLLinkElement, [{\n      key: \"href\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get href' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"href\");\n\n          if (value === null) {\n            return \"\";\n          }\n\n          var urlRecord = parseURLToResultingURLRecord_helpers_document_base_url(value, esValue[implSymbol]._ownerDocument);\n\n          if (urlRecord !== null) {\n            return serializeURLwhatwg_url(urlRecord);\n          }\n\n          return conversions.USVString(value);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set href' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        V = conversions[\"USVString\"](V, {\n          context: \"Failed to set the 'href' property on 'HTMLLinkElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"href\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"crossOrigin\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get crossOrigin' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"crossorigin\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set crossOrigin' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        if (V === null || V === undefined) {\n          V = null;\n        } else {\n          V = conversions[\"DOMString\"](V, {\n            context: \"Failed to set the 'crossOrigin' property on 'HTMLLinkElement': The provided value\"\n          });\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"crossorigin\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"rel\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get rel' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"rel\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set rel' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'rel' property on 'HTMLLinkElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"rel\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"relList\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get relList' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        return utils.getSameObject(this, \"relList\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"relList\"]);\n        });\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set relList' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        var Q = esValue[\"relList\"];\n\n        if (!utils.isObject(Q)) {\n          throw new TypeError(\"Property 'relList' is not an object\");\n        }\n\n        Reflect.set(Q, \"value\", V);\n      }\n    }, {\n      key: \"media\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get media' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"media\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set media' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'media' property on 'HTMLLinkElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"media\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"hreflang\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get hreflang' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"hreflang\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set hreflang' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'hreflang' property on 'HTMLLinkElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"hreflang\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"type\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get type' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"type\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set type' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'type' property on 'HTMLLinkElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"type\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"charset\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get charset' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"charset\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set charset' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'charset' property on 'HTMLLinkElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"charset\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"rev\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get rev' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"rev\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set rev' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'rev' property on 'HTMLLinkElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"rev\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"target\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get target' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"target\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set target' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'target' property on 'HTMLLinkElement': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"target\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"sheet\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get sheet' called on an object that is not a valid instance of HTMLLinkElement.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"sheet\"]);\n      }\n    }]);\n\n    return HTMLLinkElement;\n  }(globalObject.HTMLElement);\n\n  Object.defineProperties(HTMLLinkElement.prototype, _defineProperty({\n    href: {\n      enumerable: true\n    },\n    crossOrigin: {\n      enumerable: true\n    },\n    rel: {\n      enumerable: true\n    },\n    relList: {\n      enumerable: true\n    },\n    media: {\n      enumerable: true\n    },\n    hreflang: {\n      enumerable: true\n    },\n    type: {\n      enumerable: true\n    },\n    charset: {\n      enumerable: true\n    },\n    rev: {\n      enumerable: true\n    },\n    target: {\n      enumerable: true\n    },\n    sheet: {\n      enumerable: true\n    }\n  }, Symbol.toStringTag, {\n    value: \"HTMLLinkElement\",\n    configurable: true\n  }));\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = HTMLLinkElement;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: HTMLLinkElement\n  });\n};\n\nvar Impl = require(\"../nodes/HTMLLinkElement-impl.js\");","map":null,"metadata":{},"sourceType":"script"}