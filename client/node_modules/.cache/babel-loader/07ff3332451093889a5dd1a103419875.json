{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = void 0;\n\nvar jsdom_1 = require(\"jsdom\");\n\nvar node_fetch_1 = __importDefault(require(\"node-fetch\"));\n\nvar BASE_URL = \"https://emojipedia.org\";\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser() {\n    _classCallCheck(this, Parser);\n  }\n\n  _createClass(Parser, null, [{\n    key: \"getHTML\",\n    value: function () {\n      var _getHTML = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(emoji) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"\".concat(BASE_URL, \"/\").concat(encodeURIComponent(emoji));\n                _context.next = 3;\n                return (0, node_fetch_1.default)(url).then(function (r) {\n                  return r.text();\n                }, function () {\n                  return null;\n                });\n\n              case 3:\n                res = _context.sent;\n                return _context.abrupt(\"return\", res);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getHTML(_x) {\n        return _getHTML.apply(this, arguments);\n      }\n\n      return getHTML;\n    }()\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(html) {\n      var document = new jsdom_1.JSDOM(html).window.document;\n      var res = {\n        emoji: document.title.split(\" \")[0],\n        unicode: Parser.emojiUnicode(document.title.split(\" \")[0]),\n        name: html.split(\"<h1><span class=\\\"emoji\\\">\".concat(document.title.split(\" \")[0], \"</span>\"))[1].split(\"</h1>\")[0].trim(),\n        description: document.querySelector('section[class=\"description\"]').querySelector(\"p\").textContent.trim(),\n        images: [],\n        shortCodes: []\n      };\n      var vendors = document.getElementsByClassName(\"vendor-rollout-target\");\n\n      for (var i = 0; i < vendors.length; i++) {\n        var vendor = vendors[i];\n        var title = vendor.querySelector(\"a\").textContent.trim();\n        var vendorURL = vendor.querySelector(\"img\").src;\n        res.images.push({\n          index: i,\n          vendor: title,\n          url: vendorURL\n        });\n      }\n\n      var shortCodes = document.querySelector('ul[class=\"shortcodes\"]').querySelectorAll('span[class=\"shortcode\"]');\n\n      for (var _i = 0; _i < shortCodes.length; _i++) {\n        var r = shortCodes[_i];\n        res.shortCodes.push(r.textContent.trim());\n      }\n\n      return res;\n    }\n  }, {\n    key: \"emojiUnicode\",\n    value: function emojiUnicode(emoji) {\n      if (emoji.length === 1) return emoji.charCodeAt(0).toString(16);\n      var comp = (emoji.charCodeAt(0) - 0xD800) * 0x400 + (emoji.charCodeAt(1) - 0xDC00) + 0x10000;\n      if (comp < 0) return emoji.charCodeAt(0).toString(16);\n      return comp.toString(16);\n    }\n  }]);\n\n  return Parser;\n}();\n\nexports.Parser = Parser;","map":null,"metadata":{},"sourceType":"script"}