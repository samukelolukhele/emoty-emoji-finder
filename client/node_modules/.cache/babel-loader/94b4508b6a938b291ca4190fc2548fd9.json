{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar notImplemented = require(\"../../browser/not-implemented\");\n\nvar _require = require(\"../helpers/events\"),\n    fireAnEvent = _require.fireAnEvent;\n\nfunction getTimeRangeDummy() {\n  return {\n    length: 0,\n    start: function start() {\n      return 0;\n    },\n    end: function end() {\n      return 0;\n    }\n  };\n}\n\nvar HTMLMediaElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLMediaElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLMediaElementImpl);\n\n  function HTMLMediaElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLMediaElementImpl);\n\n    _this = _super.call(this, globalObject, args, privateData);\n    _this._muted = false;\n    _this._volume = 1.0;\n    _this.readyState = 0;\n    _this.networkState = 0;\n    _this.currentTime = 0;\n    _this.currentSrc = \"\";\n    _this.buffered = getTimeRangeDummy();\n    _this.seeking = false;\n    _this.duration = NaN;\n    _this.paused = true;\n    _this.played = getTimeRangeDummy();\n    _this.seekable = getTimeRangeDummy();\n    _this.ended = false;\n    _this.audioTracks = [];\n    _this.videoTracks = [];\n    _this.textTracks = [];\n    return _this;\n  }\n\n  _createClass(HTMLMediaElementImpl, [{\n    key: \"defaultPlaybackRate\",\n    get: function get() {\n      if (this._defaultPlaybackRate === undefined) {\n        return 1.0;\n      }\n\n      return this._defaultPlaybackRate;\n    },\n    set: function set(v) {\n      if (v === 0.0) {\n        throw DOMException.create(this._globalObject, [\"The operation is not supported.\", \"NotSupportedError\"]);\n      }\n\n      if (this._defaultPlaybackRate !== v) {\n        this._defaultPlaybackRate = v;\n\n        this._dispatchRateChange();\n      }\n    }\n  }, {\n    key: \"playbackRate\",\n    get: function get() {\n      if (this._playbackRate === undefined) {\n        return 1.0;\n      }\n\n      return this._playbackRate;\n    },\n    set: function set(v) {\n      if (v !== this._playbackRate) {\n        this._playbackRate = v;\n\n        this._dispatchRateChange();\n      }\n    }\n  }, {\n    key: \"muted\",\n    get: function get() {\n      return this._muted;\n    },\n    set: function set(v) {\n      if (v !== this._muted) {\n        this._muted = v;\n\n        this._dispatchVolumeChange();\n      }\n    }\n  }, {\n    key: \"defaultMuted\",\n    get: function get() {\n      return this.getAttributeNS(null, \"muted\") !== null;\n    },\n    set: function set(v) {\n      if (v) {\n        this.setAttributeNS(null, \"muted\", v);\n      } else {\n        this.removeAttributeNS(null, \"muted\");\n      }\n    }\n  }, {\n    key: \"volume\",\n    get: function get() {\n      return this._volume;\n    },\n    set: function set(v) {\n      if (v < 0 || v > 1) {\n        throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n      }\n\n      if (this._volume !== v) {\n        this._volume = v;\n\n        this._dispatchVolumeChange();\n      }\n    } // Not (yet) implemented according to spec\n    // Should return sane default values\n\n  }, {\n    key: \"load\",\n    value: function load() {\n      notImplemented(\"HTMLMediaElement.prototype.load\", this._ownerDocument._defaultView);\n    }\n  }, {\n    key: \"canPlayType\",\n    value: function canPlayType() {\n      return \"\";\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      notImplemented(\"HTMLMediaElement.prototype.play\", this._ownerDocument._defaultView);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      notImplemented(\"HTMLMediaElement.prototype.pause\", this._ownerDocument._defaultView);\n    }\n  }, {\n    key: \"addTextTrack\",\n    value: function addTextTrack() {\n      notImplemented(\"HTMLMediaElement.prototype.addTextTrack\", this._ownerDocument._defaultView);\n    }\n  }, {\n    key: \"_dispatchRateChange\",\n    value: function _dispatchRateChange() {\n      fireAnEvent(\"ratechange\", this);\n    }\n  }, {\n    key: \"_dispatchVolumeChange\",\n    value: function _dispatchVolumeChange() {\n      fireAnEvent(\"volumechange\", this);\n    }\n  }]);\n\n  return HTMLMediaElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLMediaElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}