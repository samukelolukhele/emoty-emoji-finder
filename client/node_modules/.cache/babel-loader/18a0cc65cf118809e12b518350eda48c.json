{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _inherits = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samukelolukhele/Desktop/Documents/Udemy Work & Notes/Web Development - App Brewery/ReactJS/React Emojipedia Project/client/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nvar ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nvar Attr = require(\"./Attr.js\");\n\nvar ShadowRootInit = require(\"./ShadowRootInit.js\");\n\nvar Node = require(\"./Node.js\");\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\nvar interfaceName = \"Element\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'Element'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"Element\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor Element is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {\n  Node._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  var _Object$definePropert;\n\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  if (globalObject.Node === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate Element before Node\");\n  }\n\n  var Element = /*#__PURE__*/function (_globalObject$Node) {\n    _inherits(Element, _globalObject$Node);\n\n    var _super = _createSuper(Element);\n\n    function Element() {\n      var _this;\n\n      _classCallCheck(this, Element);\n\n      throw new TypeError(\"Illegal constructor\");\n      return _possibleConstructorReturn(_this);\n    }\n\n    _createClass(Element, [{\n      key: \"hasAttributes\",\n      value: function hasAttributes() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'hasAttributes' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol].hasAttributes();\n      }\n    }, {\n      key: \"getAttributeNames\",\n      value: function getAttributeNames() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getAttributeNames' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].getAttributeNames());\n      }\n    }, {\n      key: \"getAttribute\",\n      value: function getAttribute(qualifiedName) {\n        var _esValue$implSymbol;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getAttribute' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'getAttribute' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'getAttribute' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol = esValue[implSymbol]).getAttribute.apply(_esValue$implSymbol, args);\n      }\n    }, {\n      key: \"getAttributeNS\",\n      value: function getAttributeNS(namespace, localName) {\n        var _esValue$implSymbol2;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getAttributeNS' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'getAttributeNS' on 'Element': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'getAttributeNS' on 'Element': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        {\n          var _curArg = arguments[1];\n          _curArg = conversions[\"DOMString\"](_curArg, {\n            context: \"Failed to execute 'getAttributeNS' on 'Element': parameter 2\"\n          });\n          args.push(_curArg);\n        }\n        return (_esValue$implSymbol2 = esValue[implSymbol]).getAttributeNS.apply(_esValue$implSymbol2, args);\n      }\n    }, {\n      key: \"setAttribute\",\n      value: function setAttribute(qualifiedName, value) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'setAttribute' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'setAttribute' on 'Element': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'setAttribute' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg2 = arguments[1];\n          _curArg2 = conversions[\"DOMString\"](_curArg2, {\n            context: \"Failed to execute 'setAttribute' on 'Element': parameter 2\"\n          });\n          args.push(_curArg2);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol3;\n\n          return (_esValue$implSymbol3 = esValue[implSymbol]).setAttribute.apply(_esValue$implSymbol3, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"setAttributeNS\",\n      value: function setAttributeNS(namespace, qualifiedName, value) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'setAttributeNS' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 3) {\n          throw new TypeError(\"Failed to execute 'setAttributeNS' on 'Element': 3 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'setAttributeNS' on 'Element': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        {\n          var _curArg3 = arguments[1];\n          _curArg3 = conversions[\"DOMString\"](_curArg3, {\n            context: \"Failed to execute 'setAttributeNS' on 'Element': parameter 2\"\n          });\n          args.push(_curArg3);\n        }\n        {\n          var _curArg4 = arguments[2];\n          _curArg4 = conversions[\"DOMString\"](_curArg4, {\n            context: \"Failed to execute 'setAttributeNS' on 'Element': parameter 3\"\n          });\n          args.push(_curArg4);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol4;\n\n          return (_esValue$implSymbol4 = esValue[implSymbol]).setAttributeNS.apply(_esValue$implSymbol4, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"removeAttribute\",\n      value: function removeAttribute(qualifiedName) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'removeAttribute' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'removeAttribute' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'removeAttribute' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol5;\n\n          return (_esValue$implSymbol5 = esValue[implSymbol]).removeAttribute.apply(_esValue$implSymbol5, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"removeAttributeNS\",\n      value: function removeAttributeNS(namespace, localName) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'removeAttributeNS' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'removeAttributeNS' on 'Element': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'removeAttributeNS' on 'Element': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        {\n          var _curArg5 = arguments[1];\n          _curArg5 = conversions[\"DOMString\"](_curArg5, {\n            context: \"Failed to execute 'removeAttributeNS' on 'Element': parameter 2\"\n          });\n          args.push(_curArg5);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol6;\n\n          return (_esValue$implSymbol6 = esValue[implSymbol]).removeAttributeNS.apply(_esValue$implSymbol6, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"toggleAttribute\",\n      value: function toggleAttribute(qualifiedName) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'toggleAttribute' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'toggleAttribute' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'toggleAttribute' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg6 = arguments[1];\n\n          if (_curArg6 !== undefined) {\n            _curArg6 = conversions[\"boolean\"](_curArg6, {\n              context: \"Failed to execute 'toggleAttribute' on 'Element': parameter 2\"\n            });\n          }\n\n          args.push(_curArg6);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol7;\n\n          return (_esValue$implSymbol7 = esValue[implSymbol]).toggleAttribute.apply(_esValue$implSymbol7, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"hasAttribute\",\n      value: function hasAttribute(qualifiedName) {\n        var _esValue$implSymbol8;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'hasAttribute' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'hasAttribute' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'hasAttribute' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol8 = esValue[implSymbol]).hasAttribute.apply(_esValue$implSymbol8, args);\n      }\n    }, {\n      key: \"hasAttributeNS\",\n      value: function hasAttributeNS(namespace, localName) {\n        var _esValue$implSymbol9;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'hasAttributeNS' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'hasAttributeNS' on 'Element': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'hasAttributeNS' on 'Element': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        {\n          var _curArg7 = arguments[1];\n          _curArg7 = conversions[\"DOMString\"](_curArg7, {\n            context: \"Failed to execute 'hasAttributeNS' on 'Element': parameter 2\"\n          });\n          args.push(_curArg7);\n        }\n        return (_esValue$implSymbol9 = esValue[implSymbol]).hasAttributeNS.apply(_esValue$implSymbol9, args);\n      }\n    }, {\n      key: \"getAttributeNode\",\n      value: function getAttributeNode(qualifiedName) {\n        var _esValue$implSymbol10;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getAttributeNode' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'getAttributeNode' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'getAttributeNode' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol10 = esValue[implSymbol]).getAttributeNode.apply(_esValue$implSymbol10, args));\n      }\n    }, {\n      key: \"getAttributeNodeNS\",\n      value: function getAttributeNodeNS(namespace, localName) {\n        var _esValue$implSymbol11;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getAttributeNodeNS' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'getAttributeNodeNS' on 'Element': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'getAttributeNodeNS' on 'Element': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        {\n          var _curArg8 = arguments[1];\n          _curArg8 = conversions[\"DOMString\"](_curArg8, {\n            context: \"Failed to execute 'getAttributeNodeNS' on 'Element': parameter 2\"\n          });\n          args.push(_curArg8);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol11 = esValue[implSymbol]).getAttributeNodeNS.apply(_esValue$implSymbol11, args));\n      }\n    }, {\n      key: \"setAttributeNode\",\n      value: function setAttributeNode(attr) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'setAttributeNode' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'setAttributeNode' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Attr.convert(curArg, {\n            context: \"Failed to execute 'setAttributeNode' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol12;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol12 = esValue[implSymbol]).setAttributeNode.apply(_esValue$implSymbol12, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"setAttributeNodeNS\",\n      value: function setAttributeNodeNS(attr) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'setAttributeNodeNS' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'setAttributeNodeNS' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Attr.convert(curArg, {\n            context: \"Failed to execute 'setAttributeNodeNS' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol13;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol13 = esValue[implSymbol]).setAttributeNodeNS.apply(_esValue$implSymbol13, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"removeAttributeNode\",\n      value: function removeAttributeNode(attr) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'removeAttributeNode' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'removeAttributeNode' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Attr.convert(curArg, {\n            context: \"Failed to execute 'removeAttributeNode' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol14;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol14 = esValue[implSymbol]).removeAttributeNode.apply(_esValue$implSymbol14, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"attachShadow\",\n      value: function attachShadow(init) {\n        var _esValue$implSymbol15;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'attachShadow' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'attachShadow' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = ShadowRootInit.convert(curArg, {\n            context: \"Failed to execute 'attachShadow' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol15 = esValue[implSymbol]).attachShadow.apply(_esValue$implSymbol15, args));\n      }\n    }, {\n      key: \"closest\",\n      value: function closest(selectors) {\n        var _esValue$implSymbol16;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'closest' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'closest' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'closest' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol16 = esValue[implSymbol]).closest.apply(_esValue$implSymbol16, args));\n      }\n    }, {\n      key: \"matches\",\n      value: function matches(selectors) {\n        var _esValue$implSymbol17;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'matches' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'matches' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'matches' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol17 = esValue[implSymbol]).matches.apply(_esValue$implSymbol17, args);\n      }\n    }, {\n      key: \"webkitMatchesSelector\",\n      value: function webkitMatchesSelector(selectors) {\n        var _esValue$implSymbol18;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'webkitMatchesSelector' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'webkitMatchesSelector' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'webkitMatchesSelector' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol18 = esValue[implSymbol]).webkitMatchesSelector.apply(_esValue$implSymbol18, args);\n      }\n    }, {\n      key: \"getElementsByTagName\",\n      value: function getElementsByTagName(qualifiedName) {\n        var _esValue$implSymbol19;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getElementsByTagName' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'getElementsByTagName' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'getElementsByTagName' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol19 = esValue[implSymbol]).getElementsByTagName.apply(_esValue$implSymbol19, args));\n      }\n    }, {\n      key: \"getElementsByTagNameNS\",\n      value: function getElementsByTagNameNS(namespace, localName) {\n        var _esValue$implSymbol20;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getElementsByTagNameNS' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'getElementsByTagNameNS' on 'Element': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'getElementsByTagNameNS' on 'Element': parameter 1\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        {\n          var _curArg9 = arguments[1];\n          _curArg9 = conversions[\"DOMString\"](_curArg9, {\n            context: \"Failed to execute 'getElementsByTagNameNS' on 'Element': parameter 2\"\n          });\n          args.push(_curArg9);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol20 = esValue[implSymbol]).getElementsByTagNameNS.apply(_esValue$implSymbol20, args));\n      }\n    }, {\n      key: \"getElementsByClassName\",\n      value: function getElementsByClassName(classNames) {\n        var _esValue$implSymbol21;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getElementsByClassName' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'getElementsByClassName' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'getElementsByClassName' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol21 = esValue[implSymbol]).getElementsByClassName.apply(_esValue$implSymbol21, args));\n      }\n    }, {\n      key: \"insertAdjacentElement\",\n      value: function insertAdjacentElement(where, element) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'insertAdjacentElement' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'insertAdjacentElement' on 'Element': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'insertAdjacentElement' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg10 = arguments[1];\n          _curArg10 = exports.convert(_curArg10, {\n            context: \"Failed to execute 'insertAdjacentElement' on 'Element': parameter 2\"\n          });\n          args.push(_curArg10);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol22;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol22 = esValue[implSymbol]).insertAdjacentElement.apply(_esValue$implSymbol22, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"insertAdjacentText\",\n      value: function insertAdjacentText(where, data) {\n        var _esValue$implSymbol23;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'insertAdjacentText' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'insertAdjacentText' on 'Element': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'insertAdjacentText' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg11 = arguments[1];\n          _curArg11 = conversions[\"DOMString\"](_curArg11, {\n            context: \"Failed to execute 'insertAdjacentText' on 'Element': parameter 2\"\n          });\n          args.push(_curArg11);\n        }\n        return (_esValue$implSymbol23 = esValue[implSymbol]).insertAdjacentText.apply(_esValue$implSymbol23, args);\n      }\n    }, {\n      key: \"insertAdjacentHTML\",\n      value: function insertAdjacentHTML(position, text) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'insertAdjacentHTML' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'insertAdjacentHTML' on 'Element': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'insertAdjacentHTML' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg12 = arguments[1];\n          _curArg12 = conversions[\"DOMString\"](_curArg12, {\n            context: \"Failed to execute 'insertAdjacentHTML' on 'Element': parameter 2\"\n          });\n          args.push(_curArg12);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol24;\n\n          return (_esValue$implSymbol24 = esValue[implSymbol]).insertAdjacentHTML.apply(_esValue$implSymbol24, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"getClientRects\",\n      value: function getClientRects() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getClientRects' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].getClientRects());\n      }\n    }, {\n      key: \"getBoundingClientRect\",\n      value: function getBoundingClientRect() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'getBoundingClientRect' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].getBoundingClientRect());\n      }\n    }, {\n      key: \"before\",\n      value: function before() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'before' called on an object that is not a valid instance of Element.\");\n        }\n\n        var args = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var curArg = arguments[i];\n\n          if (Node.is(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'before' on 'Element': parameter \" + (i + 1)\n            });\n          }\n\n          args.push(curArg);\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol25;\n\n          return (_esValue$implSymbol25 = esValue[implSymbol]).before.apply(_esValue$implSymbol25, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"after\",\n      value: function after() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'after' called on an object that is not a valid instance of Element.\");\n        }\n\n        var args = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var curArg = arguments[i];\n\n          if (Node.is(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'after' on 'Element': parameter \" + (i + 1)\n            });\n          }\n\n          args.push(curArg);\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol26;\n\n          return (_esValue$implSymbol26 = esValue[implSymbol]).after.apply(_esValue$implSymbol26, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"replaceWith\",\n      value: function replaceWith() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'replaceWith' called on an object that is not a valid instance of Element.\");\n        }\n\n        var args = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var curArg = arguments[i];\n\n          if (Node.is(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'replaceWith' on 'Element': parameter \" + (i + 1)\n            });\n          }\n\n          args.push(curArg);\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol27;\n\n          return (_esValue$implSymbol27 = esValue[implSymbol]).replaceWith.apply(_esValue$implSymbol27, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"remove\",\n      value: function remove() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'remove' called on an object that is not a valid instance of Element.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol].remove();\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"prepend\",\n      value: function prepend() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'prepend' called on an object that is not a valid instance of Element.\");\n        }\n\n        var args = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var curArg = arguments[i];\n\n          if (Node.is(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'prepend' on 'Element': parameter \" + (i + 1)\n            });\n          }\n\n          args.push(curArg);\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol28;\n\n          return (_esValue$implSymbol28 = esValue[implSymbol]).prepend.apply(_esValue$implSymbol28, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"append\",\n      value: function append() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'append' called on an object that is not a valid instance of Element.\");\n        }\n\n        var args = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var curArg = arguments[i];\n\n          if (Node.is(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'append' on 'Element': parameter \" + (i + 1)\n            });\n          }\n\n          args.push(curArg);\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol29;\n\n          return (_esValue$implSymbol29 = esValue[implSymbol]).append.apply(_esValue$implSymbol29, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"replaceChildren\",\n      value: function replaceChildren() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'replaceChildren' called on an object that is not a valid instance of Element.\");\n        }\n\n        var args = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var curArg = arguments[i];\n\n          if (Node.is(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'replaceChildren' on 'Element': parameter \" + (i + 1)\n            });\n          }\n\n          args.push(curArg);\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol30;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol30 = esValue[implSymbol]).replaceChildren.apply(_esValue$implSymbol30, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"querySelector\",\n      value: function querySelector(selectors) {\n        var _esValue$implSymbol31;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'querySelector' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'querySelector' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'querySelector' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol31 = esValue[implSymbol]).querySelector.apply(_esValue$implSymbol31, args));\n      }\n    }, {\n      key: \"querySelectorAll\",\n      value: function querySelectorAll(selectors) {\n        var _esValue$implSymbol32;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'querySelectorAll' called on an object that is not a valid instance of Element.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'querySelectorAll' on 'Element': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'querySelectorAll' on 'Element': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol32 = esValue[implSymbol]).querySelectorAll.apply(_esValue$implSymbol32, args));\n      }\n    }, {\n      key: \"namespaceURI\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get namespaceURI' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"namespaceURI\"];\n      }\n    }, {\n      key: \"prefix\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get prefix' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"prefix\"];\n      }\n    }, {\n      key: \"localName\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get localName' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"localName\"];\n      }\n    }, {\n      key: \"tagName\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get tagName' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"tagName\"];\n      }\n    }, {\n      key: \"id\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get id' called on an object that is not a valid instance of Element.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"id\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set id' called on an object that is not a valid instance of Element.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'id' property on 'Element': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"id\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"className\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get className' called on an object that is not a valid instance of Element.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"class\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set className' called on an object that is not a valid instance of Element.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'className' property on 'Element': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"class\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"classList\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get classList' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.getSameObject(this, \"classList\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"classList\"]);\n        });\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set classList' called on an object that is not a valid instance of Element.\");\n        }\n\n        var Q = esValue[\"classList\"];\n\n        if (!utils.isObject(Q)) {\n          throw new TypeError(\"Property 'classList' is not an object\");\n        }\n\n        Reflect.set(Q, \"value\", V);\n      }\n    }, {\n      key: \"slot\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get slot' called on an object that is not a valid instance of Element.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var value = esValue[implSymbol].getAttributeNS(null, \"slot\");\n          return value === null ? \"\" : value;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set slot' called on an object that is not a valid instance of Element.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'slot' property on 'Element': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol].setAttributeNS(null, \"slot\", V);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"attributes\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get attributes' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.getSameObject(this, \"attributes\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"attributes\"]);\n        });\n      }\n    }, {\n      key: \"shadowRoot\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get shadowRoot' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"shadowRoot\"]);\n      }\n    }, {\n      key: \"outerHTML\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get outerHTML' called on an object that is not a valid instance of Element.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol][\"outerHTML\"];\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set outerHTML' called on an object that is not a valid instance of Element.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'outerHTML' property on 'Element': The provided value\",\n          treatNullAsEmptyString: true\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol][\"outerHTML\"] = V;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"scrollTop\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get scrollTop' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"scrollTop\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set scrollTop' called on an object that is not a valid instance of Element.\");\n        }\n\n        V = conversions[\"unrestricted double\"](V, {\n          context: \"Failed to set the 'scrollTop' property on 'Element': The provided value\"\n        });\n        esValue[implSymbol][\"scrollTop\"] = V;\n      }\n    }, {\n      key: \"scrollLeft\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get scrollLeft' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"scrollLeft\"];\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set scrollLeft' called on an object that is not a valid instance of Element.\");\n        }\n\n        V = conversions[\"unrestricted double\"](V, {\n          context: \"Failed to set the 'scrollLeft' property on 'Element': The provided value\"\n        });\n        esValue[implSymbol][\"scrollLeft\"] = V;\n      }\n    }, {\n      key: \"scrollWidth\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get scrollWidth' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"scrollWidth\"];\n      }\n    }, {\n      key: \"scrollHeight\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get scrollHeight' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"scrollHeight\"];\n      }\n    }, {\n      key: \"clientTop\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get clientTop' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"clientTop\"];\n      }\n    }, {\n      key: \"clientLeft\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get clientLeft' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"clientLeft\"];\n      }\n    }, {\n      key: \"clientWidth\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get clientWidth' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"clientWidth\"];\n      }\n    }, {\n      key: \"clientHeight\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get clientHeight' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"clientHeight\"];\n      }\n    }, {\n      key: \"innerHTML\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get innerHTML' called on an object that is not a valid instance of Element.\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol][\"innerHTML\"];\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'set innerHTML' called on an object that is not a valid instance of Element.\");\n        }\n\n        V = conversions[\"DOMString\"](V, {\n          context: \"Failed to set the 'innerHTML' property on 'Element': The provided value\",\n          treatNullAsEmptyString: true\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          esValue[implSymbol][\"innerHTML\"] = V;\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"previousElementSibling\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get previousElementSibling' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"previousElementSibling\"]);\n      }\n    }, {\n      key: \"nextElementSibling\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get nextElementSibling' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"nextElementSibling\"]);\n      }\n    }, {\n      key: \"children\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get children' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.getSameObject(this, \"children\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"children\"]);\n        });\n      }\n    }, {\n      key: \"firstElementChild\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get firstElementChild' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"firstElementChild\"]);\n      }\n    }, {\n      key: \"lastElementChild\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get lastElementChild' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"lastElementChild\"]);\n      }\n    }, {\n      key: \"childElementCount\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get childElementCount' called on an object that is not a valid instance of Element.\");\n        }\n\n        return esValue[implSymbol][\"childElementCount\"];\n      }\n    }, {\n      key: \"assignedSlot\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"'get assignedSlot' called on an object that is not a valid instance of Element.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"assignedSlot\"]);\n      }\n    }]);\n\n    return Element;\n  }(globalObject.Node);\n\n  Object.defineProperties(Element.prototype, (_Object$definePropert = {\n    hasAttributes: {\n      enumerable: true\n    },\n    getAttributeNames: {\n      enumerable: true\n    },\n    getAttribute: {\n      enumerable: true\n    },\n    getAttributeNS: {\n      enumerable: true\n    },\n    setAttribute: {\n      enumerable: true\n    },\n    setAttributeNS: {\n      enumerable: true\n    },\n    removeAttribute: {\n      enumerable: true\n    },\n    removeAttributeNS: {\n      enumerable: true\n    },\n    toggleAttribute: {\n      enumerable: true\n    },\n    hasAttribute: {\n      enumerable: true\n    },\n    hasAttributeNS: {\n      enumerable: true\n    },\n    getAttributeNode: {\n      enumerable: true\n    },\n    getAttributeNodeNS: {\n      enumerable: true\n    },\n    setAttributeNode: {\n      enumerable: true\n    },\n    setAttributeNodeNS: {\n      enumerable: true\n    },\n    removeAttributeNode: {\n      enumerable: true\n    },\n    attachShadow: {\n      enumerable: true\n    },\n    closest: {\n      enumerable: true\n    },\n    matches: {\n      enumerable: true\n    },\n    webkitMatchesSelector: {\n      enumerable: true\n    },\n    getElementsByTagName: {\n      enumerable: true\n    },\n    getElementsByTagNameNS: {\n      enumerable: true\n    },\n    getElementsByClassName: {\n      enumerable: true\n    },\n    insertAdjacentElement: {\n      enumerable: true\n    },\n    insertAdjacentText: {\n      enumerable: true\n    },\n    insertAdjacentHTML: {\n      enumerable: true\n    },\n    getClientRects: {\n      enumerable: true\n    },\n    getBoundingClientRect: {\n      enumerable: true\n    },\n    before: {\n      enumerable: true\n    },\n    after: {\n      enumerable: true\n    },\n    replaceWith: {\n      enumerable: true\n    },\n    remove: {\n      enumerable: true\n    },\n    prepend: {\n      enumerable: true\n    },\n    append: {\n      enumerable: true\n    },\n    replaceChildren: {\n      enumerable: true\n    },\n    querySelector: {\n      enumerable: true\n    },\n    querySelectorAll: {\n      enumerable: true\n    },\n    namespaceURI: {\n      enumerable: true\n    },\n    prefix: {\n      enumerable: true\n    },\n    localName: {\n      enumerable: true\n    },\n    tagName: {\n      enumerable: true\n    },\n    id: {\n      enumerable: true\n    },\n    className: {\n      enumerable: true\n    },\n    classList: {\n      enumerable: true\n    },\n    slot: {\n      enumerable: true\n    },\n    attributes: {\n      enumerable: true\n    },\n    shadowRoot: {\n      enumerable: true\n    },\n    outerHTML: {\n      enumerable: true\n    },\n    scrollTop: {\n      enumerable: true\n    },\n    scrollLeft: {\n      enumerable: true\n    },\n    scrollWidth: {\n      enumerable: true\n    },\n    scrollHeight: {\n      enumerable: true\n    },\n    clientTop: {\n      enumerable: true\n    },\n    clientLeft: {\n      enumerable: true\n    },\n    clientWidth: {\n      enumerable: true\n    },\n    clientHeight: {\n      enumerable: true\n    },\n    innerHTML: {\n      enumerable: true\n    },\n    previousElementSibling: {\n      enumerable: true\n    },\n    nextElementSibling: {\n      enumerable: true\n    },\n    children: {\n      enumerable: true\n    },\n    firstElementChild: {\n      enumerable: true\n    },\n    lastElementChild: {\n      enumerable: true\n    },\n    childElementCount: {\n      enumerable: true\n    },\n    assignedSlot: {\n      enumerable: true\n    }\n  }, _defineProperty(_Object$definePropert, Symbol.toStringTag, {\n    value: \"Element\",\n    configurable: true\n  }), _defineProperty(_Object$definePropert, Symbol.unscopables, {\n    value: {\n      slot: true,\n      before: true,\n      after: true,\n      replaceWith: true,\n      remove: true,\n      prepend: true,\n      append: true,\n      replaceChildren: true,\n      __proto__: null\n    },\n    configurable: true\n  }), _Object$definePropert));\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = Element;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: Element\n  });\n};\n\nvar Impl = require(\"../nodes/Element-impl.js\");","map":null,"metadata":{},"sourceType":"script"}